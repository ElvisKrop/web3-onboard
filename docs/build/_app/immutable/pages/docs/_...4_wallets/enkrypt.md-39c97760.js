import{S as ss,i as ns,s as es,e as P,t as u,k as x,w as m,c as T,a as q,h as y,d as o,m as B,x as d,b as I,g as p,M as L,y as D,q as C,o as A,B as F,E as Z}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as X}from"../../../chunks/CodeFence-7c02fe57.js";import{L as K}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as as,a as Y}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function ts(r){let n;return{c(){n=u("#")},l(e){n=y(e,"#")},m(e,a){p(e,n,a)},d(e){e&&o(n)}}}function ls(r){let n,e;return n=new X({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/enkrypt
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/enkrypt</span></span>
<span class="line"></span></code></pre>`}}),{c(){m(n.$$.fragment)},l(a){d(n.$$.fragment,a)},m(a,c){D(n,a,c),e=!0},p:Z,i(a){e||(C(n.$$.fragment,a),e=!0)},o(a){A(n.$$.fragment,a),e=!1},d(a){F(n,a)}}}function os(r){let n,e;return n=new X({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/enkrypt
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/enkrypt</span></span>
<span class="line"></span></code></pre>`}}),{c(){m(n.$$.fragment)},l(a){d(n.$$.fragment,a)},m(a,c){D(n,a,c),e=!0},p:Z,i(a){e||(C(n.$$.fragment,a),e=!0)},o(a){A(n.$$.fragment,a),e=!1},d(a){F(n,a)}}}function ps(r){let n,e,a,c;return n=new Y({props:{value:"yarn",$$slots:{default:[ls]},$$scope:{ctx:r}}}),a=new Y({props:{value:"npm",$$slots:{default:[os]},$$scope:{ctx:r}}}),{c(){m(n.$$.fragment),e=x(),m(a.$$.fragment)},l(l){d(n.$$.fragment,l),e=B(l),d(a.$$.fragment,l)},m(l,i){D(n,l,i),p(l,e,i),D(a,l,i),c=!0},p(l,i){const $={};i&1&&($.$$scope={dirty:i,ctx:l}),n.$set($);const f={};i&1&&(f.$$scope={dirty:i,ctx:l}),a.$set(f)},i(l){c||(C(n.$$.fragment,l),C(a.$$.fragment,l),c=!0)},o(l){A(n.$$.fragment,l),A(a.$$.fragment,l),c=!1},d(l){F(n,l),l&&o(e),F(a,l)}}}function rs(r){let n;return{c(){n=u("#")},l(e){n=y(e,"#")},m(e,a){p(e,n,a)},d(e){e&&o(n)}}}function cs(r){let n;return{c(){n=u("#")},l(e){n=y(e,"#")},m(e,a){p(e,n,a)},d(e){e&&o(n)}}}function is(r){let n;return{c(){n=u("here")},l(e){n=y(e,"here")},m(e,a){p(e,n,a)},d(e){e&&o(n)}}}function $s(r){let n,e,a,c,l,i,$,f,N,U,h,j,_,g,Q,z,E,b,w,R,G,v,V,k,J;return f=new K({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[ts]},$$scope:{ctx:r}}}),h=new as({props:{values:["yarn","npm"],$$slots:{default:[ps]},$$scope:{ctx:r}}}),g=new K({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[rs]},$$scope:{ctx:r}}}),E=new X({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> enrkypt </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/enkrypt</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> enrkyptModule </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">enrkypt</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    enrkyptModule</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),w=new K({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[cs]},$$scope:{ctx:r}}}),k=new K({props:{href:"/docs/modules/core#build-environments",$$slots:{default:[is]},$$scope:{ctx:r}}}),{c(){n=P("h1"),e=u("Enkrypt"),a=x(),c=P("p"),l=u("Wallet module for connecting Enkrypt wallet through web3-onboard"),i=x(),$=P("h3"),m(f.$$.fragment),N=u(" Install"),U=x(),m(h.$$.fragment),j=x(),_=P("h2"),m(g.$$.fragment),Q=u(" Usage"),z=x(),m(E.$$.fragment),b=P("h2"),m(w.$$.fragment),R=u(" Build Environments"),G=x(),v=P("p"),V=u("For build env configurations and setups please see the Build Env section "),m(k.$$.fragment),this.h()},l(s){n=T(s,"H1",{});var t=q(n);e=y(t,"Enkrypt"),t.forEach(o),a=B(s),c=T(s,"P",{});var S=q(c);l=y(S,"Wallet module for connecting Enkrypt wallet through web3-onboard"),S.forEach(o),i=B(s),$=T(s,"H3",{id:!0,tabindex:!0});var W=q($);d(f.$$.fragment,W),N=y(W," Install"),W.forEach(o),U=B(s),d(h.$$.fragment,s),j=B(s),_=T(s,"H2",{id:!0,tabindex:!0});var H=q(_);d(g.$$.fragment,H),Q=y(H," Usage"),H.forEach(o),z=B(s),d(E.$$.fragment,s),b=T(s,"H2",{id:!0,tabindex:!0});var M=q(b);d(w.$$.fragment,M),R=y(M," Build Environments"),M.forEach(o),G=B(s),v=T(s,"P",{});var O=q(v);V=y(O,"For build env configurations and setups please see the Build Env section "),d(k.$$.fragment,O),O.forEach(o),this.h()},h(){I($,"id","install"),I($,"tabindex","-1"),I(_,"id","usage"),I(_,"tabindex","-1"),I(b,"id","build-environments"),I(b,"tabindex","-1")},m(s,t){p(s,n,t),L(n,e),p(s,a,t),p(s,c,t),L(c,l),p(s,i,t),p(s,$,t),D(f,$,null),L($,N),p(s,U,t),D(h,s,t),p(s,j,t),p(s,_,t),D(g,_,null),L(_,Q),p(s,z,t),D(E,s,t),p(s,b,t),D(w,b,null),L(b,R),p(s,G,t),p(s,v,t),L(v,V),D(k,v,null),J=!0},p(s,[t]){const S={};t&1&&(S.$$scope={dirty:t,ctx:s}),f.$set(S);const W={};t&1&&(W.$$scope={dirty:t,ctx:s}),h.$set(W);const H={};t&1&&(H.$$scope={dirty:t,ctx:s}),g.$set(H);const M={};t&1&&(M.$$scope={dirty:t,ctx:s}),w.$set(M);const O={};t&1&&(O.$$scope={dirty:t,ctx:s}),k.$set(O)},i(s){J||(C(f.$$.fragment,s),C(h.$$.fragment,s),C(g.$$.fragment,s),C(E.$$.fragment,s),C(w.$$.fragment,s),C(k.$$.fragment,s),J=!0)},o(s){A(f.$$.fragment,s),A(h.$$.fragment,s),A(g.$$.fragment,s),A(E.$$.fragment,s),A(w.$$.fragment,s),A(k.$$.fragment,s),J=!1},d(s){s&&o(n),s&&o(a),s&&o(c),s&&o(i),s&&o($),F(f),s&&o(U),F(h,s),s&&o(j),s&&o(_),F(g),s&&o(z),F(E,s),s&&o(b),F(w),s&&o(G),s&&o(v),F(k)}}}class Fs extends ss{constructor(n){super(),ns(this,n,null,$s,es,{})}}export{Fs as default};
