import{S as os,i as ts,s as rs,e as W,t as u,k as x,w as i,c as I,a as L,h as m,d as p,m as H,x as F,b as v,g as t,M,y as D,q as A,o as f,B as $,E as ps}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as Y}from"../../../chunks/CodeFence-7c02fe57.js";import{L as R}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as cs,a as es}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function ys(r){let n;return{c(){n=u("#")},l(a){n=m(a,"#")},m(a,l){t(a,n,l)},d(a){a&&p(n)}}}function Cs(r){let n,a;return n=new Y({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/keystone
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/keystone</span></span>
<span class="line"></span></code></pre>`}}),{c(){i(n.$$.fragment)},l(l){F(n.$$.fragment,l)},m(l,c){D(n,l,c),a=!0},p:ps,i(l){a||(A(n.$$.fragment,l),a=!0)},o(l){f(n.$$.fragment,l),a=!1},d(l){$(n,l)}}}function is(r){let n,a;return n=new Y({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/keystone
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/keystone</span></span>
<span class="line"></span></code></pre>`}}),{c(){i(n.$$.fragment)},l(l){F(n.$$.fragment,l)},m(l,c){D(n,l,c),a=!0},p:ps,i(l){a||(A(n.$$.fragment,l),a=!0)},o(l){f(n.$$.fragment,l),a=!1},d(l){$(n,l)}}}function Fs(r){let n,a,l,c;return n=new es({props:{value:"yarn",$$slots:{default:[Cs]},$$scope:{ctx:r}}}),l=new es({props:{value:"npm",$$slots:{default:[is]},$$scope:{ctx:r}}}),{c(){i(n.$$.fragment),a=x(),i(l.$$.fragment)},l(o){F(n.$$.fragment,o),a=H(o),F(l.$$.fragment,o)},m(o,y){D(n,o,y),t(o,a,y),D(l,o,y),c=!0},p(o,y){const C={};y&1&&(C.$$scope={dirty:y,ctx:o}),n.$set(C);const d={};y&1&&(d.$$scope={dirty:y,ctx:o}),l.$set(d)},i(o){c||(A(n.$$.fragment,o),A(l.$$.fragment,o),c=!0)},o(o){f(n.$$.fragment,o),f(l.$$.fragment,o),c=!1},d(o){$(n,o),o&&p(a),$(l,o)}}}function Ds(r){let n;return{c(){n=u("#")},l(a){n=m(a,"#")},m(a,l){t(a,n,l)},d(a){a&&p(n)}}}function As(r){let n;return{c(){n=u("#")},l(a){n=m(a,"#")},m(a,l){t(a,n,l)},d(a){a&&p(n)}}}function fs(r){let n;return{c(){n=u("#")},l(a){n=m(a,"#")},m(a,l){t(a,n,l)},d(a){a&&p(n)}}}function $s(r){let n;return{c(){n=u("here")},l(a){n=m(a,"here")},m(a,l){t(a,n,l)},d(a){a&&p(n)}}}function us(r){let n,a,l,c,o,y,C,d,Z,j,g,z,B,h,ss,J,K,b,w,ns,Q,N,_,k,as,V,O,ls,E,X;return d=new R({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[ys]},$$scope:{ctx:r}}}),g=new cs({props:{values:["yarn","npm"],$$slots:{default:[Fs]},$$scope:{ctx:r}}}),h=new R({props:{class:"header-anchor",href:"#options","aria-hidden":"true",$$slots:{default:[Ds]},$$scope:{ctx:r}}}),K=new Y({props:{lang:"typescript",ext:"ts",linesCount:36,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">KeystoneOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">customNetwork</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNetwork</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNetwork</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">networkId</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">genesis</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">GenesisBlock</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">hardforks</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Hardfork</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">bootstrapNodes</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">BootstrapNode</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">GenesisBlock</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">hash</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">timestamp</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">null</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">gasLimit</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">difficulty</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">nonce</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">extraData</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">stateRoot</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Hardfork</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">block</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">null</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">BootstrapNode</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">ip</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">port</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">network</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chainId</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">location</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">comment</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),w=new R({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[As]},$$scope:{ctx:r}}}),N=new Y({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> keystoneModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/keystone</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> keystone </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">keystoneModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    keystone</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),k=new R({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[fs]},$$scope:{ctx:r}}}),E=new R({props:{href:"/docs/modules/core#build-environments",$$slots:{default:[$s]},$$scope:{ctx:r}}}),{c(){n=W("h1"),a=u("Keystone"),l=x(),c=W("p"),o=u("Wallet module for connecting Keystone hardware wallets to web3-onboard"),y=x(),C=W("h2"),i(d.$$.fragment),Z=u(" Install"),j=x(),i(g.$$.fragment),z=x(),B=W("h2"),i(h.$$.fragment),ss=u(" Options"),J=x(),i(K.$$.fragment),b=W("h2"),i(w.$$.fragment),ns=u(" Usage"),Q=x(),i(N.$$.fragment),_=W("h2"),i(k.$$.fragment),as=u(" Build Environments"),V=x(),O=W("p"),ls=u("For build env configurations and setups please see the Build Env section "),i(E.$$.fragment),this.h()},l(s){n=I(s,"H1",{});var e=L(n);a=m(e,"Keystone"),e.forEach(p),l=H(s),c=I(s,"P",{});var U=L(c);o=m(U,"Wallet module for connecting Keystone hardware wallets to web3-onboard"),U.forEach(p),y=H(s),C=I(s,"H2",{id:!0,tabindex:!0});var P=L(C);F(d.$$.fragment,P),Z=m(P," Install"),P.forEach(p),j=H(s),F(g.$$.fragment,s),z=H(s),B=I(s,"H2",{id:!0,tabindex:!0});var T=L(B);F(h.$$.fragment,T),ss=m(T," Options"),T.forEach(p),J=H(s),F(K.$$.fragment,s),b=I(s,"H2",{id:!0,tabindex:!0});var q=L(b);F(w.$$.fragment,q),ns=m(q," Usage"),q.forEach(p),Q=H(s),F(N.$$.fragment,s),_=I(s,"H2",{id:!0,tabindex:!0});var G=L(_);F(k.$$.fragment,G),as=m(G," Build Environments"),G.forEach(p),V=H(s),O=I(s,"P",{});var S=L(O);ls=m(S,"For build env configurations and setups please see the Build Env section "),F(E.$$.fragment,S),S.forEach(p),this.h()},h(){v(C,"id","install"),v(C,"tabindex","-1"),v(B,"id","options"),v(B,"tabindex","-1"),v(b,"id","usage"),v(b,"tabindex","-1"),v(_,"id","build-environments"),v(_,"tabindex","-1")},m(s,e){t(s,n,e),M(n,a),t(s,l,e),t(s,c,e),M(c,o),t(s,y,e),t(s,C,e),D(d,C,null),M(C,Z),t(s,j,e),D(g,s,e),t(s,z,e),t(s,B,e),D(h,B,null),M(B,ss),t(s,J,e),D(K,s,e),t(s,b,e),D(w,b,null),M(b,ns),t(s,Q,e),D(N,s,e),t(s,_,e),D(k,_,null),M(_,as),t(s,V,e),t(s,O,e),M(O,ls),D(E,O,null),X=!0},p(s,[e]){const U={};e&1&&(U.$$scope={dirty:e,ctx:s}),d.$set(U);const P={};e&1&&(P.$$scope={dirty:e,ctx:s}),g.$set(P);const T={};e&1&&(T.$$scope={dirty:e,ctx:s}),h.$set(T);const q={};e&1&&(q.$$scope={dirty:e,ctx:s}),w.$set(q);const G={};e&1&&(G.$$scope={dirty:e,ctx:s}),k.$set(G);const S={};e&1&&(S.$$scope={dirty:e,ctx:s}),E.$set(S)},i(s){X||(A(d.$$.fragment,s),A(g.$$.fragment,s),A(h.$$.fragment,s),A(K.$$.fragment,s),A(w.$$.fragment,s),A(N.$$.fragment,s),A(k.$$.fragment,s),A(E.$$.fragment,s),X=!0)},o(s){f(d.$$.fragment,s),f(g.$$.fragment,s),f(h.$$.fragment,s),f(K.$$.fragment,s),f(w.$$.fragment,s),f(N.$$.fragment,s),f(k.$$.fragment,s),f(E.$$.fragment,s),X=!1},d(s){s&&p(n),s&&p(l),s&&p(c),s&&p(y),s&&p(C),$(d),s&&p(j),$(g,s),s&&p(z),s&&p(B),$(h),s&&p(J),$(K,s),s&&p(b),$(w),s&&p(Q),$(N,s),s&&p(_),$(k),s&&p(V),s&&p(O),$(E)}}}class ks extends os{constructor(n){super(),ts(this,n,null,us,rs,{})}}export{ks as default};
