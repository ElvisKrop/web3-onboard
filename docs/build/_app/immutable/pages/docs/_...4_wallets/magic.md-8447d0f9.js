import{S as an,i as en,s as ln,e as u,t as p,k as h,w as f,c as d,a as g,h as r,d as o,m as b,x as D,b as _,g as t,M as F,y,q as $,o as m,B as C,E as sn}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as ms}from"../../../chunks/CodeFence-7c02fe57.js";import{C as Xs}from"../../../chunks/CodeInline-7947d9bd.js";import{L as k}from"../../../chunks/Link-5aa5b43b.js";import{A as on}from"../../../chunks/Admonition-d24cb020.js";/* empty css                                                            */import{T as tn,a as nn}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function pn(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function rn(c){let n,a;return{c(){n=u("p"),a=p("The Magic Module currently only supports email login but we are open to expand to sms or socials*")},l(l){n=d(l,"P",{});var A=g(n);a=r(A,"The Magic Module currently only supports email login but we are open to expand to sms or socials*"),A.forEach(o)},m(l,A){t(l,n,A),F(n,a)},p:sn,d(l){l&&o(n)}}}function cn(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function fn(c){let n,a;return n=new ms({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/magic
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/magic</span></span>
<span class="line"></span></code></pre>`}}),{c(){f(n.$$.fragment)},l(l){D(n.$$.fragment,l)},m(l,A){y(n,l,A),a=!0},p:sn,i(l){a||($(n.$$.fragment,l),a=!0)},o(l){m(n.$$.fragment,l),a=!1},d(l){C(n,l)}}}function Dn(c){let n,a;return n=new ms({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/magic
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/magic</span></span>
<span class="line"></span></code></pre>`}}),{c(){f(n.$$.fragment)},l(l){D(n.$$.fragment,l)},m(l,A){y(n,l,A),a=!0},p:sn,i(l){a||($(n.$$.fragment,l),a=!0)},o(l){m(n.$$.fragment,l),a=!1},d(l){C(n,l)}}}function yn(c){let n,a,l,A;return n=new nn({props:{value:"yarn",$$slots:{default:[fn]},$$scope:{ctx:c}}}),l=new nn({props:{value:"npm",$$slots:{default:[Dn]},$$scope:{ctx:c}}}),{c(){f(n.$$.fragment),a=h(),f(l.$$.fragment)},l(i){D(n.$$.fragment,i),a=b(i),D(l.$$.fragment,i)},m(i,w){y(n,i,w),t(i,a,w),y(l,i,w),A=!0},p(i,w){const v={};w&1&&(v.$$scope={dirty:w,ctx:i}),n.$set(v);const M={};w&1&&(M.$$scope={dirty:w,ctx:i}),l.$set(M)},i(i){A||($(n.$$.fragment,i),$(l.$$.fragment,i),A=!0)},o(i){m(n.$$.fragment,i),m(l.$$.fragment,i),A=!1},d(i){C(n,i),i&&o(a),C(l,i)}}}function $n(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function mn(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function Cn(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function Fn(c){let n;return{c(){n=p("Magic's official docs")},l(a){n=r(a,"Magic's official docs")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function An(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function un(c){let n;return{c(){n=p("CSS variables")},l(a){n=r(a,"CSS variables")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function dn(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function gn(c){let n;return{c(){n=p("here")},l(a){n=r(a,"here")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function hn(c){let n,a,l,A,i,w,v,M,Is,ds,os,ts,Cs,Os,Ws,gs,W,hs,S,L,Ls,bs,P,_s,x,H,Ps,ws,Z,T,U,Hs,vs,j,B,z,Us,Es,K,zs,J,Ks,Ms,Q,X,Ns,N,ks,I,G,Gs,Ss,E,qs,q,Rs,ss,Vs,ns,Ys,xs,as,O,R,Zs,Ts,es,js,V,Bs;return M=new k({props:{class:"header-anchor",href:"#login-options","aria-hidden":"true",$$slots:{default:[pn]},$$scope:{ctx:c}}}),W=new on({props:{type:"note",$$slots:{default:[rn]},$$scope:{ctx:c}}}),L=new k({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[cn]},$$scope:{ctx:c}}}),P=new tn({props:{values:["yarn","npm"],$$slots:{default:[yn]},$$scope:{ctx:c}}}),H=new k({props:{class:"header-anchor",href:"#options","aria-hidden":"true",$$slots:{default:[$n]},$$scope:{ctx:c}}}),Z=new ms({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">MagicInitOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">userEmail</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// optional - if user has already logged in and/or session is still active a login modal will not appear</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),U=new k({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[mn]},$$scope:{ctx:c}}}),j=new ms({props:{lang:"typescript",ext:"ts",linesCount:19,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> magicModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/magic</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> magic </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">magicModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">API_KEY</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">userEmail</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> localStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getItem</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">magicUserEmail</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    magic</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),z=new k({props:{class:"header-anchor",href:"#accessing-the-magic-wallet-configuration","aria-hidden":"true",$$slots:{default:[Cn]},$$scope:{ctx:c}}}),J=new Xs({props:{code:"MagicInitOptions"}}),Q=new ms({props:{lang:"typescript",ext:"ts",linesCount:10,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">magicWallet</span><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">try</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">email</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">publicAddress</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">magicWallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">instance</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">user</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getMetadata</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">localStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setItem</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">magicUserEmail</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">email</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// This email can then be passed through the MagicInitOptions to continue the users session and avoid having to login again</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">catch</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Handle errors if required!</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),N=new k({props:{href:"https://magic.link/docs/api-reference/client-side-sdks/web#user-module",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Fn]},$$scope:{ctx:c}}}),G=new k({props:{class:"header-anchor",href:"#custom-styling","aria-hidden":"true",$$slots:{default:[An]},$$scope:{ctx:c}}}),q=new k({props:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[un]},$$scope:{ctx:c}}}),ss=new Xs({props:{code:":root"}}),ns=new Xs({props:{code:"--onboard"}}),as=new ms({props:{lang:"css",ext:"css",linesCount:30,code:`<pre><code><span class="line"><span style="color: #89DDFF">:</span><span style="color: #C792EA">root</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* *if not set will fallback to variables with \`--onboard\` prefix shown above */</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE THE COLOR  PALLETTE */</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-white</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> white</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-black</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> black</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-primary-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">b1b8f2</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-primary-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">6370e5</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-gray-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">c2c4c9</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-gray-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">33394b</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-danger-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ff4f4f</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* FONTS */</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-font-family-normal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-font-family-light</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro Light</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-font-size-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-font-line-height-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">24px</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* SPACING */</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-margin-4</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-margin-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.5rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* MAGIC WALLET MODAL POSITIONING */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-z-index</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-top</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-bottom</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-right</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-left</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),R=new k({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[dn]},$$scope:{ctx:c}}}),V=new k({props:{href:"/docs/modules/core#build-environments",$$slots:{default:[gn]},$$scope:{ctx:c}}}),{c(){n=u("h1"),a=p("Magic"),l=h(),A=u("p"),i=p("Wallet module for connecting Magic wallets to Onboard V2"),w=h(),v=u("h3"),f(M.$$.fragment),Is=p(" Login options"),ds=h(),os=u("ul"),ts=u("li"),Cs=u("strong"),Os=p("Email"),Ws=p(` - The Magic module comes with a built in email login modal that is customizable
in the same fashion that all other web3-onboard UI components are`),gs=h(),f(W.$$.fragment),hs=h(),S=u("h2"),f(L.$$.fragment),Ls=p(" Install"),bs=h(),f(P.$$.fragment),_s=h(),x=u("h2"),f(H.$$.fragment),Ps=p(" Options"),ws=h(),f(Z.$$.fragment),T=u("h2"),f(U.$$.fragment),Hs=p(" Usage"),vs=h(),f(j.$$.fragment),B=u("h3"),f(z.$$.fragment),Us=p(" Accessing the Magic Wallet configuration"),Es=h(),K=u("p"),zs=p(`When a Magic wallet is connected the Magic instance is exposed.
This can be used to get information such as user MetaData, update a user's email address or handle the user's token.
The user's email can be set in local storage and passed through the `),f(J.$$.fragment),Ks=p(` to avoid a user having to login again if they are returning to the DApp within the set user session time.
Magic has a default time of 7 days and this can be configured through your Magic API Key settings.`),Ms=h(),f(Q.$$.fragment),X=u("p"),Ns=p("For full documentation and examples please visit "),f(N.$$.fragment),ks=h(),I=u("h2"),f(G.$$.fragment),Gs=p(" Custom Styling"),Ss=h(),E=u("p"),qs=p("The Magic Wallet Login styles can customized via "),f(q.$$.fragment),Rs=p(". The following properties and their default properties can be customized by adding these variables to the "),f(ss.$$.fragment),Vs=p(" in your CSS file. If they are not specified they will fall back on the style variables prefixed with "),f(ns.$$.fragment),Ys=p(" and beyond that to the styles developed by Blocknative:"),xs=h(),f(as.$$.fragment),O=u("h2"),f(R.$$.fragment),Zs=p(" Build Environments"),Ts=h(),es=u("p"),js=p("For build env configurations and setups please see the Build Env section "),f(V.$$.fragment),this.h()},l(s){n=d(s,"H1",{});var e=g(n);a=r(e,"Magic"),e.forEach(o),l=b(s),A=d(s,"P",{});var Fs=g(A);i=r(Fs,"Wallet module for connecting Magic wallets to Onboard V2"),Fs.forEach(o),w=b(s),v=d(s,"H3",{id:!0,tabindex:!0});var ps=g(v);D(M.$$.fragment,ps),Is=r(ps," Login options"),ps.forEach(o),ds=b(s),os=d(s,"UL",{});var As=g(os);ts=d(As,"LI",{});var rs=g(ts);Cs=d(rs,"STRONG",{});var us=g(Cs);Os=r(us,"Email"),us.forEach(o),Ws=r(rs,` - The Magic module comes with a built in email login modal that is customizable
in the same fashion that all other web3-onboard UI components are`),rs.forEach(o),As.forEach(o),gs=b(s),D(W.$$.fragment,s),hs=b(s),S=d(s,"H2",{id:!0,tabindex:!0});var cs=g(S);D(L.$$.fragment,cs),Ls=r(cs," Install"),cs.forEach(o),bs=b(s),D(P.$$.fragment,s),_s=b(s),x=d(s,"H2",{id:!0,tabindex:!0});var is=g(x);D(H.$$.fragment,is),Ps=r(is," Options"),is.forEach(o),ws=b(s),D(Z.$$.fragment,s),T=d(s,"H2",{id:!0,tabindex:!0});var fs=g(T);D(U.$$.fragment,fs),Hs=r(fs," Usage"),fs.forEach(o),vs=b(s),D(j.$$.fragment,s),B=d(s,"H3",{id:!0,tabindex:!0});var Ds=g(B);D(z.$$.fragment,Ds),Us=r(Ds," Accessing the Magic Wallet configuration"),Ds.forEach(o),Es=b(s),K=d(s,"P",{});var ls=g(K);zs=r(ls,`When a Magic wallet is connected the Magic instance is exposed.
This can be used to get information such as user MetaData, update a user's email address or handle the user's token.
The user's email can be set in local storage and passed through the `),D(J.$$.fragment,ls),Ks=r(ls,` to avoid a user having to login again if they are returning to the DApp within the set user session time.
Magic has a default time of 7 days and this can be configured through your Magic API Key settings.`),ls.forEach(o),Ms=b(s),D(Q.$$.fragment,s),X=d(s,"P",{});var ys=g(X);Ns=r(ys,"For full documentation and examples please visit "),D(N.$$.fragment,ys),ys.forEach(o),ks=b(s),I=d(s,"H2",{id:!0,tabindex:!0});var $s=g(I);D(G.$$.fragment,$s),Gs=r($s," Custom Styling"),$s.forEach(o),Ss=b(s),E=d(s,"P",{});var Y=g(E);qs=r(Y,"The Magic Wallet Login styles can customized via "),D(q.$$.fragment,Y),Rs=r(Y,". The following properties and their default properties can be customized by adding these variables to the "),D(ss.$$.fragment,Y),Vs=r(Y," in your CSS file. If they are not specified they will fall back on the style variables prefixed with "),D(ns.$$.fragment,Y),Ys=r(Y," and beyond that to the styles developed by Blocknative:"),Y.forEach(o),xs=b(s),D(as.$$.fragment,s),O=d(s,"H2",{id:!0,tabindex:!0});var Js=g(O);D(R.$$.fragment,Js),Zs=r(Js," Build Environments"),Js.forEach(o),Ts=b(s),es=d(s,"P",{});var Qs=g(es);js=r(Qs,"For build env configurations and setups please see the Build Env section "),D(V.$$.fragment,Qs),Qs.forEach(o),this.h()},h(){_(v,"id","login-options"),_(v,"tabindex","-1"),_(S,"id","install"),_(S,"tabindex","-1"),_(x,"id","options"),_(x,"tabindex","-1"),_(T,"id","usage"),_(T,"tabindex","-1"),_(B,"id","accessing-the-magic-wallet-configuration"),_(B,"tabindex","-1"),_(I,"id","custom-styling"),_(I,"tabindex","-1"),_(O,"id","build-environments"),_(O,"tabindex","-1")},m(s,e){t(s,n,e),F(n,a),t(s,l,e),t(s,A,e),F(A,i),t(s,w,e),t(s,v,e),y(M,v,null),F(v,Is),t(s,ds,e),t(s,os,e),F(os,ts),F(ts,Cs),F(Cs,Os),F(ts,Ws),t(s,gs,e),y(W,s,e),t(s,hs,e),t(s,S,e),y(L,S,null),F(S,Ls),t(s,bs,e),y(P,s,e),t(s,_s,e),t(s,x,e),y(H,x,null),F(x,Ps),t(s,ws,e),y(Z,s,e),t(s,T,e),y(U,T,null),F(T,Hs),t(s,vs,e),y(j,s,e),t(s,B,e),y(z,B,null),F(B,Us),t(s,Es,e),t(s,K,e),F(K,zs),y(J,K,null),F(K,Ks),t(s,Ms,e),y(Q,s,e),t(s,X,e),F(X,Ns),y(N,X,null),t(s,ks,e),t(s,I,e),y(G,I,null),F(I,Gs),t(s,Ss,e),t(s,E,e),F(E,qs),y(q,E,null),F(E,Rs),y(ss,E,null),F(E,Vs),y(ns,E,null),F(E,Ys),t(s,xs,e),y(as,s,e),t(s,O,e),y(R,O,null),F(O,Zs),t(s,Ts,e),t(s,es,e),F(es,js),y(V,es,null),Bs=!0},p(s,[e]){const Fs={};e&1&&(Fs.$$scope={dirty:e,ctx:s}),M.$set(Fs);const ps={};e&1&&(ps.$$scope={dirty:e,ctx:s}),W.$set(ps);const As={};e&1&&(As.$$scope={dirty:e,ctx:s}),L.$set(As);const rs={};e&1&&(rs.$$scope={dirty:e,ctx:s}),P.$set(rs);const us={};e&1&&(us.$$scope={dirty:e,ctx:s}),H.$set(us);const cs={};e&1&&(cs.$$scope={dirty:e,ctx:s}),U.$set(cs);const is={};e&1&&(is.$$scope={dirty:e,ctx:s}),z.$set(is);const fs={};e&1&&(fs.$$scope={dirty:e,ctx:s}),N.$set(fs);const Ds={};e&1&&(Ds.$$scope={dirty:e,ctx:s}),G.$set(Ds);const ls={};e&1&&(ls.$$scope={dirty:e,ctx:s}),q.$set(ls);const ys={};e&1&&(ys.$$scope={dirty:e,ctx:s}),R.$set(ys);const $s={};e&1&&($s.$$scope={dirty:e,ctx:s}),V.$set($s)},i(s){Bs||($(M.$$.fragment,s),$(W.$$.fragment,s),$(L.$$.fragment,s),$(P.$$.fragment,s),$(H.$$.fragment,s),$(Z.$$.fragment,s),$(U.$$.fragment,s),$(j.$$.fragment,s),$(z.$$.fragment,s),$(J.$$.fragment,s),$(Q.$$.fragment,s),$(N.$$.fragment,s),$(G.$$.fragment,s),$(q.$$.fragment,s),$(ss.$$.fragment,s),$(ns.$$.fragment,s),$(as.$$.fragment,s),$(R.$$.fragment,s),$(V.$$.fragment,s),Bs=!0)},o(s){m(M.$$.fragment,s),m(W.$$.fragment,s),m(L.$$.fragment,s),m(P.$$.fragment,s),m(H.$$.fragment,s),m(Z.$$.fragment,s),m(U.$$.fragment,s),m(j.$$.fragment,s),m(z.$$.fragment,s),m(J.$$.fragment,s),m(Q.$$.fragment,s),m(N.$$.fragment,s),m(G.$$.fragment,s),m(q.$$.fragment,s),m(ss.$$.fragment,s),m(ns.$$.fragment,s),m(as.$$.fragment,s),m(R.$$.fragment,s),m(V.$$.fragment,s),Bs=!1},d(s){s&&o(n),s&&o(l),s&&o(A),s&&o(w),s&&o(v),C(M),s&&o(ds),s&&o(os),s&&o(gs),C(W,s),s&&o(hs),s&&o(S),C(L),s&&o(bs),C(P,s),s&&o(_s),s&&o(x),C(H),s&&o(ws),C(Z,s),s&&o(T),C(U),s&&o(vs),C(j,s),s&&o(B),C(z),s&&o(Es),s&&o(K),C(J),s&&o(Ms),C(Q,s),s&&o(X),C(N),s&&o(ks),s&&o(I),C(G),s&&o(Ss),s&&o(E),C(q),C(ss),C(ns),s&&o(xs),C(as,s),s&&o(O),C(R),s&&o(Ts),s&&o(es),C(V)}}}class Bn extends an{constructor(n){super(),en(this,n,null,hn,ln,{})}}export{Bn as default};
