import{S as Ls,i as Os,s as Ss,e as v,t as p,k as x,w as f,c as G,a as k,h as r,d as o,m as E,x as $,b as B,g as l,M as y,y as u,q as m,o as D,B as d,E as Ws}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as rs}from"../../../chunks/CodeFence-7c02fe57.js";import{C as ps}from"../../../chunks/CodeInline-7947d9bd.js";import{L as q}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as Hs,a as Ts}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function Ns(i){let n;return{c(){n=p("#")},l(e){n=r(e,"#")},m(e,a){l(e,n,a)},d(e){e&&o(n)}}}function Ps(i){let n,e;return n=new rs({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/gnosis
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/gnosis</span></span>
<span class="line"></span></code></pre>`}}),{c(){f(n.$$.fragment)},l(a){$(n.$$.fragment,a)},m(a,C){u(n,a,C),e=!0},p:Ws,i(a){e||(m(n.$$.fragment,a),e=!0)},o(a){D(n.$$.fragment,a),e=!1},d(a){d(n,a)}}}function zs(i){let n,e;return n=new rs({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/gnosis
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/gnosis</span></span>
<span class="line"></span></code></pre>`}}),{c(){f(n.$$.fragment)},l(a){$(n.$$.fragment,a)},m(a,C){u(n,a,C),e=!0},p:Ws,i(a){e||(m(n.$$.fragment,a),e=!0)},o(a){D(n.$$.fragment,a),e=!1},d(a){d(n,a)}}}function Ms(i){let n,e,a,C;return n=new Ts({props:{value:"yarn",$$slots:{default:[Ps]},$$scope:{ctx:i}}}),a=new Ts({props:{value:"npm",$$slots:{default:[zs]},$$scope:{ctx:i}}}),{c(){f(n.$$.fragment),e=x(),f(a.$$.fragment)},l(c){$(n.$$.fragment,c),e=E(c),$(a.$$.fragment,c)},m(c,F){u(n,c,F),l(c,e,F),u(a,c,F),C=!0},p(c,F){const h={};F&1&&(h.$$scope={dirty:F,ctx:c}),n.$set(h);const _={};F&1&&(_.$$scope={dirty:F,ctx:c}),a.$set(_)},i(c){C||(m(n.$$.fragment,c),m(a.$$.fragment,c),C=!0)},o(c){D(n.$$.fragment,c),D(a.$$.fragment,c),C=!1},d(c){d(n,c),c&&o(e),d(a,c)}}}function Rs(i){let n;return{c(){n=p("#")},l(e){n=r(e,"#")},m(e,a){l(e,n,a)},d(e){e&&o(n)}}}function qs(i){let n;return{c(){n=p("#")},l(e){n=r(e,"#")},m(e,a){l(e,n,a)},d(e){e&&o(n)}}}function Ks(i){let n;return{c(){n=p("#")},l(e){n=r(e,"#")},m(e,a){l(e,n,a)},d(e){e&&o(n)}}}function Us(i){let n;return{c(){n=p("Gnosis docs")},l(e){n=r(e,"Gnosis docs")},m(e,a){l(e,n,a)},d(e){e&&o(n)}}}function js(i){let n;return{c(){n=p("Gnosis docs")},l(e){n=r(e,"Gnosis docs")},m(e,a){l(e,n,a)},d(e){e&&o(n)}}}function Js(i){let n;return{c(){n=p("#")},l(e){n=r(e,"#")},m(e,a){l(e,n,a)},d(e){e&&o(n)}}}function Qs(i){let n;return{c(){n=p("here")},l(e){n=r(e,"here")},m(e,a){l(e,n,a)},d(e){e&&o(n)}}}function Vs(i){let n,e,a,C,c,F,h,_,Cs,cs,O,is,I,S,As,fs,K,T,H,Fs,$s,U,W,N,gs,us,A,hs,j,bs,J,_s,Q,ws,P,xs,ms,V,b,Es,X,vs,Y,Gs,z,ks,Ds,L,M,Bs,ds,Z,Is,R,ys;return _=new q({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[Ns]},$$scope:{ctx:i}}}),O=new Hs({props:{values:["yarn","npm"],$$slots:{default:[Ms]},$$scope:{ctx:i}}}),S=new q({props:{class:"header-anchor",href:"#options","aria-hidden":"true",$$slots:{default:[Rs]},$$scope:{ctx:i}}}),K=new rs({props:{lang:"typescript",ext:"ts",linesCount:4,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">GnosisOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">whitelistedDomains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RegExp</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),H=new q({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[qs]},$$scope:{ctx:i}}}),U=new rs({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> gnosisModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/gnosis</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> gnosis </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">gnosisModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    gnosis</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),N=new q({props:{class:"header-anchor",href:"#customizing-gnosis-transaction-gas","aria-hidden":"true",$$slots:{default:[Ks]},$$scope:{ctx:i}}}),j=new ps({props:{code:"gasLimit"}}),J=new ps({props:{code:"safeTxGas"}}),Q=new ps({props:{code:"safeTxGas"}}),P=new q({props:{href:"https://github.com/safe-global/safe-contracts/blob/a6504a9afdeac186a8cdb29ad68b189523c80eda/docs/safe_tx_gas.md",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Us]},$$scope:{ctx:i}}}),V=new rs({props:{lang:"typescript",ext:"ts",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> tx </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">to</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> toAddress</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">value</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1000000000000000</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">data</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> params </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">safeTxGas</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">5000000</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// wallet is the provider exposed by web3-onboard after the Gnosis wallet is connected</span></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> trans </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> wallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">instance</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">txs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">send</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178">txs</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">[tx]</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> params</span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),X=new ps({props:{code:"safeTxGas"}}),Y=new ps({props:{code:"gasLimit"}}),z=new q({props:{href:"https://github.com/safe-global/safe-contracts/blob/a6504a9afdeac186a8cdb29ad68b189523c80eda/docs/safe_tx_gas.md",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[js]},$$scope:{ctx:i}}}),M=new q({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[Js]},$$scope:{ctx:i}}}),R=new q({props:{href:"/docs/modules/core#build-environments",$$slots:{default:[Qs]},$$scope:{ctx:i}}}),{c(){n=v("h1"),e=p("Gnosis"),a=x(),C=v("p"),c=p("Wallet module for connecting Gnosis Safe to web3-onboard"),F=x(),h=v("h2"),f(_.$$.fragment),Cs=p(" Install"),cs=x(),f(O.$$.fragment),is=x(),I=v("h2"),f(S.$$.fragment),As=p(" Options"),fs=x(),f(K.$$.fragment),T=v("h2"),f(H.$$.fragment),Fs=p(" Usage"),$s=x(),f(U.$$.fragment),W=v("h2"),f(N.$$.fragment),gs=p(" Customizing Gnosis Transaction Gas"),us=x(),A=v("p"),hs=p("If you are looking to set the "),f(j.$$.fragment),bs=p(` of a transaction within Gnosis, the gas properties within the transaction WILL BE IGNORED.
Instead you will need to use the `),f(J.$$.fragment),_s=p(` prop AND the web3-onboard Gnosis instance that is exposed through the provider to send along the transaction.
The Gnosis sdk instance exposed by the web3-onboard must be used to set the `),f(Q.$$.fragment),ws=p(` prop and send the transaction.
Check `),f(P.$$.fragment),xs=p(` for full detail as it can be a bit confusing.
An example of accessing the Gnosis SDK instance and sending a transaction can be found below.`),ms=x(),f(V.$$.fragment),b=v("p"),Es=p("Note: With the "),f(X.$$.fragment),vs=p(" you will see additional value on the "),f(Y.$$.fragment),Gs=p(" displayed in the Safe. Check "),f(z.$$.fragment),ks=p(" for full details on that computation."),Ds=x(),L=v("h2"),f(M.$$.fragment),Bs=p(" Build Environments"),ds=x(),Z=v("p"),Is=p("For build env configurations and setups please see the Build Env section "),f(R.$$.fragment),this.h()},l(s){n=G(s,"H1",{});var t=k(n);e=r(t,"Gnosis"),t.forEach(o),a=E(s),C=G(s,"P",{});var ls=k(C);c=r(ls,"Wallet module for connecting Gnosis Safe to web3-onboard"),ls.forEach(o),F=E(s),h=G(s,"H2",{id:!0,tabindex:!0});var ss=k(h);$(_.$$.fragment,ss),Cs=r(ss," Install"),ss.forEach(o),cs=E(s),$(O.$$.fragment,s),is=E(s),I=G(s,"H2",{id:!0,tabindex:!0});var ns=k(I);$(S.$$.fragment,ns),As=r(ns," Options"),ns.forEach(o),fs=E(s),$(K.$$.fragment,s),T=G(s,"H2",{id:!0,tabindex:!0});var es=k(T);$(H.$$.fragment,es),Fs=r(es," Usage"),es.forEach(o),$s=E(s),$(U.$$.fragment,s),W=G(s,"H2",{id:!0,tabindex:!0});var as=k(W);$(N.$$.fragment,as),gs=r(as," Customizing Gnosis Transaction Gas"),as.forEach(o),us=E(s),A=G(s,"P",{});var g=k(A);hs=r(g,"If you are looking to set the "),$(j.$$.fragment,g),bs=r(g,` of a transaction within Gnosis, the gas properties within the transaction WILL BE IGNORED.
Instead you will need to use the `),$(J.$$.fragment,g),_s=r(g,` prop AND the web3-onboard Gnosis instance that is exposed through the provider to send along the transaction.
The Gnosis sdk instance exposed by the web3-onboard must be used to set the `),$(Q.$$.fragment,g),ws=r(g,` prop and send the transaction.
Check `),$(P.$$.fragment,g),xs=r(g,` for full detail as it can be a bit confusing.
An example of accessing the Gnosis SDK instance and sending a transaction can be found below.`),g.forEach(o),ms=E(s),$(V.$$.fragment,s),b=G(s,"P",{});var w=k(b);Es=r(w,"Note: With the "),$(X.$$.fragment,w),vs=r(w," you will see additional value on the "),$(Y.$$.fragment,w),Gs=r(w," displayed in the Safe. Check "),$(z.$$.fragment,w),ks=r(w," for full details on that computation."),w.forEach(o),Ds=E(s),L=G(s,"H2",{id:!0,tabindex:!0});var ts=k(L);$(M.$$.fragment,ts),Bs=r(ts," Build Environments"),ts.forEach(o),ds=E(s),Z=G(s,"P",{});var os=k(Z);Is=r(os,"For build env configurations and setups please see the Build Env section "),$(R.$$.fragment,os),os.forEach(o),this.h()},h(){B(h,"id","install"),B(h,"tabindex","-1"),B(I,"id","options"),B(I,"tabindex","-1"),B(T,"id","usage"),B(T,"tabindex","-1"),B(W,"id","customizing-gnosis-transaction-gas"),B(W,"tabindex","-1"),B(L,"id","build-environments"),B(L,"tabindex","-1")},m(s,t){l(s,n,t),y(n,e),l(s,a,t),l(s,C,t),y(C,c),l(s,F,t),l(s,h,t),u(_,h,null),y(h,Cs),l(s,cs,t),u(O,s,t),l(s,is,t),l(s,I,t),u(S,I,null),y(I,As),l(s,fs,t),u(K,s,t),l(s,T,t),u(H,T,null),y(T,Fs),l(s,$s,t),u(U,s,t),l(s,W,t),u(N,W,null),y(W,gs),l(s,us,t),l(s,A,t),y(A,hs),u(j,A,null),y(A,bs),u(J,A,null),y(A,_s),u(Q,A,null),y(A,ws),u(P,A,null),y(A,xs),l(s,ms,t),u(V,s,t),l(s,b,t),y(b,Es),u(X,b,null),y(b,vs),u(Y,b,null),y(b,Gs),u(z,b,null),y(b,ks),l(s,Ds,t),l(s,L,t),u(M,L,null),y(L,Bs),l(s,ds,t),l(s,Z,t),y(Z,Is),u(R,Z,null),ys=!0},p(s,[t]){const ls={};t&1&&(ls.$$scope={dirty:t,ctx:s}),_.$set(ls);const ss={};t&1&&(ss.$$scope={dirty:t,ctx:s}),O.$set(ss);const ns={};t&1&&(ns.$$scope={dirty:t,ctx:s}),S.$set(ns);const es={};t&1&&(es.$$scope={dirty:t,ctx:s}),H.$set(es);const as={};t&1&&(as.$$scope={dirty:t,ctx:s}),N.$set(as);const g={};t&1&&(g.$$scope={dirty:t,ctx:s}),P.$set(g);const w={};t&1&&(w.$$scope={dirty:t,ctx:s}),z.$set(w);const ts={};t&1&&(ts.$$scope={dirty:t,ctx:s}),M.$set(ts);const os={};t&1&&(os.$$scope={dirty:t,ctx:s}),R.$set(os)},i(s){ys||(m(_.$$.fragment,s),m(O.$$.fragment,s),m(S.$$.fragment,s),m(K.$$.fragment,s),m(H.$$.fragment,s),m(U.$$.fragment,s),m(N.$$.fragment,s),m(j.$$.fragment,s),m(J.$$.fragment,s),m(Q.$$.fragment,s),m(P.$$.fragment,s),m(V.$$.fragment,s),m(X.$$.fragment,s),m(Y.$$.fragment,s),m(z.$$.fragment,s),m(M.$$.fragment,s),m(R.$$.fragment,s),ys=!0)},o(s){D(_.$$.fragment,s),D(O.$$.fragment,s),D(S.$$.fragment,s),D(K.$$.fragment,s),D(H.$$.fragment,s),D(U.$$.fragment,s),D(N.$$.fragment,s),D(j.$$.fragment,s),D(J.$$.fragment,s),D(Q.$$.fragment,s),D(P.$$.fragment,s),D(V.$$.fragment,s),D(X.$$.fragment,s),D(Y.$$.fragment,s),D(z.$$.fragment,s),D(M.$$.fragment,s),D(R.$$.fragment,s),ys=!1},d(s){s&&o(n),s&&o(a),s&&o(C),s&&o(F),s&&o(h),d(_),s&&o(cs),d(O,s),s&&o(is),s&&o(I),d(S),s&&o(fs),d(K,s),s&&o(T),d(H),s&&o($s),d(U,s),s&&o(W),d(N),s&&o(us),s&&o(A),d(j),d(J),d(Q),d(P),s&&o(ms),d(V,s),s&&o(b),d(X),d(Y),d(z),s&&o(Ds),s&&o(L),d(M),s&&o(ds),s&&o(Z),d(R)}}}class ln extends Ls{constructor(n){super(),Os(this,n,null,Vs,Ss,{})}}export{ln as default};
