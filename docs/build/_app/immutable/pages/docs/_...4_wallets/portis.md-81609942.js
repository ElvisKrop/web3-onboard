import{S as os,i as ps,s as rs,e as q,t as d,k as B,w as f,c as I,a as K,h as A,d as l,m as P,x as u,b as x,g as p,M,y as m,q as D,o as C,B as y,E as ls}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as X}from"../../../chunks/CodeFence-7c02fe57.js";import{L as z}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as cs,a as ts}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function is(r){let n;return{c(){n=d("#")},l(e){n=A(e,"#")},m(e,a){p(e,n,a)},d(e){e&&l(n)}}}function $s(r){let n,e;return n=new X({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/portis
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/portis</span></span>
<span class="line"></span></code></pre>`}}),{c(){f(n.$$.fragment)},l(a){u(n.$$.fragment,a)},m(a,c){m(n,a,c),e=!0},p:ls,i(a){e||(D(n.$$.fragment,a),e=!0)},o(a){C(n.$$.fragment,a),e=!1},d(a){y(n,a)}}}function fs(r){let n,e;return n=new X({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/portis
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/portis</span></span>
<span class="line"></span></code></pre>`}}),{c(){f(n.$$.fragment)},l(a){u(n.$$.fragment,a)},m(a,c){m(n,a,c),e=!0},p:ls,i(a){e||(D(n.$$.fragment,a),e=!0)},o(a){C(n.$$.fragment,a),e=!1},d(a){y(n,a)}}}function us(r){let n,e,a,c;return n=new ts({props:{value:"yarn",$$slots:{default:[$s]},$$scope:{ctx:r}}}),a=new ts({props:{value:"npm",$$slots:{default:[fs]},$$scope:{ctx:r}}}),{c(){f(n.$$.fragment),e=B(),f(a.$$.fragment)},l(o){u(n.$$.fragment,o),e=P(o),u(a.$$.fragment,o)},m(o,i){m(n,o,i),p(o,e,i),m(a,o,i),c=!0},p(o,i){const $={};i&1&&($.$$scope={dirty:i,ctx:o}),n.$set($);const F={};i&1&&(F.$$scope={dirty:i,ctx:o}),a.$set(F)},i(o){c||(D(n.$$.fragment,o),D(a.$$.fragment,o),c=!0)},o(o){C(n.$$.fragment,o),C(a.$$.fragment,o),c=!1},d(o){y(n,o),o&&l(e),y(a,o)}}}function ms(r){let n;return{c(){n=d("#")},l(e){n=A(e,"#")},m(e,a){p(e,n,a)},d(e){e&&l(n)}}}function Ds(r){let n;return{c(){n=d("#")},l(e){n=A(e,"#")},m(e,a){p(e,n,a)},d(e){e&&l(n)}}}function Cs(r){let n;return{c(){n=d("#")},l(e){n=A(e,"#")},m(e,a){p(e,n,a)},d(e){e&&l(n)}}}function ys(r){let n;return{c(){n=d("here")},l(e){n=A(e,"here")},m(e,a){p(e,n,a)},d(e){e&&l(n)}}}function ds(r){let n,e,a,c,o,i,$,F,Z,G,h,J,_,w,ss,N,O,b,v,ns,Q,H,g,E,es,R,W,as,k,V;return F=new z({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[is]},$$scope:{ctx:r}}}),h=new cs({props:{values:["yarn","npm"],$$slots:{default:[us]},$$scope:{ctx:r}}}),w=new z({props:{class:"header-anchor",href:"#options","aria-hidden":"true",$$slots:{default:[ms]},$$scope:{ctx:r}}}),O=new X({props:{lang:"typescript",ext:"ts",linesCount:4,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">PortisOptions</span><span style="color: #A6ACCD"> {</span></span>
<span class="line"><span style="color: #A6ACCD">  apiKey: string </span><span style="color: #464B5D; font-style: italic">// required</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"></span></code></pre>`}}),v=new z({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[Ds]},$$scope:{ctx:r}}}),H=new X({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> portisModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/portis</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> portis </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">portisModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">API_KEY</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    portis</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),E=new z({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[Cs]},$$scope:{ctx:r}}}),k=new z({props:{href:"/docs/modules/core#build-environments",$$slots:{default:[ys]},$$scope:{ctx:r}}}),{c(){n=q("h1"),e=d("Portis"),a=B(),c=q("p"),o=d("Wallet module for connecting Portis wallet to web3-onboard"),i=B(),$=q("h2"),f(F.$$.fragment),Z=d(" Install"),G=B(),f(h.$$.fragment),J=B(),_=q("h2"),f(w.$$.fragment),ss=d(" Options"),N=B(),f(O.$$.fragment),b=q("h2"),f(v.$$.fragment),ns=d(" Usage"),Q=B(),f(H.$$.fragment),g=q("h2"),f(E.$$.fragment),es=d(" Build Environments"),R=B(),W=q("p"),as=d("For build env configurations and setups please see the Build Env section "),f(k.$$.fragment),this.h()},l(s){n=I(s,"H1",{});var t=K(n);e=A(t,"Portis"),t.forEach(l),a=P(s),c=I(s,"P",{});var j=K(c);o=A(j,"Wallet module for connecting Portis wallet to web3-onboard"),j.forEach(l),i=P(s),$=I(s,"H2",{id:!0,tabindex:!0});var T=K($);u(F.$$.fragment,T),Z=A(T," Install"),T.forEach(l),G=P(s),u(h.$$.fragment,s),J=P(s),_=I(s,"H2",{id:!0,tabindex:!0});var L=K(_);u(w.$$.fragment,L),ss=A(L," Options"),L.forEach(l),N=P(s),u(O.$$.fragment,s),b=I(s,"H2",{id:!0,tabindex:!0});var S=K(b);u(v.$$.fragment,S),ns=A(S," Usage"),S.forEach(l),Q=P(s),u(H.$$.fragment,s),g=I(s,"H2",{id:!0,tabindex:!0});var U=K(g);u(E.$$.fragment,U),es=A(U," Build Environments"),U.forEach(l),R=P(s),W=I(s,"P",{});var Y=K(W);as=A(Y,"For build env configurations and setups please see the Build Env section "),u(k.$$.fragment,Y),Y.forEach(l),this.h()},h(){x($,"id","install"),x($,"tabindex","-1"),x(_,"id","options"),x(_,"tabindex","-1"),x(b,"id","usage"),x(b,"tabindex","-1"),x(g,"id","build-environments"),x(g,"tabindex","-1")},m(s,t){p(s,n,t),M(n,e),p(s,a,t),p(s,c,t),M(c,o),p(s,i,t),p(s,$,t),m(F,$,null),M($,Z),p(s,G,t),m(h,s,t),p(s,J,t),p(s,_,t),m(w,_,null),M(_,ss),p(s,N,t),m(O,s,t),p(s,b,t),m(v,b,null),M(b,ns),p(s,Q,t),m(H,s,t),p(s,g,t),m(E,g,null),M(g,es),p(s,R,t),p(s,W,t),M(W,as),m(k,W,null),V=!0},p(s,[t]){const j={};t&1&&(j.$$scope={dirty:t,ctx:s}),F.$set(j);const T={};t&1&&(T.$$scope={dirty:t,ctx:s}),h.$set(T);const L={};t&1&&(L.$$scope={dirty:t,ctx:s}),w.$set(L);const S={};t&1&&(S.$$scope={dirty:t,ctx:s}),v.$set(S);const U={};t&1&&(U.$$scope={dirty:t,ctx:s}),E.$set(U);const Y={};t&1&&(Y.$$scope={dirty:t,ctx:s}),k.$set(Y)},i(s){V||(D(F.$$.fragment,s),D(h.$$.fragment,s),D(w.$$.fragment,s),D(O.$$.fragment,s),D(v.$$.fragment,s),D(H.$$.fragment,s),D(E.$$.fragment,s),D(k.$$.fragment,s),V=!0)},o(s){C(F.$$.fragment,s),C(h.$$.fragment,s),C(w.$$.fragment,s),C(O.$$.fragment,s),C(v.$$.fragment,s),C(H.$$.fragment,s),C(E.$$.fragment,s),C(k.$$.fragment,s),V=!1},d(s){s&&l(n),s&&l(a),s&&l(c),s&&l(i),s&&l($),y(F),s&&l(G),y(h,s),s&&l(J),s&&l(_),y(w),s&&l(N),y(O,s),s&&l(b),y(v),s&&l(Q),y(H,s),s&&l(g),y(E),s&&l(R),s&&l(W),y(k)}}}class Es extends os{constructor(n){super(),ps(this,n,null,ds,rs,{})}}export{Es as default};
