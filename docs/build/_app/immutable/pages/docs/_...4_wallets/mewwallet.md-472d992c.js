import{S as ee,i as se,s as ne,e as P,t as m,k,w as u,c as T,a as q,h as d,d as o,m as x,x as D,b as I,g as p,M as L,y as C,q as y,o as A,B as F,E as Z}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as X}from"../../../chunks/CodeFence-7c02fe57.js";import{L as K}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as ae,a as Y}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function le(r){let s;return{c(){s=m("#")},l(n){s=d(n,"#")},m(n,a){p(n,s,a)},d(n){n&&o(s)}}}function te(r){let s,n;return s=new X({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/mew-wallet
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/mew-wallet</span></span>
<span class="line"></span></code></pre>`}}),{c(){u(s.$$.fragment)},l(a){D(s.$$.fragment,a)},m(a,c){C(s,a,c),n=!0},p:Z,i(a){n||(y(s.$$.fragment,a),n=!0)},o(a){A(s.$$.fragment,a),n=!1},d(a){F(s,a)}}}function oe(r){let s,n;return s=new X({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/mew-wallet
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/mew-wallet</span></span>
<span class="line"></span></code></pre>`}}),{c(){u(s.$$.fragment)},l(a){D(s.$$.fragment,a)},m(a,c){C(s,a,c),n=!0},p:Z,i(a){n||(y(s.$$.fragment,a),n=!0)},o(a){A(s.$$.fragment,a),n=!1},d(a){F(s,a)}}}function pe(r){let s,n,a,c;return s=new Y({props:{value:"yarn",$$slots:{default:[te]},$$scope:{ctx:r}}}),a=new Y({props:{value:"npm",$$slots:{default:[oe]},$$scope:{ctx:r}}}),{c(){u(s.$$.fragment),n=k(),u(a.$$.fragment)},l(t){D(s.$$.fragment,t),n=x(t),D(a.$$.fragment,t)},m(t,i){C(s,t,i),p(t,n,i),C(a,t,i),c=!0},p(t,i){const $={};i&1&&($.$$scope={dirty:i,ctx:t}),s.$set($);const f={};i&1&&(f.$$scope={dirty:i,ctx:t}),a.$set(f)},i(t){c||(y(s.$$.fragment,t),y(a.$$.fragment,t),c=!0)},o(t){A(s.$$.fragment,t),A(a.$$.fragment,t),c=!1},d(t){F(s,t),t&&o(n),F(a,t)}}}function re(r){let s;return{c(){s=m("#")},l(n){s=d(n,"#")},m(n,a){p(n,s,a)},d(n){n&&o(s)}}}function ce(r){let s;return{c(){s=m("#")},l(n){s=d(n,"#")},m(n,a){p(n,s,a)},d(n){n&&o(s)}}}function ie(r){let s;return{c(){s=m("here")},l(n){s=d(n,"here")},m(n,a){p(n,s,a)},d(n){n&&o(s)}}}function $e(r){let s,n,a,c,t,i,$,f,N,U,b,j,w,h,Q,z,E,_,g,R,G,W,V,v,J;return f=new K({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[le]},$$scope:{ctx:r}}}),b=new ae({props:{values:["yarn","npm"],$$slots:{default:[pe]},$$scope:{ctx:r}}}),h=new K({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[re]},$$scope:{ctx:r}}}),E=new X({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> mewWallet </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/mew-wallet</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> mewWalletModule </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">mewWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    mewWalletModule</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),g=new K({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[ce]},$$scope:{ctx:r}}}),v=new K({props:{href:"/docs/modules/core#build-environments",$$slots:{default:[ie]},$$scope:{ctx:r}}}),{c(){s=P("h1"),n=m("Mew Wallet"),a=k(),c=P("p"),t=m("Wallet module for connecting Mew wallet through web3-onboard"),i=k(),$=P("h3"),u(f.$$.fragment),N=m(" Install"),U=k(),u(b.$$.fragment),j=k(),w=P("h2"),u(h.$$.fragment),Q=m(" Usage"),z=k(),u(E.$$.fragment),_=P("h2"),u(g.$$.fragment),R=m(" Build Environments"),G=k(),W=P("p"),V=m("For build env configurations and setups please see the Build Env section "),u(v.$$.fragment),this.h()},l(e){s=T(e,"H1",{});var l=q(s);n=d(l,"Mew Wallet"),l.forEach(o),a=x(e),c=T(e,"P",{});var S=q(c);t=d(S,"Wallet module for connecting Mew wallet through web3-onboard"),S.forEach(o),i=x(e),$=T(e,"H3",{id:!0,tabindex:!0});var M=q($);D(f.$$.fragment,M),N=d(M," Install"),M.forEach(o),U=x(e),D(b.$$.fragment,e),j=x(e),w=T(e,"H2",{id:!0,tabindex:!0});var B=q(w);D(h.$$.fragment,B),Q=d(B," Usage"),B.forEach(o),z=x(e),D(E.$$.fragment,e),_=T(e,"H2",{id:!0,tabindex:!0});var H=q(_);D(g.$$.fragment,H),R=d(H," Build Environments"),H.forEach(o),G=x(e),W=T(e,"P",{});var O=q(W);V=d(O,"For build env configurations and setups please see the Build Env section "),D(v.$$.fragment,O),O.forEach(o),this.h()},h(){I($,"id","install"),I($,"tabindex","-1"),I(w,"id","usage"),I(w,"tabindex","-1"),I(_,"id","build-environments"),I(_,"tabindex","-1")},m(e,l){p(e,s,l),L(s,n),p(e,a,l),p(e,c,l),L(c,t),p(e,i,l),p(e,$,l),C(f,$,null),L($,N),p(e,U,l),C(b,e,l),p(e,j,l),p(e,w,l),C(h,w,null),L(w,Q),p(e,z,l),C(E,e,l),p(e,_,l),C(g,_,null),L(_,R),p(e,G,l),p(e,W,l),L(W,V),C(v,W,null),J=!0},p(e,[l]){const S={};l&1&&(S.$$scope={dirty:l,ctx:e}),f.$set(S);const M={};l&1&&(M.$$scope={dirty:l,ctx:e}),b.$set(M);const B={};l&1&&(B.$$scope={dirty:l,ctx:e}),h.$set(B);const H={};l&1&&(H.$$scope={dirty:l,ctx:e}),g.$set(H);const O={};l&1&&(O.$$scope={dirty:l,ctx:e}),v.$set(O)},i(e){J||(y(f.$$.fragment,e),y(b.$$.fragment,e),y(h.$$.fragment,e),y(E.$$.fragment,e),y(g.$$.fragment,e),y(v.$$.fragment,e),J=!0)},o(e){A(f.$$.fragment,e),A(b.$$.fragment,e),A(h.$$.fragment,e),A(E.$$.fragment,e),A(g.$$.fragment,e),A(v.$$.fragment,e),J=!1},d(e){e&&o(s),e&&o(a),e&&o(c),e&&o(i),e&&o($),F(f),e&&o(U),F(b,e),e&&o(j),e&&o(w),F(h),e&&o(z),F(E,e),e&&o(_),F(g),e&&o(G),e&&o(W),F(v)}}}class Fe extends ee{constructor(s){super(),se(this,s,null,$e,ne,{})}}export{Fe as default};
