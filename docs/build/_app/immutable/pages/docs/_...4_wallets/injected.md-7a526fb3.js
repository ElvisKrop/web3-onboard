import{S as Ro,i as Ho,s as qo,e as o,t as e,k as F,w as $,c as t,a as p,h as a,d as n,m as C,x as u,b as w,g as f,M as s,y as E,q as h,o as _,B as b,E as So}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as as}from"../../../chunks/CodeFence-7c02fe57.js";import{C as lo}from"../../../chunks/CodeInline-7947d9bd.js";import{L as O}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as Uo,a as No}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function Go(m){let r;return{c(){r=e("EIP-1193")},l(i){r=a(i,"EIP-1193")},m(i,A){f(i,r,A)},d(i){i&&n(r)}}}function Yo(m){let r;return{c(){r=e("recognizes many injected wallets natively")},l(i){r=a(i,"recognizes many injected wallets natively")},m(i,A){f(i,r,A)},d(i){i&&n(r)}}}function Ko(m){let r;return{c(){r=e("#")},l(i){r=a(i,"#")},m(i,A){f(i,r,A)},d(i){i&&n(r)}}}function zo(m){let r,i;return r=new as({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/injected-wallets
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/injected-wallets</span></span>
<span class="line"></span></code></pre>`}}),{c(){$(r.$$.fragment)},l(A){u(r.$$.fragment,A)},m(A,v){E(r,A,v),i=!0},p:So,i(A){i||(h(r.$$.fragment,A),i=!0)},o(A){_(r.$$.fragment,A),i=!1},d(A){b(r,A)}}}function Qo(m){let r,i;return r=new as({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/injected-wallets
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/injected-wallets</span></span>
<span class="line"></span></code></pre>`}}),{c(){$(r.$$.fragment)},l(A){u(r.$$.fragment,A)},m(A,v){E(r,A,v),i=!0},p:So,i(A){i||(h(r.$$.fragment,A),i=!0)},o(A){_(r.$$.fragment,A),i=!1},d(A){b(r,A)}}}function Vo(m){let r,i,A,v;return r=new No({props:{value:"yarn",$$slots:{default:[zo]},$$scope:{ctx:m}}}),A=new No({props:{value:"npm",$$slots:{default:[Qo]},$$scope:{ctx:m}}}),{c(){$(r.$$.fragment),i=F(),$(A.$$.fragment)},l(d){u(r.$$.fragment,d),i=C(d),u(A.$$.fragment,d)},m(d,M){E(r,d,M),f(d,i,M),E(A,d,M),v=!0},p(d,M){const os={};M&1&&(os.$$scope={dirty:M,ctx:d}),r.$set(os);const k={};M&1&&(k.$$scope={dirty:M,ctx:d}),A.$set(k)},i(d){v||(h(r.$$.fragment,d),h(A.$$.fragment,d),v=!0)},o(d){_(r.$$.fragment,d),_(A.$$.fragment,d),v=!1},d(d){b(r,d),d&&n(i),b(A,d)}}}function Jo(m){let r;return{c(){r=e("#")},l(i){r=a(i,"#")},m(i,A){f(i,r,A)},d(i){i&&n(r)}}}function Xo(m){let r;return{c(){r=e("#")},l(i){r=a(i,"#")},m(i,A){f(i,r,A)},d(i){i&&n(r)}}}function Zo(m){let r;return{c(){r=e("#")},l(i){r=a(i,"#")},m(i,A){f(i,r,A)},d(i){i&&n(r)}}}function st(m){let r;return{c(){r=e("#")},l(i){r=a(i,"#")},m(i,A){f(i,r,A)},d(i){i&&n(r)}}}function lt(m){let r;return{c(){r=e("#")},l(i){r=a(i,"#")},m(i,A){f(i,r,A)},d(i){i&&n(r)}}}function nt(m){let r;return{c(){r=e("here")},l(i){r=a(i,"here")},m(i,A){f(i,r,A)},d(i){i&&n(r)}}}function et(m){let r,i,A,v,d,M,os,k,Zl,Tl,ts,sn,Wl,g,N,ln,xl,S,Ol,j,R,nn,Nl,ps,en,Sl,z,L,H,an,Rl,I,on,Q,tn,V,pn,Hl,J,rs,rn,ql,X,cs,cn,Ul,Z,B,q,Dn,Gl,U,yn,ss,Fn,Yl,ls,P,G,Cn,Kl,c,ns,An,Qs,fn,mn,dn,is,$n,Vs,un,En,Ds,hn,Js,_n,bn,ys,vn,Xs,Mn,wn,Fs,kn,Zs,In,gn,Cs,jn,sl,Ln,Bn,As,Pn,ll,Tn,Wn,fs,xn,nl,On,Nn,ms,Sn,el,Rn,Hn,ds,qn,al,Un,Gn,$s,Yn,ol,Kn,zn,us,Qn,tl,Vn,Jn,Es,Xn,pl,Zn,se,hs,le,rl,ne,ee,_s,ae,cl,oe,te,bs,pe,il,re,ce,vs,ie,Dl,De,ye,Ms,Fe,yl,Ce,Ae,ws,fe,Fl,me,de,ks,$e,Cl,ue,Ee,Is,he,Al,_e,be,gs,ve,fl,Me,we,js,ke,ml,Ie,ge,Ls,je,dl,Le,Be,Bs,Pe,$l,Te,We,Ps,xe,ul,Oe,Ne,Ts,Se,El,Re,He,Ws,qe,hl,Ue,Ge,xs,Ye,_l,Ke,ze,Os,Qe,bl,Ve,Je,Ns,Xe,vl,Ze,sa,Ss,la,Ml,na,ea,Rs,aa,wl,oa,ta,Hs,pa,kl,ra,ca,qs,ia,Il,Da,ya,Us,Fa,gl,Ca,zl,T,Y,Aa,Ql,es,fa,K,Vl;return M=new O({props:{href:"https://eips.ethereum.org/EIPS/eip-1193",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Go]},$$scope:{ctx:m}}}),k=new O({props:{href:"https://onboard.blocknative.com/docs/packages/injected#injected-wallets-supported-natively",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Yo]},$$scope:{ctx:m}}}),N=new O({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[Ko]},$$scope:{ctx:m}}}),S=new Uo({props:{values:["yarn","npm"],$$slots:{default:[Vo]},$$scope:{ctx:m}}}),R=new O({props:{class:"header-anchor",href:"#quickstart","aria-hidden":"true",$$slots:{default:[Jo]},$$scope:{ctx:m}}}),z=new as({props:{lang:"javascript",ext:"js",linesCount:28,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> MAINNET_RPC_URL</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">appMetadata</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">My App</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;SVG_ICON_STRING&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">My app using Onboard</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),H=new O({props:{class:"header-anchor",href:"#filtering-wallets","aria-hidden":"true",$$slots:{default:[Xo]},$$scope:{ctx:m}}}),Q=new lo({props:{code:"Platform"}}),V=new lo({props:{code:"false"}}),J=new as({props:{lang:"javascript",ext:"js",linesCount:16,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">filter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">[</span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Detected</span><span style="color: #F07178">]</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//... other options</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),X=new as({props:{lang:"javascript",ext:"js",linesCount:17,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">filter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">// allow only on non android mobile</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">[</span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Detected</span><span style="color: #F07178">]</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Android</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desktop</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//... other options</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),Z=new as({props:{lang:"typescript",ext:"ts",linesCount:19,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Platform</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Windows Phone</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Windows</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">macOS</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">iOS</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Android</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Linux</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Chrome OS</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Android Browser</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Chrome</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Chromium</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Firefox</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Microsoft Edge</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Opera</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Safari</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desktop</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">mobile</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">tablet</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span></code></pre>`}}),q=new O({props:{class:"header-anchor",href:"#adding-custom-injected-wallets","aria-hidden":"true",$$slots:{default:[Zo]},$$scope:{ctx:m}}}),ss=new lo({props:{code:"custom"}}),ls=new as({props:{lang:"typescript",ext:"ts",linesCount:33,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> equal </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// The label that will be displayed in the wallet selection modal</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Equal</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// The property on the window where the injected provider is defined</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Example: window.ethereum</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">injectedNamespace</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ethereum</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// A function that returns a bool indicating whether or not the provider is</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// of a certain identity. In this case, a unique property on the provider</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// is used to identify the provider.</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// In most cases this is in the format: is&lt;provider-name&gt;.</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// You may also include custom logic here if checking for the property</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// isn&#39;t sufficient.</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">checkProviderIdentity</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">({</span><span style="color: #A6ACCD"> provider </span><span style="color: #89DDFF">})</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!!</span><span style="color: #A6ACCD">provider </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!!</span><span style="color: #A6ACCD">provider[ProviderIdentityFlag</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">MetaMask]</span><span style="color: #89DDFF">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// A method that returns a string of the wallet icon which will be displayed</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">getIcon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> (</span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">import</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;PATH_TO_ICON&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">))</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">default</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Returns a valid EIP1193 provider. In some cases the provider will need to be patched to satisfy the EIP1193 Provider interface</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">getInterface</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> (</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">provider</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">ethereum</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// A list of platforms that this wallet supports</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">platforms</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desktop</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">custom</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [equal]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//... other options</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),G=new O({props:{class:"header-anchor",href:"#injected-wallets-supported-natively","aria-hidden":"true",$$slots:{default:[st]},$$scope:{ctx:m}}}),Y=new O({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[lt]},$$scope:{ctx:m}}}),K=new O({props:{href:"/docs/modules/core#build-environments",$$slots:{default:[nt]},$$scope:{ctx:m}}}),{c(){r=o("h1"),i=e("Injected Wallets"),A=F(),v=o("p"),d=e("This module lets web3-onboard automatically detect Browser Injected Wallets such as Metamask or Coinbase Wallet. We recommend you install this module to get the most out of your w3o implementation. This module supports "),$(M.$$.fragment),os=e(" and "),$(k.$$.fragment),Zl=e("."),Tl=F(),ts=o("p"),sn=e("Note: Make sure to install the core module before installing other modules to w3o."),Wl=F(),g=o("h2"),$(N.$$.fragment),ln=e(" Install"),xl=F(),$(S.$$.fragment),Ol=F(),j=o("h2"),$(R.$$.fragment),nn=e(" Quickstart"),Nl=F(),ps=o("p"),en=e("To allow all injected wallets that are supported, don't pass in any options:"),Sl=F(),$(z.$$.fragment),L=o("h2"),$(H.$$.fragment),an=e(" Filtering Wallets"),Rl=F(),I=o("p"),on=e("Injected wallets that you do not want to support can be filtered based on the "),$(Q.$$.fragment),tn=e(" the user is on. For example you may not want to support the 'Detected Wallet' that is detected automatically and filter it via all platforms by passing "),$(V.$$.fragment),pn=e(":"),Hl=F(),$(J.$$.fragment),rs=o("p"),rn=e("Or you may want to only filter the 'Detected Wallet' on a select few platforms:"),ql=F(),$(X.$$.fragment),cs=o("p"),cn=e("The following platforms can be used to filter wallets:"),Ul=F(),$(Z.$$.fragment),B=o("h2"),$(q.$$.fragment),Dn=e(" Adding Custom Injected Wallets"),Gl=F(),U=o("p"),yn=e("If there is an injected wallet that you would like to support in your app, but is not yet included in this repo, you can add a custom wallet module in the "),$(ss.$$.fragment),Fn=e(" field:"),Yl=F(),$(ls.$$.fragment),P=o("h3"),$(G.$$.fragment),Cn=e(" Injected Wallets Supported Natively"),Kl=F(),c=o("ul"),ns=o("li"),An=e("Metamask - "),Qs=o("em"),fn=e("Desktop & Mobile"),mn=e(" (Mobile relies on Wallet Connect and is detected inside MetaMask app browser)"),dn=F(),is=o("li"),$n=e("Binance - "),Vs=o("em"),un=e("Desktop"),En=F(),Ds=o("li"),hn=e("Coinbase - "),Js=o("em"),_n=e("Desktop & Mobile"),bn=F(),ys=o("li"),vn=e("Tally - "),Xs=o("em"),Mn=e("Desktop"),wn=F(),Fs=o("li"),kn=e("Exodus - "),Zs=o("em"),In=e("Desktop & Mobile"),gn=F(),Cs=o("li"),jn=e("Trust - "),sl=o("em"),Ln=e("Mobile"),Bn=F(),As=o("li"),Pn=e("Opera - "),ll=o("em"),Tn=e("Desktop & Mobile"),Wn=F(),fs=o("li"),xn=e("Status - "),nl=o("em"),On=e("Mobile"),Nn=F(),ms=o("li"),Sn=e("Alphawallet - "),el=o("em"),Rn=e("Mobile"),Hn=F(),ds=o("li"),qn=e("Atoken - "),al=o("em"),Un=e("Mobile"),Gn=F(),$s=o("li"),Yn=e("Bitpie - "),ol=o("em"),Kn=e("Mobile"),zn=F(),us=o("li"),Qn=e("Blockwallet - "),tl=o("em"),Vn=e("Desktop"),Jn=F(),Es=o("li"),Xn=e("Brave - "),pl=o("em"),Zn=e("Desktop & Mobile"),se=F(),hs=o("li"),le=e("D'Cent - "),rl=o("em"),ne=e("Mobile"),ee=F(),_s=o("li"),ae=e("Frame - "),cl=o("em"),oe=e("Desktop"),te=F(),bs=o("li"),pe=e("Huobiwallet - "),il=o("em"),re=e("Mobile"),ce=F(),vs=o("li"),ie=e("Hyperpay - "),Dl=o("em"),De=e("Mobile"),ye=F(),Ms=o("li"),Fe=e("IMtoken - "),yl=o("em"),Ce=e("Mobile"),Ae=F(),ws=o("li"),fe=e("Liquality - "),Fl=o("em"),me=e("Desktop"),de=F(),ks=o("li"),$e=e("Meetone - "),Cl=o("em"),ue=e("Mobile"),Ee=F(),Is=o("li"),he=e("Mykey - "),Al=o("em"),_e=e("Mobile"),be=F(),gs=o("li"),ve=e("Ownbit - "),fl=o("em"),Me=e("Mobile"),we=F(),js=o("li"),ke=e("Tokenpocket - "),ml=o("em"),Ie=e("Desktop & Mobile"),ge=F(),Ls=o("li"),je=e("TP - "),dl=o("em"),Le=e("Mobile"),Be=F(),Bs=o("li"),Pe=e("xDefi - "),$l=o("em"),Te=e("Desktop & Mobile"),We=F(),Ps=o("li"),xe=e("1inch - "),ul=o("em"),Oe=e("Mobile"),Ne=F(),Ts=o("li"),Se=e("Tokenary - "),El=o("em"),Re=e("Mobile"),He=F(),Ws=o("li"),qe=e("GameStop - "),hl=o("em"),Ue=e("Desktop"),Ge=F(),xs=o("li"),Ye=e("Rabby - "),_l=o("em"),Ke=e("Desktop"),ze=F(),Os=o("li"),Qe=e("MathWallet - "),bl=o("em"),Ve=e("Desktop & Mobile"),Je=F(),Ns=o("li"),Xe=e("Gamestop - "),vl=o("em"),Ze=e("Desktop"),sa=F(),Ss=o("li"),la=e("Bitkeep - "),Ml=o("em"),na=e("Desktop & Mobile"),ea=F(),Rs=o("li"),aa=e("Sequence - "),wl=o("em"),oa=e("Desktop & Mobile"),ta=F(),Hs=o("li"),pa=e("Core - "),kl=o("em"),ra=e("Desktop"),ca=F(),qs=o("li"),ia=e("Bitski - "),Il=o("em"),Da=e("Desktop & Mobile"),ya=F(),Us=o("li"),Fa=e("Enkrypt - "),gl=o("em"),Ca=e("Desktop & Mobile"),zl=F(),T=o("h2"),$(Y.$$.fragment),Aa=e(" Build Environments"),Ql=F(),es=o("p"),fa=e("For build env configurations and setups please see the Build Env section "),$(K.$$.fragment),this.h()},l(l){r=t(l,"H1",{});var y=p(r);i=a(y,"Injected Wallets"),y.forEach(n),A=C(l),v=t(l,"P",{});var W=p(v);d=a(W,"This module lets web3-onboard automatically detect Browser Injected Wallets such as Metamask or Coinbase Wallet. We recommend you install this module to get the most out of your w3o implementation. This module supports "),u(M.$$.fragment,W),os=a(W," and "),u(k.$$.fragment,W),Zl=a(W,"."),W.forEach(n),Tl=C(l),ts=t(l,"P",{});var jl=p(ts);sn=a(jl,"Note: Make sure to install the core module before installing other modules to w3o."),jl.forEach(n),Wl=C(l),g=t(l,"H2",{id:!0,tabindex:!0});var Gs=p(g);u(N.$$.fragment,Gs),ln=a(Gs," Install"),Gs.forEach(n),xl=C(l),u(S.$$.fragment,l),Ol=C(l),j=t(l,"H2",{id:!0,tabindex:!0});var Ys=p(j);u(R.$$.fragment,Ys),nn=a(Ys," Quickstart"),Ys.forEach(n),Nl=C(l),ps=t(l,"P",{});var Ll=p(ps);en=a(Ll,"To allow all injected wallets that are supported, don't pass in any options:"),Ll.forEach(n),Sl=C(l),u(z.$$.fragment,l),L=t(l,"H2",{id:!0,tabindex:!0});var Ks=p(L);u(H.$$.fragment,Ks),an=a(Ks," Filtering Wallets"),Ks.forEach(n),Rl=C(l),I=t(l,"P",{});var x=p(I);on=a(x,"Injected wallets that you do not want to support can be filtered based on the "),u(Q.$$.fragment,x),tn=a(x," the user is on. For example you may not want to support the 'Detected Wallet' that is detected automatically and filter it via all platforms by passing "),u(V.$$.fragment,x),pn=a(x,":"),x.forEach(n),Hl=C(l),u(J.$$.fragment,l),rs=t(l,"P",{});var Bl=p(rs);rn=a(Bl,"Or you may want to only filter the 'Detected Wallet' on a select few platforms:"),Bl.forEach(n),ql=C(l),u(X.$$.fragment,l),cs=t(l,"P",{});var Pl=p(cs);cn=a(Pl,"The following platforms can be used to filter wallets:"),Pl.forEach(n),Ul=C(l),u(Z.$$.fragment,l),B=t(l,"H2",{id:!0,tabindex:!0});var zs=p(B);u(q.$$.fragment,zs),Dn=a(zs," Adding Custom Injected Wallets"),zs.forEach(n),Gl=C(l),U=t(l,"P",{});var Jl=p(U);yn=a(Jl,"If there is an injected wallet that you would like to support in your app, but is not yet included in this repo, you can add a custom wallet module in the "),u(ss.$$.fragment,Jl),Fn=a(Jl," field:"),Jl.forEach(n),Yl=C(l),u(ls.$$.fragment,l),P=t(l,"H3",{id:!0,tabindex:!0});var ma=p(P);u(G.$$.fragment,ma),Cn=a(ma," Injected Wallets Supported Natively"),ma.forEach(n),Kl=C(l),c=t(l,"UL",{});var D=p(c);ns=t(D,"LI",{});var Xl=p(ns);An=a(Xl,"Metamask - "),Qs=t(Xl,"EM",{});var no=p(Qs);fn=a(no,"Desktop & Mobile"),no.forEach(n),mn=a(Xl," (Mobile relies on Wallet Connect and is detected inside MetaMask app browser)"),Xl.forEach(n),dn=C(D),is=t(D,"LI",{});var da=p(is);$n=a(da,"Binance - "),Vs=t(da,"EM",{});var eo=p(Vs);un=a(eo,"Desktop"),eo.forEach(n),da.forEach(n),En=C(D),Ds=t(D,"LI",{});var $a=p(Ds);hn=a($a,"Coinbase - "),Js=t($a,"EM",{});var ao=p(Js);_n=a(ao,"Desktop & Mobile"),ao.forEach(n),$a.forEach(n),bn=C(D),ys=t(D,"LI",{});var ua=p(ys);vn=a(ua,"Tally - "),Xs=t(ua,"EM",{});var oo=p(Xs);Mn=a(oo,"Desktop"),oo.forEach(n),ua.forEach(n),wn=C(D),Fs=t(D,"LI",{});var Ea=p(Fs);kn=a(Ea,"Exodus - "),Zs=t(Ea,"EM",{});var to=p(Zs);In=a(to,"Desktop & Mobile"),to.forEach(n),Ea.forEach(n),gn=C(D),Cs=t(D,"LI",{});var ha=p(Cs);jn=a(ha,"Trust - "),sl=t(ha,"EM",{});var po=p(sl);Ln=a(po,"Mobile"),po.forEach(n),ha.forEach(n),Bn=C(D),As=t(D,"LI",{});var _a=p(As);Pn=a(_a,"Opera - "),ll=t(_a,"EM",{});var ro=p(ll);Tn=a(ro,"Desktop & Mobile"),ro.forEach(n),_a.forEach(n),Wn=C(D),fs=t(D,"LI",{});var ba=p(fs);xn=a(ba,"Status - "),nl=t(ba,"EM",{});var co=p(nl);On=a(co,"Mobile"),co.forEach(n),ba.forEach(n),Nn=C(D),ms=t(D,"LI",{});var va=p(ms);Sn=a(va,"Alphawallet - "),el=t(va,"EM",{});var io=p(el);Rn=a(io,"Mobile"),io.forEach(n),va.forEach(n),Hn=C(D),ds=t(D,"LI",{});var Ma=p(ds);qn=a(Ma,"Atoken - "),al=t(Ma,"EM",{});var Do=p(al);Un=a(Do,"Mobile"),Do.forEach(n),Ma.forEach(n),Gn=C(D),$s=t(D,"LI",{});var wa=p($s);Yn=a(wa,"Bitpie - "),ol=t(wa,"EM",{});var yo=p(ol);Kn=a(yo,"Mobile"),yo.forEach(n),wa.forEach(n),zn=C(D),us=t(D,"LI",{});var ka=p(us);Qn=a(ka,"Blockwallet - "),tl=t(ka,"EM",{});var Fo=p(tl);Vn=a(Fo,"Desktop"),Fo.forEach(n),ka.forEach(n),Jn=C(D),Es=t(D,"LI",{});var Ia=p(Es);Xn=a(Ia,"Brave - "),pl=t(Ia,"EM",{});var Co=p(pl);Zn=a(Co,"Desktop & Mobile"),Co.forEach(n),Ia.forEach(n),se=C(D),hs=t(D,"LI",{});var ga=p(hs);le=a(ga,"D'Cent - "),rl=t(ga,"EM",{});var Ao=p(rl);ne=a(Ao,"Mobile"),Ao.forEach(n),ga.forEach(n),ee=C(D),_s=t(D,"LI",{});var ja=p(_s);ae=a(ja,"Frame - "),cl=t(ja,"EM",{});var fo=p(cl);oe=a(fo,"Desktop"),fo.forEach(n),ja.forEach(n),te=C(D),bs=t(D,"LI",{});var La=p(bs);pe=a(La,"Huobiwallet - "),il=t(La,"EM",{});var mo=p(il);re=a(mo,"Mobile"),mo.forEach(n),La.forEach(n),ce=C(D),vs=t(D,"LI",{});var Ba=p(vs);ie=a(Ba,"Hyperpay - "),Dl=t(Ba,"EM",{});var $o=p(Dl);De=a($o,"Mobile"),$o.forEach(n),Ba.forEach(n),ye=C(D),Ms=t(D,"LI",{});var Pa=p(Ms);Fe=a(Pa,"IMtoken - "),yl=t(Pa,"EM",{});var uo=p(yl);Ce=a(uo,"Mobile"),uo.forEach(n),Pa.forEach(n),Ae=C(D),ws=t(D,"LI",{});var Ta=p(ws);fe=a(Ta,"Liquality - "),Fl=t(Ta,"EM",{});var Eo=p(Fl);me=a(Eo,"Desktop"),Eo.forEach(n),Ta.forEach(n),de=C(D),ks=t(D,"LI",{});var Wa=p(ks);$e=a(Wa,"Meetone - "),Cl=t(Wa,"EM",{});var ho=p(Cl);ue=a(ho,"Mobile"),ho.forEach(n),Wa.forEach(n),Ee=C(D),Is=t(D,"LI",{});var xa=p(Is);he=a(xa,"Mykey - "),Al=t(xa,"EM",{});var _o=p(Al);_e=a(_o,"Mobile"),_o.forEach(n),xa.forEach(n),be=C(D),gs=t(D,"LI",{});var Oa=p(gs);ve=a(Oa,"Ownbit - "),fl=t(Oa,"EM",{});var bo=p(fl);Me=a(bo,"Mobile"),bo.forEach(n),Oa.forEach(n),we=C(D),js=t(D,"LI",{});var Na=p(js);ke=a(Na,"Tokenpocket - "),ml=t(Na,"EM",{});var vo=p(ml);Ie=a(vo,"Desktop & Mobile"),vo.forEach(n),Na.forEach(n),ge=C(D),Ls=t(D,"LI",{});var Sa=p(Ls);je=a(Sa,"TP - "),dl=t(Sa,"EM",{});var Mo=p(dl);Le=a(Mo,"Mobile"),Mo.forEach(n),Sa.forEach(n),Be=C(D),Bs=t(D,"LI",{});var Ra=p(Bs);Pe=a(Ra,"xDefi - "),$l=t(Ra,"EM",{});var wo=p($l);Te=a(wo,"Desktop & Mobile"),wo.forEach(n),Ra.forEach(n),We=C(D),Ps=t(D,"LI",{});var Ha=p(Ps);xe=a(Ha,"1inch - "),ul=t(Ha,"EM",{});var ko=p(ul);Oe=a(ko,"Mobile"),ko.forEach(n),Ha.forEach(n),Ne=C(D),Ts=t(D,"LI",{});var qa=p(Ts);Se=a(qa,"Tokenary - "),El=t(qa,"EM",{});var Io=p(El);Re=a(Io,"Mobile"),Io.forEach(n),qa.forEach(n),He=C(D),Ws=t(D,"LI",{});var Ua=p(Ws);qe=a(Ua,"GameStop - "),hl=t(Ua,"EM",{});var go=p(hl);Ue=a(go,"Desktop"),go.forEach(n),Ua.forEach(n),Ge=C(D),xs=t(D,"LI",{});var Ga=p(xs);Ye=a(Ga,"Rabby - "),_l=t(Ga,"EM",{});var jo=p(_l);Ke=a(jo,"Desktop"),jo.forEach(n),Ga.forEach(n),ze=C(D),Os=t(D,"LI",{});var Ya=p(Os);Qe=a(Ya,"MathWallet - "),bl=t(Ya,"EM",{});var Lo=p(bl);Ve=a(Lo,"Desktop & Mobile"),Lo.forEach(n),Ya.forEach(n),Je=C(D),Ns=t(D,"LI",{});var Ka=p(Ns);Xe=a(Ka,"Gamestop - "),vl=t(Ka,"EM",{});var Bo=p(vl);Ze=a(Bo,"Desktop"),Bo.forEach(n),Ka.forEach(n),sa=C(D),Ss=t(D,"LI",{});var za=p(Ss);la=a(za,"Bitkeep - "),Ml=t(za,"EM",{});var Po=p(Ml);na=a(Po,"Desktop & Mobile"),Po.forEach(n),za.forEach(n),ea=C(D),Rs=t(D,"LI",{});var Qa=p(Rs);aa=a(Qa,"Sequence - "),wl=t(Qa,"EM",{});var To=p(wl);oa=a(To,"Desktop & Mobile"),To.forEach(n),Qa.forEach(n),ta=C(D),Hs=t(D,"LI",{});var Va=p(Hs);pa=a(Va,"Core - "),kl=t(Va,"EM",{});var Wo=p(kl);ra=a(Wo,"Desktop"),Wo.forEach(n),Va.forEach(n),ca=C(D),qs=t(D,"LI",{});var Ja=p(qs);ia=a(Ja,"Bitski - "),Il=t(Ja,"EM",{});var xo=p(Il);Da=a(xo,"Desktop & Mobile"),xo.forEach(n),Ja.forEach(n),ya=C(D),Us=t(D,"LI",{});var Xa=p(Us);Fa=a(Xa,"Enkrypt - "),gl=t(Xa,"EM",{});var Oo=p(gl);Ca=a(Oo,"Desktop & Mobile"),Oo.forEach(n),Xa.forEach(n),D.forEach(n),zl=C(l),T=t(l,"H2",{id:!0,tabindex:!0});var Za=p(T);u(Y.$$.fragment,Za),Aa=a(Za," Build Environments"),Za.forEach(n),Ql=C(l),es=t(l,"P",{});var so=p(es);fa=a(so,"For build env configurations and setups please see the Build Env section "),u(K.$$.fragment,so),so.forEach(n),this.h()},h(){w(g,"id","install"),w(g,"tabindex","-1"),w(j,"id","quickstart"),w(j,"tabindex","-1"),w(L,"id","filtering-wallets"),w(L,"tabindex","-1"),w(B,"id","adding-custom-injected-wallets"),w(B,"tabindex","-1"),w(P,"id","injected-wallets-supported-natively"),w(P,"tabindex","-1"),w(T,"id","build-environments"),w(T,"tabindex","-1")},m(l,y){f(l,r,y),s(r,i),f(l,A,y),f(l,v,y),s(v,d),E(M,v,null),s(v,os),E(k,v,null),s(v,Zl),f(l,Tl,y),f(l,ts,y),s(ts,sn),f(l,Wl,y),f(l,g,y),E(N,g,null),s(g,ln),f(l,xl,y),E(S,l,y),f(l,Ol,y),f(l,j,y),E(R,j,null),s(j,nn),f(l,Nl,y),f(l,ps,y),s(ps,en),f(l,Sl,y),E(z,l,y),f(l,L,y),E(H,L,null),s(L,an),f(l,Rl,y),f(l,I,y),s(I,on),E(Q,I,null),s(I,tn),E(V,I,null),s(I,pn),f(l,Hl,y),E(J,l,y),f(l,rs,y),s(rs,rn),f(l,ql,y),E(X,l,y),f(l,cs,y),s(cs,cn),f(l,Ul,y),E(Z,l,y),f(l,B,y),E(q,B,null),s(B,Dn),f(l,Gl,y),f(l,U,y),s(U,yn),E(ss,U,null),s(U,Fn),f(l,Yl,y),E(ls,l,y),f(l,P,y),E(G,P,null),s(P,Cn),f(l,Kl,y),f(l,c,y),s(c,ns),s(ns,An),s(ns,Qs),s(Qs,fn),s(ns,mn),s(c,dn),s(c,is),s(is,$n),s(is,Vs),s(Vs,un),s(c,En),s(c,Ds),s(Ds,hn),s(Ds,Js),s(Js,_n),s(c,bn),s(c,ys),s(ys,vn),s(ys,Xs),s(Xs,Mn),s(c,wn),s(c,Fs),s(Fs,kn),s(Fs,Zs),s(Zs,In),s(c,gn),s(c,Cs),s(Cs,jn),s(Cs,sl),s(sl,Ln),s(c,Bn),s(c,As),s(As,Pn),s(As,ll),s(ll,Tn),s(c,Wn),s(c,fs),s(fs,xn),s(fs,nl),s(nl,On),s(c,Nn),s(c,ms),s(ms,Sn),s(ms,el),s(el,Rn),s(c,Hn),s(c,ds),s(ds,qn),s(ds,al),s(al,Un),s(c,Gn),s(c,$s),s($s,Yn),s($s,ol),s(ol,Kn),s(c,zn),s(c,us),s(us,Qn),s(us,tl),s(tl,Vn),s(c,Jn),s(c,Es),s(Es,Xn),s(Es,pl),s(pl,Zn),s(c,se),s(c,hs),s(hs,le),s(hs,rl),s(rl,ne),s(c,ee),s(c,_s),s(_s,ae),s(_s,cl),s(cl,oe),s(c,te),s(c,bs),s(bs,pe),s(bs,il),s(il,re),s(c,ce),s(c,vs),s(vs,ie),s(vs,Dl),s(Dl,De),s(c,ye),s(c,Ms),s(Ms,Fe),s(Ms,yl),s(yl,Ce),s(c,Ae),s(c,ws),s(ws,fe),s(ws,Fl),s(Fl,me),s(c,de),s(c,ks),s(ks,$e),s(ks,Cl),s(Cl,ue),s(c,Ee),s(c,Is),s(Is,he),s(Is,Al),s(Al,_e),s(c,be),s(c,gs),s(gs,ve),s(gs,fl),s(fl,Me),s(c,we),s(c,js),s(js,ke),s(js,ml),s(ml,Ie),s(c,ge),s(c,Ls),s(Ls,je),s(Ls,dl),s(dl,Le),s(c,Be),s(c,Bs),s(Bs,Pe),s(Bs,$l),s($l,Te),s(c,We),s(c,Ps),s(Ps,xe),s(Ps,ul),s(ul,Oe),s(c,Ne),s(c,Ts),s(Ts,Se),s(Ts,El),s(El,Re),s(c,He),s(c,Ws),s(Ws,qe),s(Ws,hl),s(hl,Ue),s(c,Ge),s(c,xs),s(xs,Ye),s(xs,_l),s(_l,Ke),s(c,ze),s(c,Os),s(Os,Qe),s(Os,bl),s(bl,Ve),s(c,Je),s(c,Ns),s(Ns,Xe),s(Ns,vl),s(vl,Ze),s(c,sa),s(c,Ss),s(Ss,la),s(Ss,Ml),s(Ml,na),s(c,ea),s(c,Rs),s(Rs,aa),s(Rs,wl),s(wl,oa),s(c,ta),s(c,Hs),s(Hs,pa),s(Hs,kl),s(kl,ra),s(c,ca),s(c,qs),s(qs,ia),s(qs,Il),s(Il,Da),s(c,ya),s(c,Us),s(Us,Fa),s(Us,gl),s(gl,Ca),f(l,zl,y),f(l,T,y),E(Y,T,null),s(T,Aa),f(l,Ql,y),f(l,es,y),s(es,fa),E(K,es,null),Vl=!0},p(l,[y]){const W={};y&1&&(W.$$scope={dirty:y,ctx:l}),M.$set(W);const jl={};y&1&&(jl.$$scope={dirty:y,ctx:l}),k.$set(jl);const Gs={};y&1&&(Gs.$$scope={dirty:y,ctx:l}),N.$set(Gs);const Ys={};y&1&&(Ys.$$scope={dirty:y,ctx:l}),S.$set(Ys);const Ll={};y&1&&(Ll.$$scope={dirty:y,ctx:l}),R.$set(Ll);const Ks={};y&1&&(Ks.$$scope={dirty:y,ctx:l}),H.$set(Ks);const x={};y&1&&(x.$$scope={dirty:y,ctx:l}),q.$set(x);const Bl={};y&1&&(Bl.$$scope={dirty:y,ctx:l}),G.$set(Bl);const Pl={};y&1&&(Pl.$$scope={dirty:y,ctx:l}),Y.$set(Pl);const zs={};y&1&&(zs.$$scope={dirty:y,ctx:l}),K.$set(zs)},i(l){Vl||(h(M.$$.fragment,l),h(k.$$.fragment,l),h(N.$$.fragment,l),h(S.$$.fragment,l),h(R.$$.fragment,l),h(z.$$.fragment,l),h(H.$$.fragment,l),h(Q.$$.fragment,l),h(V.$$.fragment,l),h(J.$$.fragment,l),h(X.$$.fragment,l),h(Z.$$.fragment,l),h(q.$$.fragment,l),h(ss.$$.fragment,l),h(ls.$$.fragment,l),h(G.$$.fragment,l),h(Y.$$.fragment,l),h(K.$$.fragment,l),Vl=!0)},o(l){_(M.$$.fragment,l),_(k.$$.fragment,l),_(N.$$.fragment,l),_(S.$$.fragment,l),_(R.$$.fragment,l),_(z.$$.fragment,l),_(H.$$.fragment,l),_(Q.$$.fragment,l),_(V.$$.fragment,l),_(J.$$.fragment,l),_(X.$$.fragment,l),_(Z.$$.fragment,l),_(q.$$.fragment,l),_(ss.$$.fragment,l),_(ls.$$.fragment,l),_(G.$$.fragment,l),_(Y.$$.fragment,l),_(K.$$.fragment,l),Vl=!1},d(l){l&&n(r),l&&n(A),l&&n(v),b(M),b(k),l&&n(Tl),l&&n(ts),l&&n(Wl),l&&n(g),b(N),l&&n(xl),b(S,l),l&&n(Ol),l&&n(j),b(R),l&&n(Nl),l&&n(ps),l&&n(Sl),b(z,l),l&&n(L),b(H),l&&n(Rl),l&&n(I),b(Q),b(V),l&&n(Hl),b(J,l),l&&n(rs),l&&n(ql),b(X,l),l&&n(cs),l&&n(Ul),b(Z,l),l&&n(B),b(q),l&&n(Gl),l&&n(U),b(ss),l&&n(Yl),b(ls,l),l&&n(P),b(G),l&&n(Kl),l&&n(c),l&&n(zl),l&&n(T),b(Y),l&&n(Ql),l&&n(es),b(K)}}}class Ft extends Ro{constructor(r){super(),Ho(this,r,null,et,qo,{})}}export{Ft as default};
