import{S as Os,i as xs,s as Ts,e as _,t as r,k as U,w as D,c as w,a as E,h as c,d as o,m as B,x as y,b as v,g as t,M as A,y as F,q as C,o as f,B as u,E as Is}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as os}from"../../../chunks/CodeFence-7c02fe57.js";import{C as ks}from"../../../chunks/CodeInline-7947d9bd.js";import{L as Y}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as qs,a as Rs}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function Ms(i){let n;return{c(){n=r("#")},l(a){n=c(a,"#")},m(a,e){t(a,n,e)},d(a){a&&o(n)}}}function Ls(i){let n,a;return n=new os({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/uauth
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/uauth</span></span>
<span class="line"></span></code></pre>`}}),{c(){D(n.$$.fragment)},l(e){y(n.$$.fragment,e)},m(e,$){F(n,e,$),a=!0},p:Is,i(e){a||(C(n.$$.fragment,e),a=!0)},o(e){f(n.$$.fragment,e),a=!1},d(e){u(n,e)}}}function Ss(i){let n,a;return n=new os({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/uauth
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/uauth</span></span>
<span class="line"></span></code></pre>`}}),{c(){D(n.$$.fragment)},l(e){y(n.$$.fragment,e)},m(e,$){F(n,e,$),a=!0},p:Is,i(e){a||(C(n.$$.fragment,e),a=!0)},o(e){f(n.$$.fragment,e),a=!1},d(e){u(n,e)}}}function Ws(i){let n,a,e,$;return n=new Rs({props:{value:"yarn",$$slots:{default:[Ls]},$$scope:{ctx:i}}}),e=new Rs({props:{value:"npm",$$slots:{default:[Ss]},$$scope:{ctx:i}}}),{c(){D(n.$$.fragment),a=U(),D(e.$$.fragment)},l(p){y(n.$$.fragment,p),a=B(p),y(e.$$.fragment,p)},m(p,m){F(n,p,m),t(p,a,m),F(e,p,m),$=!0},p(p,m){const g={};m&1&&(g.$$scope={dirty:m,ctx:p}),n.$set(g);const b={};m&1&&(b.$$scope={dirty:m,ctx:p}),e.$set(b)},i(p){$||(C(n.$$.fragment,p),C(e.$$.fragment,p),$=!0)},o(p){f(n.$$.fragment,p),f(e.$$.fragment,p),$=!1},d(p){u(n,p),p&&o(a),u(e,p)}}}function Hs(i){let n;return{c(){n=r("#")},l(a){n=c(a,"#")},m(a,e){t(a,n,e)},d(a){a&&o(n)}}}function Ps(i){let n;return{c(){n=r("Login Client Congifuration Docs")},l(a){n=c(a,"Login Client Congifuration Docs")},m(a,e){t(a,n,e)},d(a){a&&o(n)}}}function Ys(i){let n;return{c(){n=r("Rules for Redirect URIs Docs")},l(a){n=c(a,"Rules for Redirect URIs Docs")},m(a,e){t(a,n,e)},d(a){a&&o(n)}}}function Ns(i){let n;return{c(){n=r("#")},l(a){n=c(a,"#")},m(a,e){t(a,n,e)},d(a){a&&o(n)}}}function zs(i){let n;return{c(){n=r("#")},l(a){n=c(a,"#")},m(a,e){t(a,n,e)},d(a){a&&o(n)}}}function Gs(i){let n;return{c(){n=r("#")},l(a){n=c(a,"#")},m(a,e){t(a,n,e)},d(a){a&&o(n)}}}function Vs(i){let n;return{c(){n=r("here")},l(a){n=c(a,"here")},m(a,e){t(a,n,e)},d(a){a&&o(n)}}}function js(i){let n,a,e,$,p,m,g,b,fs,ts,x,ps,k,T,us,rs,d,As,q,$s,as,ds,ms,N,hs,M,gs,cs,z,R,L,bs,is,G,I,S,_s,Ds,W,ws,V,Es,ys,j,O,H,Us,Fs,J,Bs,P,Cs;return b=new Y({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[Ms]},$$scope:{ctx:i}}}),x=new qs({props:{values:["yarn","npm"],$$slots:{default:[Ws]},$$scope:{ctx:i}}}),T=new Y({props:{class:"header-anchor",href:"#options","aria-hidden":"true",$$slots:{default:[Hs]},$$scope:{ctx:i}}}),q=new Y({props:{href:"https://docs.unstoppabledomains.com/login-with-unstoppable/login-integration-guides/login-client-configuration/",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ps]},$$scope:{ctx:i}}}),N=new ks({props:{code:"UauthInitOptions"}}),M=new Y({props:{href:"https://docs.unstoppabledomains.com/login-with-unstoppable/login-integration-guides/login-client-configuration/#rules-for-redirect-uris",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ys]},$$scope:{ctx:i}}}),z=new os({props:{lang:"typescript",ext:"ts",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UauthInitOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">clientID</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// required and will throw an error if not included: links dapp to Unstoppable Domains for customization</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">redirectUri</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// required and will throw an error if not included: used for pop-up and callback redirection</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">scope</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default = &#39;openid wallet&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">shouldLoginWithRedirect</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// if true, redirects to your callback page</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">bridge</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default = &#39;https://bridge.walletconnect.org&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">qrcodeModalOptions</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mobileLinks</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD">[] </span><span style="color: #464B5D; font-style: italic">// set the order and list of mobile linking wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">connectFirstChainId</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// if true, connects to the first network chain provided</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),L=new Y({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[Ns]},$$scope:{ctx:i}}}),G=new os({props:{lang:"typescript",ext:"ts",linesCount:33,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> uauthModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/uauth</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// initialize the module with options</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> uauth </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">uauthModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">clientID</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">YOUR_CLIENT_ID</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">redirectUri</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">YOUR_REDIRECT_URI</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  scope?</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">YOUR_SCOPES</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  shouldLoginWithRedirect?</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #A6ACCD">  bridge</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">YOUR_CUSTOM_BRIDGE_SERVER</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  qrcodeModalOptions?</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mobileLinks</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rainbow</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">metamask</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">argent</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">trust</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">imtoken</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">pillar</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  connectFirstChainId?</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// can also initialize with basic options...</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// const uauth = uauthModule({</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">//  clientID: &quot;YOUR_CLIENT_ID&quot;,</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">//  redirectUri: &quot;YOUR_REDIRECT_URI&quot;</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// })</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    uauth</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),S=new Y({props:{class:"header-anchor",href:"#accessing-the-uauth-configuration","aria-hidden":"true",$$slots:{default:[zs]},$$scope:{ctx:i}}}),V=new ks({props:{code:"UauthInitOptions"}}),j=new os({props:{lang:"typescript",ext:"ts",linesCount:9,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets$ </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">wallets</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">pipe</span><span style="color: #A6ACCD">(</span><span style="color: #82AAFF">share</span><span style="color: #A6ACCD">())</span></span>
<span class="line"><span style="color: #A6ACCD">wallets$</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">unstoppableUser</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">find</span><span style="color: #F07178">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">label</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Unstoppable</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">unstoppableUser</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">// This will allow insight into the approved user details</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">unstoppableUser</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">instance</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">user</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),H=new Y({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[Gs]},$$scope:{ctx:i}}}),P=new Y({props:{href:"/docs/modules/core#build-environments",$$slots:{default:[Vs]},$$scope:{ctx:i}}}),{c(){n=_("h1"),a=r("UAuth"),e=U(),$=_("p"),p=r("Wallet module for connecting Unstoppable Domains to web3-onboard"),m=U(),g=_("h3"),D(b.$$.fragment),fs=r(" Install"),ts=U(),D(x.$$.fragment),ps=U(),k=_("h2"),D(T.$$.fragment),us=r(" Options"),rs=U(),d=_("p"),As=r("Follow the "),D(q.$$.fragment),$s=r(` on the Unstoppable Domains website to get setup with your clientID and redirectUri.
`),as=_("strong"),ds=r("Note:"),ms=r(" The Redirection URI value(s) in the client configuration MUST exactly match the redirect_uri parameter value used in "),D(N.$$.fragment),hs=r(". More specifics can be found in the "),D(M.$$.fragment),gs=r("."),cs=U(),D(z.$$.fragment),R=_("h2"),D(L.$$.fragment),bs=r(" Usage"),is=U(),D(G.$$.fragment),I=_("h3"),D(S.$$.fragment),_s=r(" Accessing the UAuth configuration"),Ds=U(),W=_("p"),ws=r(`When Unstoppable Domains is connected the UAuth user instance is exposed.
This can be used to get information related to the user scopes requested through the `),D(V.$$.fragment),Es=r("."),ys=U(),D(j.$$.fragment),O=_("h2"),D(H.$$.fragment),Us=r(" Build Environments"),Fs=U(),J=_("p"),Bs=r("For build env configurations and setups please see the Build Env section "),D(P.$$.fragment),this.h()},l(s){n=w(s,"H1",{});var l=E(n);a=c(l,"UAuth"),l.forEach(o),e=B(s),$=w(s,"P",{});var es=E($);p=c(es,"Wallet module for connecting Unstoppable Domains to web3-onboard"),es.forEach(o),m=B(s),g=w(s,"H3",{id:!0,tabindex:!0});var Q=E(g);y(b.$$.fragment,Q),fs=c(Q," Install"),Q.forEach(o),ts=B(s),y(x.$$.fragment,s),ps=B(s),k=w(s,"H2",{id:!0,tabindex:!0});var X=E(k);y(T.$$.fragment,X),us=c(X," Options"),X.forEach(o),rs=B(s),d=w(s,"P",{});var h=E(d);As=c(h,"Follow the "),y(q.$$.fragment,h),$s=c(h,` on the Unstoppable Domains website to get setup with your clientID and redirectUri.
`),as=w(h,"STRONG",{});var ls=E(as);ds=c(ls,"Note:"),ls.forEach(o),ms=c(h," The Redirection URI value(s) in the client configuration MUST exactly match the redirect_uri parameter value used in "),y(N.$$.fragment,h),hs=c(h,". More specifics can be found in the "),y(M.$$.fragment,h),gs=c(h,"."),h.forEach(o),cs=B(s),y(z.$$.fragment,s),R=w(s,"H2",{id:!0,tabindex:!0});var Z=E(R);y(L.$$.fragment,Z),bs=c(Z," Usage"),Z.forEach(o),is=B(s),y(G.$$.fragment,s),I=w(s,"H3",{id:!0,tabindex:!0});var ss=E(I);y(S.$$.fragment,ss),_s=c(ss," Accessing the UAuth configuration"),ss.forEach(o),Ds=B(s),W=w(s,"P",{});var K=E(W);ws=c(K,`When Unstoppable Domains is connected the UAuth user instance is exposed.
This can be used to get information related to the user scopes requested through the `),y(V.$$.fragment,K),Es=c(K,"."),K.forEach(o),ys=B(s),y(j.$$.fragment,s),O=w(s,"H2",{id:!0,tabindex:!0});var ns=E(O);y(H.$$.fragment,ns),Us=c(ns," Build Environments"),ns.forEach(o),Fs=B(s),J=w(s,"P",{});var vs=E(J);Bs=c(vs,"For build env configurations and setups please see the Build Env section "),y(P.$$.fragment,vs),vs.forEach(o),this.h()},h(){v(g,"id","install"),v(g,"tabindex","-1"),v(k,"id","options"),v(k,"tabindex","-1"),v(R,"id","usage"),v(R,"tabindex","-1"),v(I,"id","accessing-the-uauth-configuration"),v(I,"tabindex","-1"),v(O,"id","build-environments"),v(O,"tabindex","-1")},m(s,l){t(s,n,l),A(n,a),t(s,e,l),t(s,$,l),A($,p),t(s,m,l),t(s,g,l),F(b,g,null),A(g,fs),t(s,ts,l),F(x,s,l),t(s,ps,l),t(s,k,l),F(T,k,null),A(k,us),t(s,rs,l),t(s,d,l),A(d,As),F(q,d,null),A(d,$s),A(d,as),A(as,ds),A(d,ms),F(N,d,null),A(d,hs),F(M,d,null),A(d,gs),t(s,cs,l),F(z,s,l),t(s,R,l),F(L,R,null),A(R,bs),t(s,is,l),F(G,s,l),t(s,I,l),F(S,I,null),A(I,_s),t(s,Ds,l),t(s,W,l),A(W,ws),F(V,W,null),A(W,Es),t(s,ys,l),F(j,s,l),t(s,O,l),F(H,O,null),A(O,Us),t(s,Fs,l),t(s,J,l),A(J,Bs),F(P,J,null),Cs=!0},p(s,[l]){const es={};l&1&&(es.$$scope={dirty:l,ctx:s}),b.$set(es);const Q={};l&1&&(Q.$$scope={dirty:l,ctx:s}),x.$set(Q);const X={};l&1&&(X.$$scope={dirty:l,ctx:s}),T.$set(X);const h={};l&1&&(h.$$scope={dirty:l,ctx:s}),q.$set(h);const ls={};l&1&&(ls.$$scope={dirty:l,ctx:s}),M.$set(ls);const Z={};l&1&&(Z.$$scope={dirty:l,ctx:s}),L.$set(Z);const ss={};l&1&&(ss.$$scope={dirty:l,ctx:s}),S.$set(ss);const K={};l&1&&(K.$$scope={dirty:l,ctx:s}),H.$set(K);const ns={};l&1&&(ns.$$scope={dirty:l,ctx:s}),P.$set(ns)},i(s){Cs||(C(b.$$.fragment,s),C(x.$$.fragment,s),C(T.$$.fragment,s),C(q.$$.fragment,s),C(N.$$.fragment,s),C(M.$$.fragment,s),C(z.$$.fragment,s),C(L.$$.fragment,s),C(G.$$.fragment,s),C(S.$$.fragment,s),C(V.$$.fragment,s),C(j.$$.fragment,s),C(H.$$.fragment,s),C(P.$$.fragment,s),Cs=!0)},o(s){f(b.$$.fragment,s),f(x.$$.fragment,s),f(T.$$.fragment,s),f(q.$$.fragment,s),f(N.$$.fragment,s),f(M.$$.fragment,s),f(z.$$.fragment,s),f(L.$$.fragment,s),f(G.$$.fragment,s),f(S.$$.fragment,s),f(V.$$.fragment,s),f(j.$$.fragment,s),f(H.$$.fragment,s),f(P.$$.fragment,s),Cs=!1},d(s){s&&o(n),s&&o(e),s&&o($),s&&o(m),s&&o(g),u(b),s&&o(ts),u(x,s),s&&o(ps),s&&o(k),u(T),s&&o(rs),s&&o(d),u(q),u(N),u(M),s&&o(cs),u(z,s),s&&o(R),u(L),s&&o(is),u(G,s),s&&o(I),u(S),s&&o(Ds),s&&o(W),u(V),s&&o(ys),u(j,s),s&&o(O),u(H),s&&o(Fs),s&&o(J),u(P)}}}class ln extends Os{constructor(n){super(),xs(this,n,null,js,Ts,{})}}export{ln as default};
