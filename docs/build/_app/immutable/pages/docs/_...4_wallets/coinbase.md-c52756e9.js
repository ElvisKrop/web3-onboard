import{S as cs,i as is,s as $s,e as q,t as $,k as x,w as u,c as z,a as I,h as f,d as t,m as S,x as m,b as W,g as p,M as B,y as C,q as D,o as d,B as y,E as rs}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as ss}from"../../../chunks/CodeFence-7c02fe57.js";import{L as N}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as fs,a as ps}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function us(r){let n;return{c(){n=$("Coinbase Wallet Developer Docs")},l(e){n=f(e,"Coinbase Wallet Developer Docs")},m(e,a){p(e,n,a)},d(e){e&&t(n)}}}function ms(r){let n;return{c(){n=$("#")},l(e){n=f(e,"#")},m(e,a){p(e,n,a)},d(e){e&&t(n)}}}function Cs(r){let n,e;return n=new ss({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/coinbase
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/coinbase</span></span>
<span class="line"></span></code></pre>`}}),{c(){u(n.$$.fragment)},l(a){m(n.$$.fragment,a)},m(a,c){C(n,a,c),e=!0},p:rs,i(a){e||(D(n.$$.fragment,a),e=!0)},o(a){d(n.$$.fragment,a),e=!1},d(a){y(n,a)}}}function Ds(r){let n,e;return n=new ss({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/coinbase
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/coinbase</span></span>
<span class="line"></span></code></pre>`}}),{c(){u(n.$$.fragment)},l(a){m(n.$$.fragment,a)},m(a,c){C(n,a,c),e=!0},p:rs,i(a){e||(D(n.$$.fragment,a),e=!0)},o(a){d(n.$$.fragment,a),e=!1},d(a){y(n,a)}}}function ds(r){let n,e,a,c;return n=new ps({props:{value:"yarn",$$slots:{default:[Cs]},$$scope:{ctx:r}}}),a=new ps({props:{value:"npm",$$slots:{default:[Ds]},$$scope:{ctx:r}}}),{c(){u(n.$$.fragment),e=x(),u(a.$$.fragment)},l(o){m(n.$$.fragment,o),e=S(o),m(a.$$.fragment,o)},m(o,i){C(n,o,i),p(o,e,i),C(a,o,i),c=!0},p(o,i){const K={};i&1&&(K.$$scope={dirty:i,ctx:o}),n.$set(K);const O={};i&1&&(O.$$scope={dirty:i,ctx:o}),a.$set(O)},i(o){c||(D(n.$$.fragment,o),D(a.$$.fragment,o),c=!0)},o(o){d(n.$$.fragment,o),d(a.$$.fragment,o),c=!1},d(o){y(n,o),o&&t(e),y(a,o)}}}function ys(r){let n;return{c(){n=$("#")},l(e){n=f(e,"#")},m(e,a){p(e,n,a)},d(e){e&&t(n)}}}function As(r){let n;return{c(){n=$("#")},l(e){n=f(e,"#")},m(e,a){p(e,n,a)},d(e){e&&t(n)}}}function Fs(r){let n;return{c(){n=$("#")},l(e){n=f(e,"#")},m(e,a){p(e,n,a)},d(e){e&&t(n)}}}function bs(r){let n;return{c(){n=$("here")},l(e){n=f(e,"here")},m(e,a){p(e,n,a)},d(e){e&&t(n)}}}function _s(r){let n,e,a,c,o,i,K,O,A,h,ns,Q,g,R,F,w,es,V,H,b,k,as,X,M,_,v,ls,Y,P,ts,E,Z;return i=new N({props:{href:"https://docs.cloud.coinbase.com/wallet-sdk/docs",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[us]},$$scope:{ctx:r}}}),h=new N({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[ms]},$$scope:{ctx:r}}}),g=new fs({props:{values:["yarn","npm"],$$slots:{default:[ds]},$$scope:{ctx:r}}}),w=new N({props:{class:"header-anchor",href:"#options","aria-hidden":"true",$$slots:{default:[ys]},$$scope:{ctx:r}}}),H=new ss({props:{lang:"typescript",ext:"ts",linesCount:4,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CoinbaseWalletOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">darkMode</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default = false</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),k=new N({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[As]},$$scope:{ctx:r}}}),M=new ss({props:{lang:"typescript",ext:"ts",linesCount:20,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> coinbaseWalletModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/coinbase</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// initialize the module with options</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> coinbaseWalletSdk </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">coinbaseWalletModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">darkMode</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// can also initialize with no options...</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// const coinbaseWalletSdk = coinbaseWalletSdk()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    coinbaseWalletSdk</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),v=new N({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[Fs]},$$scope:{ctx:r}}}),E=new N({props:{href:"/docs/modules/core#build-environments",$$slots:{default:[bs]},$$scope:{ctx:r}}}),{c(){n=q("h1"),e=$("Coinbase"),a=x(),c=q("p"),o=$("Wallet module for connecting Coinbase Wallet SDK to web3-onboard. Check out the "),u(i.$$.fragment),K=$(" for more information."),O=x(),A=q("h2"),u(h.$$.fragment),ns=$(" Install"),Q=x(),u(g.$$.fragment),R=x(),F=q("h2"),u(w.$$.fragment),es=$(" Options"),V=x(),u(H.$$.fragment),b=q("h2"),u(k.$$.fragment),as=$(" Usage"),X=x(),u(M.$$.fragment),_=q("h2"),u(v.$$.fragment),ls=$(" Build Environments"),Y=x(),P=q("p"),ts=$("For build env configurations and setups please see the Build Env section "),u(E.$$.fragment),this.h()},l(s){n=z(s,"H1",{});var l=I(n);e=f(l,"Coinbase"),l.forEach(t),a=S(s),c=z(s,"P",{});var T=I(c);o=f(T,"Wallet module for connecting Coinbase Wallet SDK to web3-onboard. Check out the "),m(i.$$.fragment,T),K=f(T," for more information."),T.forEach(t),O=S(s),A=z(s,"H2",{id:!0,tabindex:!0});var L=I(A);m(h.$$.fragment,L),ns=f(L," Install"),L.forEach(t),Q=S(s),m(g.$$.fragment,s),R=S(s),F=z(s,"H2",{id:!0,tabindex:!0});var U=I(F);m(w.$$.fragment,U),es=f(U," Options"),U.forEach(t),V=S(s),m(H.$$.fragment,s),b=z(s,"H2",{id:!0,tabindex:!0});var j=I(b);m(k.$$.fragment,j),as=f(j," Usage"),j.forEach(t),X=S(s),m(M.$$.fragment,s),_=z(s,"H2",{id:!0,tabindex:!0});var G=I(_);m(v.$$.fragment,G),ls=f(G," Build Environments"),G.forEach(t),Y=S(s),P=z(s,"P",{});var J=I(P);ts=f(J,"For build env configurations and setups please see the Build Env section "),m(E.$$.fragment,J),J.forEach(t),this.h()},h(){W(A,"id","install"),W(A,"tabindex","-1"),W(F,"id","options"),W(F,"tabindex","-1"),W(b,"id","usage"),W(b,"tabindex","-1"),W(_,"id","build-environments"),W(_,"tabindex","-1")},m(s,l){p(s,n,l),B(n,e),p(s,a,l),p(s,c,l),B(c,o),C(i,c,null),B(c,K),p(s,O,l),p(s,A,l),C(h,A,null),B(A,ns),p(s,Q,l),C(g,s,l),p(s,R,l),p(s,F,l),C(w,F,null),B(F,es),p(s,V,l),C(H,s,l),p(s,b,l),C(k,b,null),B(b,as),p(s,X,l),C(M,s,l),p(s,_,l),C(v,_,null),B(_,ls),p(s,Y,l),p(s,P,l),B(P,ts),C(E,P,null),Z=!0},p(s,[l]){const T={};l&1&&(T.$$scope={dirty:l,ctx:s}),i.$set(T);const L={};l&1&&(L.$$scope={dirty:l,ctx:s}),h.$set(L);const U={};l&1&&(U.$$scope={dirty:l,ctx:s}),g.$set(U);const j={};l&1&&(j.$$scope={dirty:l,ctx:s}),w.$set(j);const G={};l&1&&(G.$$scope={dirty:l,ctx:s}),k.$set(G);const J={};l&1&&(J.$$scope={dirty:l,ctx:s}),v.$set(J);const os={};l&1&&(os.$$scope={dirty:l,ctx:s}),E.$set(os)},i(s){Z||(D(i.$$.fragment,s),D(h.$$.fragment,s),D(g.$$.fragment,s),D(w.$$.fragment,s),D(H.$$.fragment,s),D(k.$$.fragment,s),D(M.$$.fragment,s),D(v.$$.fragment,s),D(E.$$.fragment,s),Z=!0)},o(s){d(i.$$.fragment,s),d(h.$$.fragment,s),d(g.$$.fragment,s),d(w.$$.fragment,s),d(H.$$.fragment,s),d(k.$$.fragment,s),d(M.$$.fragment,s),d(v.$$.fragment,s),d(E.$$.fragment,s),Z=!1},d(s){s&&t(n),s&&t(a),s&&t(c),y(i),s&&t(O),s&&t(A),y(h),s&&t(Q),y(g,s),s&&t(R),s&&t(F),y(w),s&&t(V),y(H,s),s&&t(b),y(k),s&&t(X),y(M,s),s&&t(_),y(v),s&&t(Y),s&&t(P),y(E)}}}class xs extends cs{constructor(n){super(),is(this,n,null,_s,$s,{})}}export{xs as default};
