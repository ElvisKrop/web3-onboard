import{S as Go,i as Uo,s as Bo,e as c,t as p,k as m,w as h,c as f,a as $,h as i,d as n,m as d,x as _,aa as Ho,b as I,g as o,M as l,y as b,q as y,o as w,B as g,E as Us}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as Qa}from"../../../chunks/CodeFence-7c02fe57.js";import{C as Et}from"../../../chunks/CodeInline-7947d9bd.js";import{L as D}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as qo,a as jo}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";var Ko="/_app/immutable/assets/connect-modal-b7439c5e.svg";function xo(u){let s;return{c(){s=p("#")},l(t){s=i(t,"#")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Vo(u){let s;return{c(){s=p("#")},l(t){s=i(t,"#")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function zo(u){let s;return{c(){s=p("initialization options")},l(t){s=i(t,"initialization options")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Yo(u){let s;return{c(){s=p("#")},l(t){s=i(t,"#")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Qo(u){let s;return{c(){s=p("https://explorer.blocknative.com/account")},l(t){s=i(t,"https://explorer.blocknative.com/account")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Jo(u){let s;return{c(){s=p("https://explorer.blocknative.com/account")},l(t){s=i(t,"https://explorer.blocknative.com/account")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Xo(u){let s;return{c(){s=p("#")},l(t){s=i(t,"#")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Zo(u){let s,t;return s=new Qa({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/core @web3-onboard/injected-wallets ethers
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/core @web3-onboard/injected-wallets ethers</span></span>
<span class="line"></span></code></pre>`}}),{c(){h(s.$$.fragment)},l(r){_(s.$$.fragment,r)},m(r,v){b(s,r,v),t=!0},p:Us,i(r){t||(y(s.$$.fragment,r),t=!0)},o(r){w(s.$$.fragment,r),t=!1},d(r){g(s,r)}}}function er(u){let s,t;return s=new Qa({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm i @web3-onboard/core @web3-onboard/injected-wallets ethers
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm i @web3-onboard/core @web3-onboard/injected-wallets ethers</span></span>
<span class="line"></span></code></pre>`}}),{c(){h(s.$$.fragment)},l(r){_(s.$$.fragment,r)},m(r,v){b(s,r,v),t=!0},p:Us,i(r){t||(y(s.$$.fragment,r),t=!0)},o(r){w(s.$$.fragment,r),t=!1},d(r){g(s,r)}}}function tr(u){let s,t,r,v;return s=new jo({props:{value:"yarn",$$slots:{default:[Zo]},$$scope:{ctx:u}}}),r=new jo({props:{value:"npm",$$slots:{default:[er]},$$scope:{ctx:u}}}),{c(){h(s.$$.fragment),t=m(),h(r.$$.fragment)},l(A){_(s.$$.fragment,A),t=d(A),_(r.$$.fragment,A)},m(A,T){b(s,A,T),o(A,t,T),b(r,A,T),v=!0},p(A,T){const R={};T&1&&(R.$$scope={dirty:T,ctx:A}),s.$set(R);const It={};T&1&&(It.$$scope={dirty:T,ctx:A}),r.$set(It)},i(A){v||(y(s.$$.fragment,A),y(r.$$.fragment,A),v=!0)},o(A){w(s.$$.fragment,A),w(r.$$.fragment,A),v=!1},d(A){g(s,A),A&&n(t),g(r,A)}}}function nr(u){let s;return{c(){s=p("@web3-onboard/core Official NPM Documentation")},l(t){s=i(t,"@web3-onboard/core Official NPM Documentation")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function sr(u){let s;return{c(){s=p("#")},l(t){s=i(t,"#")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function lr(u){let s;return{c(){s=p("Core Repo")},l(t){s=i(t,"Core Repo")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function ar(u){let s;return{c(){s=p("Injected Wallets")},l(t){s=i(t,"Injected Wallets")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function or(u){let s,t;return{c(){s=c("strong"),t=p("Core Repo")},l(r){s=f(r,"STRONG",{});var v=$(s);t=i(v,"Core Repo"),v.forEach(n)},m(r,v){o(r,s,v),l(s,t)},p:Us,d(r){r&&n(s)}}}function rr(u){let s,t;return{c(){s=c("strong"),t=p("Injected Wallets")},l(r){s=f(r,"STRONG",{});var v=$(s);t=i(v,"Injected Wallets"),v.forEach(n)},m(r,v){o(r,s,v),l(s,t)},p:Us,d(r){r&&n(s)}}}function pr(u){let s;return{c(){s=p("Coinbase")},l(t){s=i(t,"Coinbase")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function ir(u){let s;return{c(){s=p("WalletConnect")},l(t){s=i(t,"WalletConnect")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function cr(u){let s;return{c(){s=p("Gnosis")},l(t){s=i(t,"Gnosis")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function fr(u){let s;return{c(){s=p("Magic")},l(t){s=i(t,"Magic")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function $r(u){let s;return{c(){s=p("Fortmatic")},l(t){s=i(t,"Fortmatic")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function ur(u){let s;return{c(){s=p("MEW")},l(t){s=i(t,"MEW")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function mr(u){let s;return{c(){s=p("Portis")},l(t){s=i(t,"Portis")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function dr(u){let s;return{c(){s=p("Web3Auth")},l(t){s=i(t,"Web3Auth")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function hr(u){let s;return{c(){s=p("Ledger")},l(t){s=i(t,"Ledger")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function _r(u){let s;return{c(){s=p("Trezor")},l(t){s=i(t,"Trezor")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function br(u){let s;return{c(){s=p("Keystone")},l(t){s=i(t,"Keystone")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function yr(u){let s;return{c(){s=p("KeepKey")},l(t){s=i(t,"KeepKey")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function wr(u){let s;return{c(){s=p("D'cent")},l(t){s=i(t,"D'cent")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function gr(u){let s;return{c(){s=p("React")},l(t){s=i(t,"React")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Dr(u){let s;return{c(){s=p("Vue")},l(t){s=i(t,"Vue")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function kr(u){let s;return{c(){s=p("#")},l(t){s=i(t,"#")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Fr(u){let s;return{c(){s=p("View demo app in the browser")},l(t){s=i(t,"View demo app in the browser")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function vr(u){let s;return{c(){s=p("#")},l(t){s=i(t,"#")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Ar(u){let s;return{c(){s=p("https://reactdemo.blocknative.com/")},l(t){s=i(t,"https://reactdemo.blocknative.com/")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Cr(u){let s;return{c(){s=p("https://github.com/blocknative/react-demo")},l(t){s=i(t,"https://github.com/blocknative/react-demo")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Er(u){let s;return{c(){s=p("#")},l(t){s=i(t,"#")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Ir(u){let s;return{c(){s=p("eth-scaffold")},l(t){s=i(t,"eth-scaffold")},m(t,r){o(t,s,r)},d(t){t&&n(s)}}}function Pr(u){let s,t,r,v,A,T,R,It,Zn,xe,Bs,es,j,Q,Hs,ts,E,Pt,Ve,Lt,qs,Ks,xs,Ot,ze,Mt,Vs,zs,Ys,Tt,Ye,Wt,Qs,Js,Xs,Rt,Qe,Nt,Zs,el,tl,St,Je,jt,nl,sl,ll,Gt,Xe,Ut,al,ol,rl,Bt,Ze,Ht,pl,il,ns,G,J,cl,ss,X,fl,Z,$l,ls,k,qt,ul,ml,Kt,dl,hl,xt,_l,bl,Vt,yl,wl,zt,gl,Dl,Yt,kl,Fl,Qt,vl,Al,Jt,Cl,El,Xt,Il,Pl,Zt,Ll,Ol,en,Ml,Tl,tn,Wl,as,U,ee,Rl,os,et,Nl,rs,te,Sl,nn,jl,Gl,ps,B,sn,Ul,Bl,ne,Hl,is,H,ln,ql,Kl,se,xl,cs,q,le,Vl,fs,tt,zl,$s,ae,us,We,Yl,oe,ms,nt,Ql,ds,Re,st,an,Jl,hs,_s,bs,K,re,Xl,ys,lt,Zl,ws,N,ea,pe,ta,ie,na,gs,at,ce,Ds,ot,fe,ks,rt,on,sa,Fs,C,rn,$e,la,pn,ue,aa,cn,me,oa,fn,de,ra,$n,he,pa,un,_e,ia,mn,be,ca,dn,ye,vs,pt,hn,fa,As,M,_n,we,$a,bn,ge,ua,yn,De,ma,wn,ke,da,gn,Fe,Cs,it,Dn,ha,Es,ve,kn,Ae,_a,Fn,Ce,Is,x,Ee,ba,Ps,ct,ya,Ls,L,ft,wa,Ne,ga,$t,Da,Se,ka,ut,Fa,je,va,V,Aa,Ge,Ca,Ue,Ea,Ia,mt,Pa,Be,La,vn,Ie,Os,z,Pe,Oa,Ms,He,Ma,Le,Ts,qe,Ta,Oe,Ws,Y,Me,Wa,Rs,dt,Ra,Ns,ht,An,Te,Ss;return Q=new D({props:{class:"header-anchor",href:"#features","aria-hidden":"true",$$slots:{default:[xo]},$$scope:{ctx:u}}}),J=new D({props:{class:"header-anchor",href:"#supported-networks","aria-hidden":"true",$$slots:{default:[Vo]},$$scope:{ctx:u}}}),Z=new D({props:{href:"https://onboard.blocknative.com/docs/modules/core#options",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[zo]},$$scope:{ctx:u}}}),ee=new D({props:{class:"header-anchor",href:"#optional-use-an-api-key-to-fetch-real-time-transaction-data-balances-gas","aria-hidden":"true",$$slots:{default:[Yo]},$$scope:{ctx:u}}}),ne=new D({props:{href:"https://explorer.blocknative.com/account",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Qo]},$$scope:{ctx:u}}}),se=new D({props:{href:"https://explorer.blocknative.com/account",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Jo]},$$scope:{ctx:u}}}),le=new D({props:{class:"header-anchor",href:"#quickstart","aria-hidden":"true",$$slots:{default:[Xo]},$$scope:{ctx:u}}}),ae=new qo({props:{values:["npm","yarn"],$$slots:{default:[tr]},$$scope:{ctx:u}}}),oe=new D({props:{href:"https://www.npmjs.com/package/@web3-onboard/core",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[nr]},$$scope:{ctx:u}}}),Re=new Qa({props:{lang:"typescript",ext:"ts",linesCount:43,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ethers</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> MAINNET_RPC_URL</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(wallets)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> (wallets[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// create an ethers provider with the last connected wallet provider</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">providers</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Web3Provider</span><span style="color: #F07178">(</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">wallets</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">any</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">signer</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getSigner</span><span style="color: #F07178">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// send a transaction with the ethers provider</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">txn</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">signer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sendTransaction</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    to</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    value</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">100000000000000</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">receipt</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">txn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">wait</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">receipt</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),re=new D({props:{class:"header-anchor",href:"#wallet-modules","aria-hidden":"true",$$slots:{default:[sr]},$$scope:{ctx:u}}}),pe=new D({props:{href:"https://onboard.blocknative.com/docs/modules/core#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[lr]},$$scope:{ctx:u}}}),ie=new D({props:{href:"https://onboard.blocknative.com/docs/packages/injected#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ar]},$$scope:{ctx:u}}}),ce=new D({props:{href:"https://onboard.blocknative.com/docs/modules/core#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[or]},$$scope:{ctx:u}}}),fe=new D({props:{href:"https://onboard.blocknative.com/docs/packages/injected#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[rr]},$$scope:{ctx:u}}}),$e=new D({props:{href:"https://onboard.blocknative.com/docs/packages/coinbase#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[pr]},$$scope:{ctx:u}}}),ue=new D({props:{href:"https://onboard.blocknative.com/docs/packages/walletconnect#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ir]},$$scope:{ctx:u}}}),me=new D({props:{href:"https://onboard.blocknative.com/docs/packages/gnosis#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[cr]},$$scope:{ctx:u}}}),de=new D({props:{href:"https://onboard.blocknative.com/docs/packages/magic#login-options",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[fr]},$$scope:{ctx:u}}}),he=new D({props:{href:"https://onboard.blocknative.com/docs/packages/formatic#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[$r]},$$scope:{ctx:u}}}),_e=new D({props:{href:"https://onboard.blocknative.com/docs/packages/mew#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ur]},$$scope:{ctx:u}}}),be=new D({props:{href:"https://onboard.blocknative.com/docs/packages/portis#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[mr]},$$scope:{ctx:u}}}),ye=new D({props:{href:"https://onboard.blocknative.com/docs/packages/web3auth#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[dr]},$$scope:{ctx:u}}}),we=new D({props:{href:"https://onboard.blocknative.com/docs/packages/ledger#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[hr]},$$scope:{ctx:u}}}),ge=new D({props:{href:"https://onboard.blocknative.com/docs/packages/trezor#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[_r]},$$scope:{ctx:u}}}),De=new D({props:{href:"https://onboard.blocknative.com/docs/packages/keystone#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[br]},$$scope:{ctx:u}}}),ke=new D({props:{href:"https://onboard.blocknative.com/docs/packages/keepkey#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[yr]},$$scope:{ctx:u}}}),Fe=new D({props:{href:"https://onboard.blocknative.com/docs/packages/dcent#wallet-module-for-connecting-d-cent-hardware-wallets-to-web3-onboard",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[wr]},$$scope:{ctx:u}}}),Ae=new D({props:{href:"https://onboard.blocknative.com/docs/modules/react#quickstart-with-injected-wallets-and-ethers-provider",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[gr]},$$scope:{ctx:u}}}),Ce=new D({props:{href:"https://onboard.blocknative.com/docs/modules/vue#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Dr]},$$scope:{ctx:u}}}),Ee=new D({props:{class:"header-anchor",href:"#test-out-the-demo-app","aria-hidden":"true",$$slots:{default:[kr]},$$scope:{ctx:u}}}),Ne=new Et({props:{code:"git clone git@github.com:blocknative/web3-onboard.git"}}),Se=new Et({props:{code:"cd web3-onboard"}}),je=new Et({props:{code:"git checkout v2-web3-onboard"}}),Ge=new Et({props:{code:"yarn"}}),Ue=new Et({props:{code:"yarn install-m1-mac"}}),Be=new Et({props:{code:"yarn dev"}}),Ie=new D({props:{href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Fr]},$$scope:{ctx:u}}}),Pe=new D({props:{class:"header-anchor",href:"#react-demo","aria-hidden":"true",$$slots:{default:[vr]},$$scope:{ctx:u}}}),Le=new D({props:{href:"https://reactdemo.blocknative.com/",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ar]},$$scope:{ctx:u}}}),Oe=new D({props:{href:"https://github.com/blocknative/react-demo",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Cr]},$$scope:{ctx:u}}}),Me=new D({props:{class:"header-anchor",href:"#more-examples","aria-hidden":"true",$$slots:{default:[Er]},$$scope:{ctx:u}}}),Te=new D({props:{href:"https://github.com/scaffold-eth/scaffold-eth-examples/tree/bnc-onboard",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ir]},$$scope:{ctx:u}}}),{c(){s=c("h1"),t=p("Web3-Onboard"),r=m(),v=c("p"),A=p("The best way to connect a wallet \u{1F680}"),T=m(),R=c("img"),Zn=m(),xe=c("p"),Bs=p("Web3-Onboard is the quickest and easiest way to add multi-wallet and multi-chain support to your project. With built-in modules for more than 35 unique hardware and software wallets, Web3-Onboard saves you time and headaches."),es=m(),j=c("h2"),h(Q.$$.fragment),Hs=p(" Features"),ts=m(),E=c("ul"),Pt=c("li"),Ve=c("p"),Lt=c("strong"),qs=p("Minimal Dependencies:"),Ks=p(" All wallet dependencies are included in separate packages, so you only include the ones you want to use in your app."),xs=m(),Ot=c("li"),ze=c("p"),Mt=c("strong"),Vs=p("Multiple Wallets and Accounts Connection, Multichain Support:"),zs=p(" Allow your users to connect multiple wallets and multiple accounts within each wallet at the same time to your app. Let users switch between chains/networks with ease. ALL EVM networks supported."),Ys=m(),Tt=c("li"),Ye=c("p"),Wt=c("strong"),Qs=p("Unified Provider Interface:"),Js=p(" All wallet modules expose a provider that is patched to be compliant with the EIP-1193, EIP-1102, EIP-3085 and EIP-3326 specifications. Whether your user is using Ledger or Metamask the provider will operate identically."),Xs=m(),Rt=c("li"),Qe=c("p"),Nt=c("strong"),Zs=p("Dynamic Imports:"),el=p(` Supporting multiple wallets in your app requires a lot of dependencies. Onboard dynamically imports a wallet
and it's dependencies only when the user selects it, so that minimal bandwidth is used.`),tl=m(),St=c("li"),Je=c("p"),jt=c("strong"),nl=p("Framework Agnostic:"),sl=p(" Avoid framework lock in -- Web3-Onboard works with any framework and includes helper packages for vue & react."),ll=m(),Gt=c("li"),Xe=c("p"),Ut=c("strong"),al=p("Account Center:"),ol=p(" An interface to manage wallet connections and networks, with a minimal version for mobile"),rl=m(),Bt=c("li"),Ze=c("p"),Ht=c("strong"),pl=p("Notify:"),il=p(" Real-time transaction notifications for all transaction states for the connected wallet address(es). In-notification speedups & cancels for hardware wallet connections."),ns=m(),G=c("h3"),h(J.$$.fragment),cl=p(" Supported Networks"),ss=m(),X=c("p"),fl=p("web3-onboard supports all EVM networks. Supporting a new network is simply a matter of adding its details in the Chains section upon initialization. For more information see "),h(Z.$$.fragment),$l=p("."),ls=m(),k=c("ul"),qt=c("li"),ul=p("Arbitrum"),ml=m(),Kt=c("li"),dl=p("Avalanche"),hl=m(),xt=c("li"),_l=p("BNB Chain"),bl=m(),Vt=c("li"),yl=p("Celo"),wl=m(),zt=c("li"),gl=p("Ethereum"),Dl=m(),Yt=c("li"),kl=p("Fantom"),Fl=m(),Qt=c("li"),vl=p("Gnosis Chain"),Al=m(),Jt=c("li"),Cl=p("Harmony One"),El=m(),Xt=c("li"),Il=p("Moonriver"),Pl=m(),Zt=c("li"),Ll=p("Optimism"),Ol=m(),en=c("li"),Ml=p("Polygon"),Tl=m(),tn=c("li"),Wl=p("Any other EVM network"),as=m(),U=c("h3"),h(ee.$$.fragment),Rl=p(" [Optional] Use an API key to fetch real time transaction data, balances & gas"),os=m(),et=c("p"),Nl=p("Using a Blocknative API key with web3-onboard on the free plan will allow you to gain the benefits of Blocknative balance & transaction services. Blocknative has a free forever plan you can always use."),rs=m(),te=c("p"),Sl=p("This step is not required to use web3-onboard. You can skip to the "),nn=c("strong"),jl=p("Quickstart"),Gl=p(" step below if you want to use web3-onboard without API services or if you already have a Blocknative account & API key."),ps=m(),B=c("p"),sn=c("strong"),Ul=p("Setup your Account"),Bl=p(`
Go to the Account Dashboard at `),h(ne.$$.fragment),Hl=p(" and setup an account with an email address. You will receive an email to confirm your account."),is=m(),H=c("p"),ln=c("strong"),ql=p("Create your API Key"),Kl=p(`
On the Account Dashboard at `),h(se.$$.fragment),xl=p(", create an API key with your choice of name or use/rename the Default Key. Consider using different API keys for development, staging, and production releases."),cs=m(),q=c("h2"),h(le.$$.fragment),Vl=p(" Quickstart"),fs=m(),tt=c("p"),zl=p("Install the core Onboard library, the injected wallets module and optionally ethers.js to support browser extension and mobile wallets:"),$s=m(),h(ae.$$.fragment),us=m(),We=c("p"),Yl=p("You can find a link to web3-onboard's official NPM Documentation here: "),h(oe.$$.fragment),ms=m(),nt=c("p"),Ql=p("Then initialize in your app:"),ds=m(),h(Re.$$.fragment),st=c("p"),an=c("strong"),Jl=p("and you are live!"),hs=m(),_s=c("hr"),bs=m(),K=c("h2"),h(re.$$.fragment),Xl=p(" Wallet Modules"),ys=m(),lt=c("p"),Zl=p("Add other wallet modules such as Wallet Connect or Ledger to increase the support and functionality of your web3-onboard implementation. All modules are listed below and can be accessed through the subpages of web3-onboard docs on the left."),ws=m(),N=c("p"),ea=p("We recommend you add the "),h(pe.$$.fragment),ta=p(" and consider adding the "),h(ie.$$.fragment),na=p(" module to get connected with wallets like Metamask, Tally, Coinbase Wallet & more right away."),gs=m(),at=c("p"),h(ce.$$.fragment),Ds=m(),ot=c("p"),h(fe.$$.fragment),ks=m(),rt=c("p"),on=c("strong"),sa=p("SDK Wallets"),Fs=m(),C=c("ul"),rn=c("li"),h($e.$$.fragment),la=m(),pn=c("li"),h(ue.$$.fragment),aa=m(),cn=c("li"),h(me.$$.fragment),oa=m(),fn=c("li"),h(de.$$.fragment),ra=m(),$n=c("li"),h(he.$$.fragment),pa=m(),un=c("li"),h(_e.$$.fragment),ia=m(),mn=c("li"),h(be.$$.fragment),ca=m(),dn=c("li"),h(ye.$$.fragment),vs=m(),pt=c("p"),hn=c("strong"),fa=p("Hardware Wallets"),As=m(),M=c("ul"),_n=c("li"),h(we.$$.fragment),$a=m(),bn=c("li"),h(ge.$$.fragment),ua=m(),yn=c("li"),h(De.$$.fragment),ma=m(),wn=c("li"),h(ke.$$.fragment),da=m(),gn=c("li"),h(Fe.$$.fragment),Cs=m(),it=c("p"),Dn=c("strong"),ha=p("Frameworks"),Es=m(),ve=c("ul"),kn=c("li"),h(Ae.$$.fragment),_a=m(),Fn=c("li"),h(Ce.$$.fragment),Is=m(),x=c("h2"),h(Ee.$$.fragment),ba=p(" Test out the demo app"),Ps=m(),ct=c("p"),ya=p("Test out the current functionality of web3-onboard in a small browser demo:"),Ls=m(),L=c("ul"),ft=c("li"),wa=p("Clone the repo: "),h(Ne.$$.fragment),ga=m(),$t=c("li"),Da=p("Change it to the onboard directory: "),h(Se.$$.fragment),ka=m(),ut=c("li"),Fa=p("Checkout the main web3-onboard branch: "),h(je.$$.fragment),va=m(),V=c("li"),Aa=p("Install the dependencies: "),h(Ge.$$.fragment),Ca=p(" (if running a M1 mac - "),h(Ue.$$.fragment),Ea=p(")"),Ia=m(),mt=c("li"),Pa=p("Run all packages in dev mode: "),h(Be.$$.fragment),La=m(),vn=c("li"),h(Ie.$$.fragment),Os=m(),z=c("h2"),h(Pe.$$.fragment),Oa=p(" React Demo"),Ms=m(),He=c("p"),Ma=p("Checkout our live demo using React at "),h(Le.$$.fragment),Ts=m(),qe=c("p"),Ta=p("The demo is open source so you can see a sample implementation of web3-onboard: "),h(Oe.$$.fragment),Ws=m(),Y=c("h2"),h(Me.$$.fragment),Wa=p(" More Examples"),Rs=m(),dt=c("p"),Ra=p("You can find starter examples from the web3 community here using web3-onboard:"),Ns=m(),ht=c("ul"),An=c("li"),h(Te.$$.fragment),this.h()},l(e){s=f(e,"H1",{});var a=$(s);t=i(a,"Web3-Onboard"),a.forEach(n),r=d(e),v=f(e,"P",{});var Cn=$(v);A=i(Cn,"The best way to connect a wallet \u{1F680}"),Cn.forEach(n),T=d(e),R=f(e,"IMG",{src:!0,alt:!0}),Zn=d(e),xe=f(e,"P",{});var En=$(xe);Bs=i(En,"Web3-Onboard is the quickest and easiest way to add multi-wallet and multi-chain support to your project. With built-in modules for more than 35 unique hardware and software wallets, Web3-Onboard saves you time and headaches."),En.forEach(n),es=d(e),j=f(e,"H2",{id:!0,tabindex:!0});var _t=$(j);_(Q.$$.fragment,_t),Hs=i(_t," Features"),_t.forEach(n),ts=d(e),E=f(e,"UL",{});var P=$(E);Pt=f(P,"LI",{});var In=$(Pt);Ve=f(In,"P",{});var bt=$(Ve);Lt=f(bt,"STRONG",{});var Pn=$(Lt);qs=i(Pn,"Minimal Dependencies:"),Pn.forEach(n),Ks=i(bt," All wallet dependencies are included in separate packages, so you only include the ones you want to use in your app."),bt.forEach(n),In.forEach(n),xs=d(P),Ot=f(P,"LI",{});var Ln=$(Ot);ze=f(Ln,"P",{});var yt=$(ze);Mt=f(yt,"STRONG",{});var On=$(Mt);Vs=i(On,"Multiple Wallets and Accounts Connection, Multichain Support:"),On.forEach(n),zs=i(yt," Allow your users to connect multiple wallets and multiple accounts within each wallet at the same time to your app. Let users switch between chains/networks with ease. ALL EVM networks supported."),yt.forEach(n),Ln.forEach(n),Ys=d(P),Tt=f(P,"LI",{});var Mn=$(Tt);Ye=f(Mn,"P",{});var wt=$(Ye);Wt=f(wt,"STRONG",{});var Tn=$(Wt);Qs=i(Tn,"Unified Provider Interface:"),Tn.forEach(n),Js=i(wt," All wallet modules expose a provider that is patched to be compliant with the EIP-1193, EIP-1102, EIP-3085 and EIP-3326 specifications. Whether your user is using Ledger or Metamask the provider will operate identically."),wt.forEach(n),Mn.forEach(n),Xs=d(P),Rt=f(P,"LI",{});var Wn=$(Rt);Qe=f(Wn,"P",{});var gt=$(Qe);Nt=f(gt,"STRONG",{});var Rn=$(Nt);Zs=i(Rn,"Dynamic Imports:"),Rn.forEach(n),el=i(gt,` Supporting multiple wallets in your app requires a lot of dependencies. Onboard dynamically imports a wallet
and it's dependencies only when the user selects it, so that minimal bandwidth is used.`),gt.forEach(n),Wn.forEach(n),tl=d(P),St=f(P,"LI",{});var Nn=$(St);Je=f(Nn,"P",{});var Dt=$(Je);jt=f(Dt,"STRONG",{});var Sn=$(jt);nl=i(Sn,"Framework Agnostic:"),Sn.forEach(n),sl=i(Dt," Avoid framework lock in -- Web3-Onboard works with any framework and includes helper packages for vue & react."),Dt.forEach(n),Nn.forEach(n),ll=d(P),Gt=f(P,"LI",{});var jn=$(Gt);Xe=f(jn,"P",{});var kt=$(Xe);Ut=f(kt,"STRONG",{});var Gn=$(Ut);al=i(Gn,"Account Center:"),Gn.forEach(n),ol=i(kt," An interface to manage wallet connections and networks, with a minimal version for mobile"),kt.forEach(n),jn.forEach(n),rl=d(P),Bt=f(P,"LI",{});var Un=$(Bt);Ze=f(Un,"P",{});var Ft=$(Ze);Ht=f(Ft,"STRONG",{});var Bn=$(Ht);pl=i(Bn,"Notify:"),Bn.forEach(n),il=i(Ft," Real-time transaction notifications for all transaction states for the connected wallet address(es). In-notification speedups & cancels for hardware wallet connections."),Ft.forEach(n),Un.forEach(n),P.forEach(n),ns=d(e),G=f(e,"H3",{id:!0,tabindex:!0});var vt=$(G);_(J.$$.fragment,vt),cl=i(vt," Supported Networks"),vt.forEach(n),ss=d(e),X=f(e,"P",{});var Ke=$(X);fl=i(Ke,"web3-onboard supports all EVM networks. Supporting a new network is simply a matter of adding its details in the Chains section upon initialization. For more information see "),_(Z.$$.fragment,Ke),$l=i(Ke,"."),Ke.forEach(n),ls=d(e),k=f(e,"UL",{});var F=$(k);qt=f(F,"LI",{});var Hn=$(qt);ul=i(Hn,"Arbitrum"),Hn.forEach(n),ml=d(F),Kt=f(F,"LI",{});var qn=$(Kt);dl=i(qn,"Avalanche"),qn.forEach(n),hl=d(F),xt=f(F,"LI",{});var Kn=$(xt);_l=i(Kn,"BNB Chain"),Kn.forEach(n),bl=d(F),Vt=f(F,"LI",{});var xn=$(Vt);yl=i(xn,"Celo"),xn.forEach(n),wl=d(F),zt=f(F,"LI",{});var Vn=$(zt);gl=i(Vn,"Ethereum"),Vn.forEach(n),Dl=d(F),Yt=f(F,"LI",{});var zn=$(Yt);kl=i(zn,"Fantom"),zn.forEach(n),Fl=d(F),Qt=f(F,"LI",{});var Yn=$(Qt);vl=i(Yn,"Gnosis Chain"),Yn.forEach(n),Al=d(F),Jt=f(F,"LI",{});var Qn=$(Jt);Cl=i(Qn,"Harmony One"),Qn.forEach(n),El=d(F),Xt=f(F,"LI",{});var Ja=$(Xt);Il=i(Ja,"Moonriver"),Ja.forEach(n),Pl=d(F),Zt=f(F,"LI",{});var Xa=$(Zt);Ll=i(Xa,"Optimism"),Xa.forEach(n),Ol=d(F),en=f(F,"LI",{});var Za=$(en);Ml=i(Za,"Polygon"),Za.forEach(n),Tl=d(F),tn=f(F,"LI",{});var eo=$(tn);Wl=i(eo,"Any other EVM network"),eo.forEach(n),F.forEach(n),as=d(e),U=f(e,"H3",{id:!0,tabindex:!0});var Na=$(U);_(ee.$$.fragment,Na),Rl=i(Na," [Optional] Use an API key to fetch real time transaction data, balances & gas"),Na.forEach(n),os=d(e),et=f(e,"P",{});var to=$(et);Nl=i(to,"Using a Blocknative API key with web3-onboard on the free plan will allow you to gain the benefits of Blocknative balance & transaction services. Blocknative has a free forever plan you can always use."),to.forEach(n),rs=d(e),te=f(e,"P",{});var js=$(te);Sl=i(js,"This step is not required to use web3-onboard. You can skip to the "),nn=f(js,"STRONG",{});var no=$(nn);jl=i(no,"Quickstart"),no.forEach(n),Gl=i(js," step below if you want to use web3-onboard without API services or if you already have a Blocknative account & API key."),js.forEach(n),ps=d(e),B=f(e,"P",{});var Jn=$(B);sn=f(Jn,"STRONG",{});var so=$(sn);Ul=i(so,"Setup your Account"),so.forEach(n),Bl=i(Jn,`
Go to the Account Dashboard at `),_(ne.$$.fragment,Jn),Hl=i(Jn," and setup an account with an email address. You will receive an email to confirm your account."),Jn.forEach(n),is=d(e),H=f(e,"P",{});var Xn=$(H);ln=f(Xn,"STRONG",{});var lo=$(ln);ql=i(lo,"Create your API Key"),lo.forEach(n),Kl=i(Xn,`
On the Account Dashboard at `),_(se.$$.fragment,Xn),xl=i(Xn,", create an API key with your choice of name or use/rename the Default Key. Consider using different API keys for development, staging, and production releases."),Xn.forEach(n),cs=d(e),q=f(e,"H2",{id:!0,tabindex:!0});var Sa=$(q);_(le.$$.fragment,Sa),Vl=i(Sa," Quickstart"),Sa.forEach(n),fs=d(e),tt=f(e,"P",{});var ao=$(tt);zl=i(ao,"Install the core Onboard library, the injected wallets module and optionally ethers.js to support browser extension and mobile wallets:"),ao.forEach(n),$s=d(e),_(ae.$$.fragment,e),us=d(e),We=f(e,"P",{});var ja=$(We);Yl=i(ja,"You can find a link to web3-onboard's official NPM Documentation here: "),_(oe.$$.fragment,ja),ja.forEach(n),ms=d(e),nt=f(e,"P",{});var oo=$(nt);Ql=i(oo,"Then initialize in your app:"),oo.forEach(n),ds=d(e),_(Re.$$.fragment,e),st=f(e,"P",{});var ro=$(st);an=f(ro,"STRONG",{});var po=$(an);Jl=i(po,"and you are live!"),po.forEach(n),ro.forEach(n),hs=d(e),_s=f(e,"HR",{}),bs=d(e),K=f(e,"H2",{id:!0,tabindex:!0});var Ga=$(K);_(re.$$.fragment,Ga),Xl=i(Ga," Wallet Modules"),Ga.forEach(n),ys=d(e),lt=f(e,"P",{});var io=$(lt);Zl=i(io,"Add other wallet modules such as Wallet Connect or Ledger to increase the support and functionality of your web3-onboard implementation. All modules are listed below and can be accessed through the subpages of web3-onboard docs on the left."),io.forEach(n),ws=d(e),N=f(e,"P",{});var At=$(N);ea=i(At,"We recommend you add the "),_(pe.$$.fragment,At),ta=i(At," and consider adding the "),_(ie.$$.fragment,At),na=i(At," module to get connected with wallets like Metamask, Tally, Coinbase Wallet & more right away."),At.forEach(n),gs=d(e),at=f(e,"P",{});var co=$(at);_(ce.$$.fragment,co),co.forEach(n),Ds=d(e),ot=f(e,"P",{});var fo=$(ot);_(fe.$$.fragment,fo),fo.forEach(n),ks=d(e),rt=f(e,"P",{});var $o=$(rt);on=f($o,"STRONG",{});var uo=$(on);sa=i(uo,"SDK Wallets"),uo.forEach(n),$o.forEach(n),Fs=d(e),C=f(e,"UL",{});var O=$(C);rn=f(O,"LI",{});var mo=$(rn);_($e.$$.fragment,mo),mo.forEach(n),la=d(O),pn=f(O,"LI",{});var ho=$(pn);_(ue.$$.fragment,ho),ho.forEach(n),aa=d(O),cn=f(O,"LI",{});var _o=$(cn);_(me.$$.fragment,_o),_o.forEach(n),oa=d(O),fn=f(O,"LI",{});var bo=$(fn);_(de.$$.fragment,bo),bo.forEach(n),ra=d(O),$n=f(O,"LI",{});var yo=$($n);_(he.$$.fragment,yo),yo.forEach(n),pa=d(O),un=f(O,"LI",{});var wo=$(un);_(_e.$$.fragment,wo),wo.forEach(n),ia=d(O),mn=f(O,"LI",{});var go=$(mn);_(be.$$.fragment,go),go.forEach(n),ca=d(O),dn=f(O,"LI",{});var Do=$(dn);_(ye.$$.fragment,Do),Do.forEach(n),O.forEach(n),vs=d(e),pt=f(e,"P",{});var ko=$(pt);hn=f(ko,"STRONG",{});var Fo=$(hn);fa=i(Fo,"Hardware Wallets"),Fo.forEach(n),ko.forEach(n),As=d(e),M=f(e,"UL",{});var S=$(M);_n=f(S,"LI",{});var vo=$(_n);_(we.$$.fragment,vo),vo.forEach(n),$a=d(S),bn=f(S,"LI",{});var Ao=$(bn);_(ge.$$.fragment,Ao),Ao.forEach(n),ua=d(S),yn=f(S,"LI",{});var Co=$(yn);_(De.$$.fragment,Co),Co.forEach(n),ma=d(S),wn=f(S,"LI",{});var Eo=$(wn);_(ke.$$.fragment,Eo),Eo.forEach(n),da=d(S),gn=f(S,"LI",{});var Io=$(gn);_(Fe.$$.fragment,Io),Io.forEach(n),S.forEach(n),Cs=d(e),it=f(e,"P",{});var Po=$(it);Dn=f(Po,"STRONG",{});var Lo=$(Dn);ha=i(Lo,"Frameworks"),Lo.forEach(n),Po.forEach(n),Es=d(e),ve=f(e,"UL",{});var Gs=$(ve);kn=f(Gs,"LI",{});var Oo=$(kn);_(Ae.$$.fragment,Oo),Oo.forEach(n),_a=d(Gs),Fn=f(Gs,"LI",{});var Mo=$(Fn);_(Ce.$$.fragment,Mo),Mo.forEach(n),Gs.forEach(n),Is=d(e),x=f(e,"H2",{id:!0,tabindex:!0});var Ua=$(x);_(Ee.$$.fragment,Ua),ba=i(Ua," Test out the demo app"),Ua.forEach(n),Ps=d(e),ct=f(e,"P",{});var To=$(ct);ya=i(To,"Test out the current functionality of web3-onboard in a small browser demo:"),To.forEach(n),Ls=d(e),L=f(e,"UL",{});var W=$(L);ft=f(W,"LI",{});var Ba=$(ft);wa=i(Ba,"Clone the repo: "),_(Ne.$$.fragment,Ba),Ba.forEach(n),ga=d(W),$t=f(W,"LI",{});var Ha=$($t);Da=i(Ha,"Change it to the onboard directory: "),_(Se.$$.fragment,Ha),Ha.forEach(n),ka=d(W),ut=f(W,"LI",{});var qa=$(ut);Fa=i(qa,"Checkout the main web3-onboard branch: "),_(je.$$.fragment,qa),qa.forEach(n),va=d(W),V=f(W,"LI",{});var Ct=$(V);Aa=i(Ct,"Install the dependencies: "),_(Ge.$$.fragment,Ct),Ca=i(Ct," (if running a M1 mac - "),_(Ue.$$.fragment,Ct),Ea=i(Ct,")"),Ct.forEach(n),Ia=d(W),mt=f(W,"LI",{});var Ka=$(mt);Pa=i(Ka,"Run all packages in dev mode: "),_(Be.$$.fragment,Ka),Ka.forEach(n),La=d(W),vn=f(W,"LI",{});var Wo=$(vn);_(Ie.$$.fragment,Wo),Wo.forEach(n),W.forEach(n),Os=d(e),z=f(e,"H2",{id:!0,tabindex:!0});var xa=$(z);_(Pe.$$.fragment,xa),Oa=i(xa," React Demo"),xa.forEach(n),Ms=d(e),He=f(e,"P",{});var Va=$(He);Ma=i(Va,"Checkout our live demo using React at "),_(Le.$$.fragment,Va),Va.forEach(n),Ts=d(e),qe=f(e,"P",{});var za=$(qe);Ta=i(za,"The demo is open source so you can see a sample implementation of web3-onboard: "),_(Oe.$$.fragment,za),za.forEach(n),Ws=d(e),Y=f(e,"H2",{id:!0,tabindex:!0});var Ya=$(Y);_(Me.$$.fragment,Ya),Wa=i(Ya," More Examples"),Ya.forEach(n),Rs=d(e),dt=f(e,"P",{});var Ro=$(dt);Ra=i(Ro,"You can find starter examples from the web3 community here using web3-onboard:"),Ro.forEach(n),Ns=d(e),ht=f(e,"UL",{});var No=$(ht);An=f(No,"LI",{});var So=$(An);_(Te.$$.fragment,So),So.forEach(n),No.forEach(n),this.h()},h(){Ho(R.src,It=Ko)||I(R,"src",It),I(R,"alt","Web3-Onboard connect wallet modal"),I(j,"id","features"),I(j,"tabindex","-1"),I(G,"id","supported-networks"),I(G,"tabindex","-1"),I(U,"id","optional-use-an-api-key-to-fetch-real-time-transaction-data-balances-gas"),I(U,"tabindex","-1"),I(q,"id","quickstart"),I(q,"tabindex","-1"),I(K,"id","wallet-modules"),I(K,"tabindex","-1"),I(x,"id","test-out-the-demo-app"),I(x,"tabindex","-1"),I(z,"id","react-demo"),I(z,"tabindex","-1"),I(Y,"id","more-examples"),I(Y,"tabindex","-1")},m(e,a){o(e,s,a),l(s,t),o(e,r,a),o(e,v,a),l(v,A),o(e,T,a),o(e,R,a),o(e,Zn,a),o(e,xe,a),l(xe,Bs),o(e,es,a),o(e,j,a),b(Q,j,null),l(j,Hs),o(e,ts,a),o(e,E,a),l(E,Pt),l(Pt,Ve),l(Ve,Lt),l(Lt,qs),l(Ve,Ks),l(E,xs),l(E,Ot),l(Ot,ze),l(ze,Mt),l(Mt,Vs),l(ze,zs),l(E,Ys),l(E,Tt),l(Tt,Ye),l(Ye,Wt),l(Wt,Qs),l(Ye,Js),l(E,Xs),l(E,Rt),l(Rt,Qe),l(Qe,Nt),l(Nt,Zs),l(Qe,el),l(E,tl),l(E,St),l(St,Je),l(Je,jt),l(jt,nl),l(Je,sl),l(E,ll),l(E,Gt),l(Gt,Xe),l(Xe,Ut),l(Ut,al),l(Xe,ol),l(E,rl),l(E,Bt),l(Bt,Ze),l(Ze,Ht),l(Ht,pl),l(Ze,il),o(e,ns,a),o(e,G,a),b(J,G,null),l(G,cl),o(e,ss,a),o(e,X,a),l(X,fl),b(Z,X,null),l(X,$l),o(e,ls,a),o(e,k,a),l(k,qt),l(qt,ul),l(k,ml),l(k,Kt),l(Kt,dl),l(k,hl),l(k,xt),l(xt,_l),l(k,bl),l(k,Vt),l(Vt,yl),l(k,wl),l(k,zt),l(zt,gl),l(k,Dl),l(k,Yt),l(Yt,kl),l(k,Fl),l(k,Qt),l(Qt,vl),l(k,Al),l(k,Jt),l(Jt,Cl),l(k,El),l(k,Xt),l(Xt,Il),l(k,Pl),l(k,Zt),l(Zt,Ll),l(k,Ol),l(k,en),l(en,Ml),l(k,Tl),l(k,tn),l(tn,Wl),o(e,as,a),o(e,U,a),b(ee,U,null),l(U,Rl),o(e,os,a),o(e,et,a),l(et,Nl),o(e,rs,a),o(e,te,a),l(te,Sl),l(te,nn),l(nn,jl),l(te,Gl),o(e,ps,a),o(e,B,a),l(B,sn),l(sn,Ul),l(B,Bl),b(ne,B,null),l(B,Hl),o(e,is,a),o(e,H,a),l(H,ln),l(ln,ql),l(H,Kl),b(se,H,null),l(H,xl),o(e,cs,a),o(e,q,a),b(le,q,null),l(q,Vl),o(e,fs,a),o(e,tt,a),l(tt,zl),o(e,$s,a),b(ae,e,a),o(e,us,a),o(e,We,a),l(We,Yl),b(oe,We,null),o(e,ms,a),o(e,nt,a),l(nt,Ql),o(e,ds,a),b(Re,e,a),o(e,st,a),l(st,an),l(an,Jl),o(e,hs,a),o(e,_s,a),o(e,bs,a),o(e,K,a),b(re,K,null),l(K,Xl),o(e,ys,a),o(e,lt,a),l(lt,Zl),o(e,ws,a),o(e,N,a),l(N,ea),b(pe,N,null),l(N,ta),b(ie,N,null),l(N,na),o(e,gs,a),o(e,at,a),b(ce,at,null),o(e,Ds,a),o(e,ot,a),b(fe,ot,null),o(e,ks,a),o(e,rt,a),l(rt,on),l(on,sa),o(e,Fs,a),o(e,C,a),l(C,rn),b($e,rn,null),l(C,la),l(C,pn),b(ue,pn,null),l(C,aa),l(C,cn),b(me,cn,null),l(C,oa),l(C,fn),b(de,fn,null),l(C,ra),l(C,$n),b(he,$n,null),l(C,pa),l(C,un),b(_e,un,null),l(C,ia),l(C,mn),b(be,mn,null),l(C,ca),l(C,dn),b(ye,dn,null),o(e,vs,a),o(e,pt,a),l(pt,hn),l(hn,fa),o(e,As,a),o(e,M,a),l(M,_n),b(we,_n,null),l(M,$a),l(M,bn),b(ge,bn,null),l(M,ua),l(M,yn),b(De,yn,null),l(M,ma),l(M,wn),b(ke,wn,null),l(M,da),l(M,gn),b(Fe,gn,null),o(e,Cs,a),o(e,it,a),l(it,Dn),l(Dn,ha),o(e,Es,a),o(e,ve,a),l(ve,kn),b(Ae,kn,null),l(ve,_a),l(ve,Fn),b(Ce,Fn,null),o(e,Is,a),o(e,x,a),b(Ee,x,null),l(x,ba),o(e,Ps,a),o(e,ct,a),l(ct,ya),o(e,Ls,a),o(e,L,a),l(L,ft),l(ft,wa),b(Ne,ft,null),l(L,ga),l(L,$t),l($t,Da),b(Se,$t,null),l(L,ka),l(L,ut),l(ut,Fa),b(je,ut,null),l(L,va),l(L,V),l(V,Aa),b(Ge,V,null),l(V,Ca),b(Ue,V,null),l(V,Ea),l(L,Ia),l(L,mt),l(mt,Pa),b(Be,mt,null),l(L,La),l(L,vn),b(Ie,vn,null),o(e,Os,a),o(e,z,a),b(Pe,z,null),l(z,Oa),o(e,Ms,a),o(e,He,a),l(He,Ma),b(Le,He,null),o(e,Ts,a),o(e,qe,a),l(qe,Ta),b(Oe,qe,null),o(e,Ws,a),o(e,Y,a),b(Me,Y,null),l(Y,Wa),o(e,Rs,a),o(e,dt,a),l(dt,Ra),o(e,Ns,a),o(e,ht,a),l(ht,An),b(Te,An,null),Ss=!0},p(e,[a]){const Cn={};a&1&&(Cn.$$scope={dirty:a,ctx:e}),Q.$set(Cn);const En={};a&1&&(En.$$scope={dirty:a,ctx:e}),J.$set(En);const _t={};a&1&&(_t.$$scope={dirty:a,ctx:e}),Z.$set(_t);const P={};a&1&&(P.$$scope={dirty:a,ctx:e}),ee.$set(P);const In={};a&1&&(In.$$scope={dirty:a,ctx:e}),ne.$set(In);const bt={};a&1&&(bt.$$scope={dirty:a,ctx:e}),se.$set(bt);const Pn={};a&1&&(Pn.$$scope={dirty:a,ctx:e}),le.$set(Pn);const Ln={};a&1&&(Ln.$$scope={dirty:a,ctx:e}),ae.$set(Ln);const yt={};a&1&&(yt.$$scope={dirty:a,ctx:e}),oe.$set(yt);const On={};a&1&&(On.$$scope={dirty:a,ctx:e}),re.$set(On);const Mn={};a&1&&(Mn.$$scope={dirty:a,ctx:e}),pe.$set(Mn);const wt={};a&1&&(wt.$$scope={dirty:a,ctx:e}),ie.$set(wt);const Tn={};a&1&&(Tn.$$scope={dirty:a,ctx:e}),ce.$set(Tn);const Wn={};a&1&&(Wn.$$scope={dirty:a,ctx:e}),fe.$set(Wn);const gt={};a&1&&(gt.$$scope={dirty:a,ctx:e}),$e.$set(gt);const Rn={};a&1&&(Rn.$$scope={dirty:a,ctx:e}),ue.$set(Rn);const Nn={};a&1&&(Nn.$$scope={dirty:a,ctx:e}),me.$set(Nn);const Dt={};a&1&&(Dt.$$scope={dirty:a,ctx:e}),de.$set(Dt);const Sn={};a&1&&(Sn.$$scope={dirty:a,ctx:e}),he.$set(Sn);const jn={};a&1&&(jn.$$scope={dirty:a,ctx:e}),_e.$set(jn);const kt={};a&1&&(kt.$$scope={dirty:a,ctx:e}),be.$set(kt);const Gn={};a&1&&(Gn.$$scope={dirty:a,ctx:e}),ye.$set(Gn);const Un={};a&1&&(Un.$$scope={dirty:a,ctx:e}),we.$set(Un);const Ft={};a&1&&(Ft.$$scope={dirty:a,ctx:e}),ge.$set(Ft);const Bn={};a&1&&(Bn.$$scope={dirty:a,ctx:e}),De.$set(Bn);const vt={};a&1&&(vt.$$scope={dirty:a,ctx:e}),ke.$set(vt);const Ke={};a&1&&(Ke.$$scope={dirty:a,ctx:e}),Fe.$set(Ke);const F={};a&1&&(F.$$scope={dirty:a,ctx:e}),Ae.$set(F);const Hn={};a&1&&(Hn.$$scope={dirty:a,ctx:e}),Ce.$set(Hn);const qn={};a&1&&(qn.$$scope={dirty:a,ctx:e}),Ee.$set(qn);const Kn={};a&1&&(Kn.$$scope={dirty:a,ctx:e}),Ie.$set(Kn);const xn={};a&1&&(xn.$$scope={dirty:a,ctx:e}),Pe.$set(xn);const Vn={};a&1&&(Vn.$$scope={dirty:a,ctx:e}),Le.$set(Vn);const zn={};a&1&&(zn.$$scope={dirty:a,ctx:e}),Oe.$set(zn);const Yn={};a&1&&(Yn.$$scope={dirty:a,ctx:e}),Me.$set(Yn);const Qn={};a&1&&(Qn.$$scope={dirty:a,ctx:e}),Te.$set(Qn)},i(e){Ss||(y(Q.$$.fragment,e),y(J.$$.fragment,e),y(Z.$$.fragment,e),y(ee.$$.fragment,e),y(ne.$$.fragment,e),y(se.$$.fragment,e),y(le.$$.fragment,e),y(ae.$$.fragment,e),y(oe.$$.fragment,e),y(Re.$$.fragment,e),y(re.$$.fragment,e),y(pe.$$.fragment,e),y(ie.$$.fragment,e),y(ce.$$.fragment,e),y(fe.$$.fragment,e),y($e.$$.fragment,e),y(ue.$$.fragment,e),y(me.$$.fragment,e),y(de.$$.fragment,e),y(he.$$.fragment,e),y(_e.$$.fragment,e),y(be.$$.fragment,e),y(ye.$$.fragment,e),y(we.$$.fragment,e),y(ge.$$.fragment,e),y(De.$$.fragment,e),y(ke.$$.fragment,e),y(Fe.$$.fragment,e),y(Ae.$$.fragment,e),y(Ce.$$.fragment,e),y(Ee.$$.fragment,e),y(Ne.$$.fragment,e),y(Se.$$.fragment,e),y(je.$$.fragment,e),y(Ge.$$.fragment,e),y(Ue.$$.fragment,e),y(Be.$$.fragment,e),y(Ie.$$.fragment,e),y(Pe.$$.fragment,e),y(Le.$$.fragment,e),y(Oe.$$.fragment,e),y(Me.$$.fragment,e),y(Te.$$.fragment,e),Ss=!0)},o(e){w(Q.$$.fragment,e),w(J.$$.fragment,e),w(Z.$$.fragment,e),w(ee.$$.fragment,e),w(ne.$$.fragment,e),w(se.$$.fragment,e),w(le.$$.fragment,e),w(ae.$$.fragment,e),w(oe.$$.fragment,e),w(Re.$$.fragment,e),w(re.$$.fragment,e),w(pe.$$.fragment,e),w(ie.$$.fragment,e),w(ce.$$.fragment,e),w(fe.$$.fragment,e),w($e.$$.fragment,e),w(ue.$$.fragment,e),w(me.$$.fragment,e),w(de.$$.fragment,e),w(he.$$.fragment,e),w(_e.$$.fragment,e),w(be.$$.fragment,e),w(ye.$$.fragment,e),w(we.$$.fragment,e),w(ge.$$.fragment,e),w(De.$$.fragment,e),w(ke.$$.fragment,e),w(Fe.$$.fragment,e),w(Ae.$$.fragment,e),w(Ce.$$.fragment,e),w(Ee.$$.fragment,e),w(Ne.$$.fragment,e),w(Se.$$.fragment,e),w(je.$$.fragment,e),w(Ge.$$.fragment,e),w(Ue.$$.fragment,e),w(Be.$$.fragment,e),w(Ie.$$.fragment,e),w(Pe.$$.fragment,e),w(Le.$$.fragment,e),w(Oe.$$.fragment,e),w(Me.$$.fragment,e),w(Te.$$.fragment,e),Ss=!1},d(e){e&&n(s),e&&n(r),e&&n(v),e&&n(T),e&&n(R),e&&n(Zn),e&&n(xe),e&&n(es),e&&n(j),g(Q),e&&n(ts),e&&n(E),e&&n(ns),e&&n(G),g(J),e&&n(ss),e&&n(X),g(Z),e&&n(ls),e&&n(k),e&&n(as),e&&n(U),g(ee),e&&n(os),e&&n(et),e&&n(rs),e&&n(te),e&&n(ps),e&&n(B),g(ne),e&&n(is),e&&n(H),g(se),e&&n(cs),e&&n(q),g(le),e&&n(fs),e&&n(tt),e&&n($s),g(ae,e),e&&n(us),e&&n(We),g(oe),e&&n(ms),e&&n(nt),e&&n(ds),g(Re,e),e&&n(st),e&&n(hs),e&&n(_s),e&&n(bs),e&&n(K),g(re),e&&n(ys),e&&n(lt),e&&n(ws),e&&n(N),g(pe),g(ie),e&&n(gs),e&&n(at),g(ce),e&&n(Ds),e&&n(ot),g(fe),e&&n(ks),e&&n(rt),e&&n(Fs),e&&n(C),g($e),g(ue),g(me),g(de),g(he),g(_e),g(be),g(ye),e&&n(vs),e&&n(pt),e&&n(As),e&&n(M),g(we),g(ge),g(De),g(ke),g(Fe),e&&n(Cs),e&&n(it),e&&n(Es),e&&n(ve),g(Ae),g(Ce),e&&n(Is),e&&n(x),g(Ee),e&&n(Ps),e&&n(ct),e&&n(Ls),e&&n(L),g(Ne),g(Se),g(je),g(Ge),g(Ue),g(Be),g(Ie),e&&n(Os),e&&n(z),g(Pe),e&&n(Ms),e&&n(He),g(Le),e&&n(Ts),e&&n(qe),g(Oe),e&&n(Ws),e&&n(Y),g(Me),e&&n(Rs),e&&n(dt),e&&n(Ns),e&&n(ht),g(Te)}}}class Gr extends Go{constructor(s){super(),Uo(this,s,null,Pr,Bo,{})}}export{Gr as default};
