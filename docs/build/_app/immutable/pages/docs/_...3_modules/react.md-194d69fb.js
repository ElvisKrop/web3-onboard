import{S as up,i as $p,s as dp,e as $,t,k as f,w as y,c as d,a as m,h as c,d as n,m as u,x as D,b as w,g as o,M as r,y as F,q as C,o as i,B as A,E as Ua}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as _}from"../../../chunks/CodeFence-7c02fe57.js";import{C as B}from"../../../chunks/CodeInline-7947d9bd.js";import{L as E}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as mp,a as fp}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function gp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function hp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function bp(g){let p,l;return p=new _({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/react
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/react</span></span>
<span class="line"></span></code></pre>`}}),{c(){y(p.$$.fragment)},l(e){D(p.$$.fragment,e)},m(e,b){F(p,e,b),l=!0},p:Ua,i(e){l||(C(p.$$.fragment,e),l=!0)},o(e){i(p.$$.fragment,e),l=!1},d(e){A(p,e)}}}function wp(g){let p,l;return p=new _({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/react
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/react</span></span>
<span class="line"></span></code></pre>`}}),{c(){y(p.$$.fragment)},l(e){D(p.$$.fragment,e)},m(e,b){F(p,e,b),l=!0},p:Ua,i(e){l||(C(p.$$.fragment,e),l=!0)},o(e){i(p.$$.fragment,e),l=!1},d(e){A(p,e)}}}function Bp(g){let p,l,e,b;return p=new fp({props:{value:"yarn",$$slots:{default:[bp]},$$scope:{ctx:g}}}),e=new fp({props:{value:"npm",$$slots:{default:[wp]},$$scope:{ctx:g}}}),{c(){y(p.$$.fragment),l=f(),y(e.$$.fragment)},l(h){D(p.$$.fragment,h),l=u(h),D(e.$$.fragment,h)},m(h,v){F(p,h,v),o(h,l,v),F(e,h,v),b=!0},p(h,v){const P={};v&1&&(P.$$scope={dirty:v,ctx:h}),p.$set(P);const T={};v&1&&(T.$$scope={dirty:v,ctx:h}),e.$set(T)},i(h){b||(C(p.$$.fragment,h),C(e.$$.fragment,h),b=!0)},o(h){i(p.$$.fragment,h),i(e.$$.fragment,h),b=!1},d(h){A(p,h),h&&n(l),A(e,h)}}}function Ep(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function vp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function _p(g){let p,l,e;return l=new B({props:{code:"@web3-onboard/core"}}),{c(){p=t("initialization docs for "),y(l.$$.fragment)},l(b){p=c(b,"initialization docs for "),D(l.$$.fragment,b)},m(b,h){o(b,p,h),F(l,b,h),e=!0},p:Ua,i(b){e||(C(l.$$.fragment,b),e=!0)},o(b){i(l.$$.fragment,b),e=!1},d(b){b&&n(p),A(l,b)}}}function kp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function Pp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function xp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function Np(g){let p,l,e,b;return l=new B({props:{code:"@web3-onboard/core"}}),{c(){p=t("Notify section within the "),y(l.$$.fragment),e=t(" docs")},l(h){p=c(h,"Notify section within the "),D(l.$$.fragment,h),e=c(h," docs")},m(h,v){o(h,p,v),F(l,h,v),o(h,e,v),b=!0},p:Ua,i(h){b||(C(l.$$.fragment,h),b=!0)},o(h){i(l.$$.fragment,h),b=!1},d(h){h&&n(p),A(l,h),h&&n(e)}}}function Tp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function jp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function Wp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function Rp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function Op(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function Sp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function qp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function Hp(g){let p;return{c(){p=t("CRACO")},l(l){p=c(l,"CRACO")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function Ip(g){let p;return{c(){p=t("React App Rewired")},l(l){p=c(l,"React App Rewired")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function zp(g){let p;return{c(){p=t("#")},l(l){p=c(l,"#")},m(l,e){o(l,p,e)},d(l){l&&n(p)}}}function Mp(g){let p,l,e,b,h,v,P,T,Ga,Xn,z,X,La,Zn,Z,sa,M,ss,Va,na,bs,j,ns,Ka,ws,aa,k,Ya,Bs,Qa,Es,Ja,vs,Xa,as,la,W,ls,Za,_s,pa,$n,sl,oa,ks,U,Rn,Ps,nl,xs,al,ea,Ns,R,ps,ll,Ts,ta,dn,pl,ca,js,O,os,ol,Ws,ra,G,el,On,tl,cl,es,ya,Rs,Os,S,ts,rl,Ss,Da,mn,yl,Fa,qs,q,cs,Dl,Hs,Ca,gn,Fl,ia,Is,H,rs,Cl,zs,Aa,hn,il,fa,Ms,L,ys,Al,ua,x,fl,Us,ul,Gs,$l,Ls,dl,$a,V,Ds,ml,da,bn,gl,ma,K,Sn,hl,bl,qn,wl,Bl,ga,I,Vs,El,Hn,vl,_l,Ks,ha,wn,In,kl,ba,Ys,Bn,zn,Pl,wa,Qs,Y,Fs,xl,Ba,En,Nl,Ea,vn,Js,va,Cs,Tl,Xs,jl,_a,Zs,Q,is,Wl,ka,sn,As,Rl,Pa,fs,Ol,nn,Sl,xa,an,us,ql,Na,ln,Hl,pn,Ta,_n,Mn,Il,ja,kn,on,Wa,en,J,$s,zl,Ra,Pn,Ml,Oa,xn,tn,Sa,ds,Ul,cn,Gl,qa,rn,Ha;return T=new E({props:{class:"header-anchor",href:"#quickstart-with-injected-wallets-and-ethers-provider","aria-hidden":"true",$$slots:{default:[gp]},$$scope:{ctx:g}}}),X=new E({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[hp]},$$scope:{ctx:g}}}),Z=new mp({props:{values:["yarn","npm"],$$slots:{default:[Bp]},$$scope:{ctx:g}}}),ss=new E({props:{class:"header-anchor",href:"#add-code","aria-hidden":"true",$$slots:{default:[Ep]},$$scope:{ctx:g}}}),bs=new _({props:{lang:"javascript",ext:"js",linesCount:45,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> React </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">react</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">init</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useConnectWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/react</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ethers</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// Sign up to get your free API key at https://explorer.blocknative.com/?signup=true</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> dappId </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">1730eff0-9d50-4382-a3fe-89f0d34a2070</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> infuraKey </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> rpcUrl </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">\`</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/</span><span style="color: #89DDFF">\${</span><span style="color: #A6ACCD">infuraKey</span><span style="color: #89DDFF">}\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// initialize Onboard</span></span>
<span class="line"><span style="color: #82AAFF">init</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      rpcUrl</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">App</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">[{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connecting</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connect</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnect</span><span style="color: #89DDFF">]</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useConnectWallet</span><span style="color: #F07178">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// create an ethers provider</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethersProvider</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">wallet</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">providers</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Web3Provider</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">any</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> (</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">disabled</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">connecting</span><span style="color: #89DDFF">} </span><span style="color: #C792EA">onClick</span><span style="color: #89DDFF">={()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> (wallet </span><span style="color: #89DDFF">?</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">disconnect</span><span style="color: #A6ACCD">(wallet) </span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">connect</span><span style="color: #A6ACCD">())</span><span style="color: #89DDFF">}&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">connecting </span><span style="color: #89DDFF">?</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">connecting</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> wallet </span><span style="color: #89DDFF">?</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">disconnect</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">connect</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #F07178">  )</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),ns=new E({props:{class:"header-anchor",href:"#init","aria-hidden":"true",$$slots:{default:[vp]},$$scope:{ctx:g}}}),ws=new B({props:{code:"init"}}),Bs=new B({props:{code:"init"}}),Es=new B({props:{code:"init"}}),vs=new B({props:{code:"web3-onboard"}}),as=new E({props:{href:"/docs/modules/core#initialization",$$slots:{default:[_p]},$$scope:{ctx:g}}}),ls=new E({props:{class:"header-anchor",href:"#useconnectwallet","aria-hidden":"true",$$slots:{default:[kp]},$$scope:{ctx:g}}}),_s=new B({props:{code:"useConnectWallet"}}),ks=new _({props:{lang:"typescript",ext:"ts",linesCount:44,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useConnectWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/react</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UseConnectWallet</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">():</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">wallet</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletState</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">null</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">connecting</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">options</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ConnectOptions</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">void</span><span style="color: #89DDFF">&gt;,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">DisconnectOptions</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">void</span><span style="color: #89DDFF">&gt;,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">addresses</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD">[]</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">void</span><span style="color: #89DDFF">&gt;,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletInit</span><span style="color: #A6ACCD">[]</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletState</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> address</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"><span style="color: #A6ACCD">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ConnectOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">autoSelect</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// wallet name to auto-select for user</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">DisconnectOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">// wallet label</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletState</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">provider</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">EIP1193Provider</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">accounts</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Account</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ConnectedChain</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">instance</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">unknown</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletInit</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">helpers</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletHelpers</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletModule</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletModule</span><span style="color: #A6ACCD">[] </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">null</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    wallet</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the wallet that has been connected or null if not yet connected</span></span>
<span class="line"><span style="color: #A6ACCD">    connecting </span><span style="color: #464B5D; font-style: italic">// boolean indicating if connection is in progress</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  connect</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// function to call to initiate user to connect wallet</span></span>
<span class="line"><span style="color: #A6ACCD">  disconnect</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// function to call with wallet&lt;DisconnectOptions&gt; to disconnect wallet</span></span>
<span class="line"><span style="color: #A6ACCD">  updateBalances</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// function to be called with an optional array of wallet addresses connected through Onboard to update balance or empty/no params to update all connected wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  setWalletModules</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// function to be called with an array of wallet modules to conditionally allow connection of wallet types i.e. setWalletModules([ledger, trezor, injected])</span></span>
<span class="line"><span style="color: #A6ACCD">  setPrimaryWallet </span><span style="color: #464B5D; font-style: italic">// function that can set the primary wallet and/or primary account within that wallet. The wallet that is set needs to be passed in for the first parameter and if you would like to set the primary account, the address of that account also needs to be passed in</span></span>
<span class="line"><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useConnectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre>`}}),Ps=new B({props:{code:"setPrimaryWallet"}}),xs=new B({props:{code:"setPrimaryWallet"}}),Ns=new _({props:{lang:"typescript",ext:"ts",linesCount:7,code:`<pre><code><span class="line"><span style="color: #464B5D; font-style: italic">// set the second wallet in the wallets array as the primary</span></span>
<span class="line"><span style="color: #82AAFF">setPrimaryWallet</span><span style="color: #A6ACCD">(wallets[</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// set the second wallet in the wallets array as the primary wallet</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// as well as setting the third account in that wallet as the primary account</span></span>
<span class="line"><span style="color: #82AAFF">setPrimaryWallet</span><span style="color: #A6ACCD">(wallets[</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> wallets[</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">accounts[</span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">address)</span></span>
<span class="line"></span></code></pre>`}}),ps=new E({props:{class:"header-anchor",href:"#usesetchain","aria-hidden":"true",$$slots:{default:[Pp]},$$scope:{ctx:g}}}),Ts=new B({props:{code:"useSetChain"}}),js=new _({props:{lang:"typescript",ext:"ts",linesCount:28,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useSetChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/react</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UseSetChain</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> (</span></span>
<span class="line"><span style="color: #A6ACCD">  walletLabel</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Chain</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">connectedChain</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ConnectedChain</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">null</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">settingChain</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">options</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">SetChainOptions</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">void</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">SetChainOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chainId</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chainNamespace</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallet</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletState</span><span style="color: #A6ACCD">[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">label</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    chains</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the list of chains that web3-onboard was initialized with</span></span>
<span class="line"><span style="color: #A6ACCD">    connectedChain</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the current chain the user&#39;s wallet is connected to</span></span>
<span class="line"><span style="color: #A6ACCD">    settingChain </span><span style="color: #464B5D; font-style: italic">// boolean indicating if the chain is in the process of being set</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  setChain </span><span style="color: #464B5D; font-style: italic">// function to call to initiate user to switch chains in their wallet</span></span>
<span class="line"><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useSetChain</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span></code></pre>`}}),os=new E({props:{class:"header-anchor",href:"#usenotifications","aria-hidden":"true",$$slots:{default:[xp]},$$scope:{ctx:g}}}),Ws=new B({props:{code:"useNotifications"}}),es=new E({props:{href:"/docs/modules/core#options",$$slots:{default:[Np]},$$scope:{ctx:g}}}),Rs=new _({props:{lang:"typescript",ext:"ts",linesCount:76,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UseNotifications</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">():</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">Notification</span><span style="color: #A6ACCD">[]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">updatedNotification</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">dismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">update</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UpdateNotification</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">update</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Partial</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Notify</span><span style="color: #89DDFF">&gt;)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">options</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">PreflightNotificationsOptions</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">void</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">key</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotificationType</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">network</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Network</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">startTime</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">eventCode</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">autoDismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">link</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">onClick</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">event</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Event</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TransactionHandlerReturn</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Partial</span><span style="color: #89DDFF">&lt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Notification</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">startTime</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">network</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">id</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">key</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotificationUpdate</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Partial</span><span style="color: #89DDFF">&lt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Notification</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">startTime</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">network</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotificationType</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">pending</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">error</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">hint</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UpdateNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">notificationObject</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #89DDFF">):</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">dismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">update</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UpdateNotification</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/**</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Defines whether to subscribe to transaction events or not</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * default: true</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   */</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/**</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Callback that receives all transaction events</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Return a custom notification based on the event</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Or return false to disable notification for this event</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Or return undefined for a default notification</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   */</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> (</span></span>
<span class="line"><span style="color: #A6ACCD">    event</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">EthereumTransactionData</span></span>
<span class="line"><span style="color: #A6ACCD">  ) </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TransactionHandlerReturn</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/**</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Position of notifications that defaults to the same position as the</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Account Center (if enabled) of the top right if AC is disabled</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * and notifications are enabled (enabled by default with API key)</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   */</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotificationPosition</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">PreflightNotificationsOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">sendTransaction</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">estimateGas</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">gasPrice</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">balance</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">txDetails</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TxDetails</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">txApproveReminderTimeout</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TxDetails</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">value</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">to</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">from</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),Os=new _({props:{lang:"typescript",ext:"ts",linesCount:81,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useNotifications</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/react</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span></span>
<span class="line"><span style="color: #A6ACCD">  notifications</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the list of all notifications that update when notifications are added, updated or removed</span></span>
<span class="line"><span style="color: #A6ACCD">  customNotification</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// a function that takes a customNotification object and allows custom notifications to be shown to the user, returns an update and dismiss callback</span></span>
<span class="line"><span style="color: #A6ACCD">  updateNotify</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// a function that takes a Notify object to allow updating of the properties</span></span>
<span class="line"><span style="color: #A6ACCD">  preflightNotifications </span><span style="color: #464B5D; font-style: italic">// a function that takes a PreflightNotificationsOption to create preflight notifications</span></span>
<span class="line"><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useNotifications</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// View notifications as they come in if you would like to handle them independent of the notification display</span></span>
<span class="line"><span style="color: #82AAFF">useEffect</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">notifications</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">},</span><span style="color: #A6ACCD"> [notifications])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> sendTransactionWithPreFlightNotifications </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">balanceValue</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">values</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">accounts</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">balance</span><span style="color: #F07178">)[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">signer</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getUncheckedSigner</span><span style="color: #F07178">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">txDetails</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    to</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">toAddress</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    value</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1000000000000000</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">sendTransaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">signer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sendTransaction</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">txDetails</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">tx</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">tx</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">hash</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">gasPrice</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getGasPrice</span><span style="color: #F07178">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">res</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #F07178">())</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">estimateGas</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">estimateGas</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">txDetails</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">res</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #F07178">())</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transactionHash</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #82AAFF">preflightNotifications</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">sendTransaction</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">gasPrice</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">estimateGas</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">      balance</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">balanceValue</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">      txDetails</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">txDetails</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">transactionHash</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// Custom notification example</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD">button</span></span>
<span class="line"><span style="color: #A6ACCD">  className</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">bn-demo-button</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">  onClick</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">() =&gt; {</span></span>
<span class="line"><span style="color: #A6ACCD">    const { update </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">customNotification</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">eventCode</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">dbUpdate</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">hint</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Custom hint notification created by the dapp</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">onClick</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">          window</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">open</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">\`</span><span style="color: #C3E88D">https://www.blocknative.com</span><span style="color: #89DDFF">\`</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">// Update your notification example below</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">update</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">eventCode</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">dbUpdateSuccess</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Hint notification reason resolved!</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">autoDismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">5000</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F78C6C">4000</span></span>
<span class="line"><span style="color: #A6ACCD">    )</span></span>
<span class="line"><span style="color: #A6ACCD">  }}</span></span>
<span class="line"><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  Custom Hint Notification</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #A6ACCD">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD">button</span></span>
<span class="line"><span style="color: #A6ACCD">  className</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">bn-demo-button</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">  onClick</span><span style="color: #89DDFF">={</span><span style="color: #F07178">async</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">sendTransactionWithPreFlightNotifications</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}}</span></span>
<span class="line"><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  Send </span><span style="color: #89DDFF; font-style: italic">with</span><span style="color: #A6ACCD"> In Flight and Pre Flight Notifications</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #A6ACCD">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),ts=new E({props:{class:"header-anchor",href:"#usewallets","aria-hidden":"true",$$slots:{default:[Tp]},$$scope:{ctx:g}}}),Ss=new B({props:{code:"useWallets"}}),qs=new _({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useWallets</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/react</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UseWallets</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">():</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletState</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useWallets</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span></code></pre>`}}),cs=new E({props:{class:"header-anchor",href:"#useaccountcenter","aria-hidden":"true",$$slots:{default:[jp]},$$scope:{ctx:g}}}),Hs=new B({props:{code:"useAccountCenter"}}),Is=new _({props:{lang:"typescript",ext:"ts",linesCount:21,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useAccountCenter</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/react</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UseAccountCenter</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">():</span><span style="color: #A6ACCD"> ((</span></span>
<span class="line"><span style="color: #A6ACCD">  update</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Partial</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">) </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomRight</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">expanded</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> updateAccountCenter </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useAccountCenter</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span></code></pre>`}}),rs=new E({props:{class:"header-anchor",href:"#usesetlocale","aria-hidden":"true",$$slots:{default:[Wp]},$$scope:{ctx:g}}}),zs=new B({props:{code:"useSetLocale"}}),Ms=new _({props:{lang:"typescript",ext:"ts",linesCount:8,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useSetLocale</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/react</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">useSetLocale</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">():</span><span style="color: #A6ACCD"> (</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">locale</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> updateLocale </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useSetLocale</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">updateLocale</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">es</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),ys=new E({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[Rp]},$$scope:{ctx:g}}}),Us=new B({props:{code:"crypto"}}),Gs=new B({props:{code:"buffer"}}),Ls=new B({props:{code:"util"}}),Ds=new E({props:{class:"header-anchor",href:"#webpack-4","aria-hidden":"true",$$slots:{default:[Op]},$$scope:{ctx:g}}}),Vs=new B({props:{code:"npm i --save-dev @babel/cli @babel/core @babel/node @babel/plugin-proposal-nullish-coalescing-operator @babel/plugin-proposal-optional-chaining @babel/plugin-syntax-bigint @babel/register"}}),Ks=new B({props:{code:"npm i babel-loader"}}),Ys=new _({props:{lang:"javascript",ext:"js",linesCount:10,code:`<pre><code><span class="line"><span style="color: #89DDFF">module.exports</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">api</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">api</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">cache</span><span style="color: #F07178">(</span><span style="color: #FF9CAC">true</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">plugins</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> [</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@babel/plugin-proposal-optional-chaining</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@babel/plugin-proposal-nullish-coalescing-operator</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@babel/plugin-syntax-bigint</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">  ]</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">plugins</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),Qs=new _({props:{lang:"javascript",ext:"js",linesCount:9,code:`<pre><code><span class="line"><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">module</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">rules </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">...</span><span style="color: #A6ACCD">otherModuleRules</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">test</span><span style="color: #89DDFF">:</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">\\.</span><span style="color: #C3E88D">js</span><span style="color: #89DDFF; font-style: italic">$</span><span style="color: #89DDFF">/</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">exclude</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">_</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">node_modules</span><span style="color: #A6ACCD">\\/</span><span style="color: #89DDFF">(</span><span style="color: #C3E88D">@web3auth</span><span style="color: #89DDFF">|</span><span style="color: #C3E88D">@ethereumjs</span><span style="color: #89DDFF">)/</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">test</span><span style="color: #A6ACCD">(_)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">loader</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">babel-loader</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">]</span></span>
<span class="line"></span></code></pre>`}}),Fs=new E({props:{class:"header-anchor",href:"#webpack-5","aria-hidden":"true",$$slots:{default:[Sp]},$$scope:{ctx:g}}}),Js=new B({props:{code:"npm i --save-dev assert buffer crypto-browserify stream-http https-browserify os-browserify process stream-browserify util path-browserify"}}),Xs=new B({props:{code:"webpack.config.js"}}),Zs=new _({props:{lang:"javascript",ext:"js",linesCount:30,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> webpack </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">webpack</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">module.exports</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">resolve</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">fallback</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">path</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">path-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">alias</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">assert</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">buffer</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-http</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">https</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">os</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">os-browserify/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">process</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">stream</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">util</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">util</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">experiments</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">asyncWebAssembly</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> webpack</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ProvidePlugin</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">process</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">Buffer</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),is=new E({props:{class:"header-anchor",href:"#if-using-create-react-app","aria-hidden":"true",$$slots:{default:[qp]},$$scope:{ctx:g}}}),As=new E({props:{href:"https://www.npmjs.com/package/@craco/craco",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Hp]},$$scope:{ctx:g}}}),nn=new B({props:{code:"craco.config.js"}}),us=new E({props:{href:"https://www.npmjs.com/package/react-app-rewired",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ip]},$$scope:{ctx:g}}}),pn=new B({props:{code:"npm i --save-dev rollup-plugin-polyfill-node webpack-bundle-analyzer assert buffer crypto-browserify stream-http https-browserify os-browserify process stream-browserify util path-browserify"}}),on=new B({props:{code:"yarn add rollup-plugin-polyfill-node webpack-bundle-analyzer assert buffer crypto-browserify stream-http https-browserify os-browserify process stream-browserify util path-browserify -D"}}),en=new _({props:{lang:"javascript",ext:"js",linesCount:51,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> webpack </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">webpack</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> BundleAnalyzerPlugin </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">webpack-bundle-analyzer</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">path</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">module.exports</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">override</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">fallback</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">resolve</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">fallback</span><span style="color: #F07178"> </span><span style="color: #89DDFF">||</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #FFCB6B">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">assign</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">fallback</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    assert</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    buffer</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    crypto</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    http</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-http</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    https</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    os</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">os-browserify/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    path</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">path-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    process</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    stream</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    url</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">url</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    util</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">util</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">resolve</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">fallback</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">fallback</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">resolve</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">alias</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">...</span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">resolve</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">alias</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">bn.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">__dirname</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/bn.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    lodash</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">__dirname</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/lodash</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">magic-sdk</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">__dirname</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/magic-sdk/dist/cjs/index.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">plugins</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">plugins</span><span style="color: #F07178"> </span><span style="color: #89DDFF">||</span><span style="color: #F07178"> [])</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">concat</span><span style="color: #F07178">([</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">webpack</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ProvidePlugin</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      process</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">      Buffer</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">]</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">webpack</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IgnorePlugin</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      resourceRegExp</span><span style="color: #89DDFF">:</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">genesisStates</span><span style="color: #A6ACCD">\\/</span><span style="color: #89DDFF">[</span><span style="color: #C3E88D">a-z</span><span style="color: #89DDFF">]*</span><span style="color: #A6ACCD">\\.</span><span style="color: #C3E88D">json</span><span style="color: #89DDFF; font-style: italic">$</span><span style="color: #89DDFF">/</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">      contextRegExp</span><span style="color: #89DDFF">:</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">@ethereumjs</span><span style="color: #A6ACCD">\\/</span><span style="color: #C3E88D">common</span><span style="color: #89DDFF">/</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">BundleAnalyzerPlugin</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      analyzerMode</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">disabled</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  ])</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">ignoreWarnings</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> [</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">Failed to parse source map</span><span style="color: #89DDFF">/</span><span style="color: #F07178">]</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">module</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">rules</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    test</span><span style="color: #89DDFF">:</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">\\.</span><span style="color: #89DDFF">(</span><span style="color: #C3E88D">js</span><span style="color: #89DDFF">|</span><span style="color: #C3E88D">mjs</span><span style="color: #89DDFF">|</span><span style="color: #C3E88D">jsx</span><span style="color: #89DDFF">)</span><span style="color: #89DDFF; font-style: italic">$</span><span style="color: #89DDFF">/</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    enforce</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">pre</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    loader</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">source-map-loader</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    resolve</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      fullySpecified</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">config</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),$s=new E({props:{class:"header-anchor",href:"#vite","aria-hidden":"true",$$slots:{default:[zp]},$$scope:{ctx:g}}}),tn=new B({props:{code:"npm i --save-dev rollup-plugin-polyfill-node"}}),cn=new B({props:{code:"vite.config.js"}}),rn=new _({props:{lang:"javascript",ext:"js",linesCount:32,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> nodePolyfills </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rollup-plugin-polyfill-node</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> process</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">env</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">NODE_ENV</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> development </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">===</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">development</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// other config options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    development </span><span style="color: #89DDFF">&amp;&amp;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">include</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/**/*.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RegExp</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/.vite/.*js</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">resolve</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">alias</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">stream</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">assert</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">build</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">rollupOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)]</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">commonjsOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">transformMixedEsModules</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),{c(){p=$("h1"),l=t("React"),e=f(),b=$("p"),h=t("A collection of React hooks for implementing web3-onboard in to a React project"),v=f(),P=$("h2"),y(T.$$.fragment),Ga=t(" Quickstart with Injected Wallets and Ethers Provider"),Xn=f(),z=$("h3"),y(X.$$.fragment),La=t(" Install"),Zn=f(),y(Z.$$.fragment),sa=f(),M=$("h3"),y(ss.$$.fragment),Va=t(" Add Code"),na=f(),y(bs.$$.fragment),j=$("h2"),y(ns.$$.fragment),Ka=f(),y(ws.$$.fragment),aa=f(),k=$("p"),Ya=t("The "),y(Bs.$$.fragment),Qa=t(" function must be called before any hooks can be used. The "),y(Es.$$.fragment),Ja=t(" function just initializes "),y(vs.$$.fragment),Xa=t(" and makes it available for all hooks to use. For reference check out the "),y(as.$$.fragment),la=f(),W=$("h2"),y(ls.$$.fragment),Za=f(),y(_s.$$.fragment),pa=f(),$n=$("p"),sl=t("This hook allows you to connect the user's wallet and track the state of the connection status and the wallet that is connected."),oa=f(),y(ks.$$.fragment),U=$("p"),Rn=$("strong"),y(Ps.$$.fragment),nl=t(`
The primary wallet (first in the list of connected wallets) and primary account (first in the list of connected accounts for a wallet) can be set by using the `),y(xs.$$.fragment),al=t(" function. The wallet that is set needs to be passed in for the first parameter and if you would like to set the primary account, the address of that account also needs to be passed in:"),ea=f(),y(Ns.$$.fragment),R=$("h2"),y(ps.$$.fragment),ll=f(),y(Ts.$$.fragment),ta=f(),dn=$("p"),pl=t("This hook allows you to set the chain of a user's connected wallet, keep track of the current chain the user is connected to and the status of setting the chain. Passing in a wallet label will operate on that connected wallet, otherwise it will default to the last connected wallet."),ca=f(),y(js.$$.fragment),O=$("h2"),y(os.$$.fragment),ol=f(),y(Ws.$$.fragment),ra=f(),G=$("p"),el=t(`This hook allows the dev to access all notifications if enabled, send custom notifications and update notify <enable/disable & update transactionHandler function>
`),On=$("strong"),tl=t("note"),cl=t(` requires an API key be added to the initialization, enabled by default if API key exists
For full Notification documentation please see `),y(es.$$.fragment),ya=f(),y(Rs.$$.fragment),y(Os.$$.fragment),S=$("h2"),y(ts.$$.fragment),rl=f(),y(Ss.$$.fragment),Da=f(),mn=$("p"),yl=t("This hook allows you to track the state of all the currently connected wallets."),Fa=f(),y(qs.$$.fragment),q=$("h2"),y(cs.$$.fragment),Dl=f(),y(Hs.$$.fragment),Ca=f(),gn=$("p"),Fl=t("This hook allows you to track and update the state of the AccountCenter"),ia=f(),y(Is.$$.fragment),H=$("h2"),y(rs.$$.fragment),Cl=f(),y(zs.$$.fragment),Aa=f(),hn=$("p"),il=t("This hook allows you to set the locale of your application to allow language updates associated with the i18n config"),fa=f(),y(Ms.$$.fragment),L=$("h2"),y(ys.$$.fragment),Al=t(" Build Environments"),ua=f(),x=$("p"),fl=t("Many of the wallet modules require dependencies that are not normally included in browser builds (namely the node builtin modules such as "),y(Us.$$.fragment),ul=t(", "),y(Gs.$$.fragment),$l=t(", "),y(Ls.$$.fragment),dl=t(" etc). If you are having build issues you can try the following bundler configs to resolve these dependency issues:"),$a=f(),V=$("h3"),y(Ds.$$.fragment),ml=t(" Webpack 4"),da=f(),bn=$("p"),gl=t("Node built-ins are automatically bundled in v4 so that portion is handled automatically."),ma=f(),K=$("p"),Sn=$("strong"),hl=t("web3auth"),bl=t(" and "),qn=$("strong"),wl=t("torus"),Bl=t(" will require a Babel to compile from es6 if not already supported. See config for Babel and Webpack4 as follows"),ga=f(),I=$("p"),y(Vs.$$.fragment),El=f(),Hn=$("strong"),vl=t("AND"),_l=f(),y(Ks.$$.fragment),ha=f(),wn=$("p"),In=$("strong"),kl=t("babel.config.js"),ba=f(),y(Ys.$$.fragment),Bn=$("p"),zn=$("strong"),Pl=t("webpack.config.js"),wa=f(),y(Qs.$$.fragment),Y=$("h3"),y(Fs.$$.fragment),xl=t(" Webpack 5"),Ba=f(),En=$("p"),Nl=t("You'll need to add some dev dependencies with the following command:"),Ea=f(),vn=$("p"),y(Js.$$.fragment),va=f(),Cs=$("p"),Tl=t("Then add the following to your "),y(Xs.$$.fragment),jl=t(" file:"),_a=f(),y(Zs.$$.fragment),Q=$("h4"),y(is.$$.fragment),Wl=t(" If using create-react-app"),ka=f(),sn=$("p"),y(As.$$.fragment),Rl=t(" provides an similar way to override webpack config which is obfuscated in Create React App built applications."),Pa=f(),fs=$("p"),Ol=t("The above webpack 5 example can be used in the "),y(nn.$$.fragment),Sl=t(" file at the root level in this case."),xa=f(),an=$("p"),y(us.$$.fragment),ql=t(" is another option for working with Create React App DApps"),Na=f(),ln=$("p"),Hl=t(`Add the following dev dependencies:
`),y(pn.$$.fragment),Ta=f(),_n=$("p"),Mn=$("strong"),Il=t("OR"),ja=f(),kn=$("p"),y(on.$$.fragment),Wa=f(),y(en.$$.fragment),J=$("h3"),y($s.$$.fragment),zl=t(" Vite"),Ra=f(),Pn=$("p"),Ml=t("Add the following dev dependencies:"),Oa=f(),xn=$("p"),y(tn.$$.fragment),Sa=f(),ds=$("p"),Ul=t("Then add the following to your "),y(cn.$$.fragment),Gl=t(" file:"),qa=f(),y(rn.$$.fragment),this.h()},l(s){p=d(s,"H1",{});var a=m(p);l=c(a,"React"),a.forEach(n),e=u(s),b=d(s,"P",{});var Un=m(b);h=c(Un,"A collection of React hooks for implementing web3-onboard in to a React project"),Un.forEach(n),v=u(s),P=d(s,"H2",{id:!0,tabindex:!0});var Nn=m(P);D(T.$$.fragment,Nn),Ga=c(Nn," Quickstart with Injected Wallets and Ethers Provider"),Nn.forEach(n),Xn=u(s),z=d(s,"H3",{id:!0,tabindex:!0});var Tn=m(z);D(X.$$.fragment,Tn),La=c(Tn," Install"),Tn.forEach(n),Zn=u(s),D(Z.$$.fragment,s),sa=u(s),M=d(s,"H3",{id:!0,tabindex:!0});var jn=m(M);D(ss.$$.fragment,jn),Va=c(jn," Add Code"),jn.forEach(n),na=u(s),D(bs.$$.fragment,s),j=d(s,"H2",{id:!0,tabindex:!0});var yn=m(j);D(ns.$$.fragment,yn),Ka=u(yn),D(ws.$$.fragment,yn),yn.forEach(n),aa=u(s),k=d(s,"P",{});var N=m(k);Ya=c(N,"The "),D(Bs.$$.fragment,N),Qa=c(N," function must be called before any hooks can be used. The "),D(Es.$$.fragment,N),Ja=c(N," function just initializes "),D(vs.$$.fragment,N),Xa=c(N," and makes it available for all hooks to use. For reference check out the "),D(as.$$.fragment,N),N.forEach(n),la=u(s),W=d(s,"H2",{id:!0,tabindex:!0});var Dn=m(W);D(ls.$$.fragment,Dn),Za=u(Dn),D(_s.$$.fragment,Dn),Dn.forEach(n),pa=u(s),$n=d(s,"P",{});var Gn=m($n);sl=c(Gn,"This hook allows you to connect the user's wallet and track the state of the connection status and the wallet that is connected."),Gn.forEach(n),oa=u(s),D(ks.$$.fragment,s),U=d(s,"P",{});var ms=m(U);Rn=d(ms,"STRONG",{});var Ln=m(Rn);D(Ps.$$.fragment,Ln),Ln.forEach(n),nl=c(ms,`
The primary wallet (first in the list of connected wallets) and primary account (first in the list of connected accounts for a wallet) can be set by using the `),D(xs.$$.fragment,ms),al=c(ms," function. The wallet that is set needs to be passed in for the first parameter and if you would like to set the primary account, the address of that account also needs to be passed in:"),ms.forEach(n),ea=u(s),D(Ns.$$.fragment,s),R=d(s,"H2",{id:!0,tabindex:!0});var Fn=m(R);D(ps.$$.fragment,Fn),ll=u(Fn),D(Ts.$$.fragment,Fn),Fn.forEach(n),ta=u(s),dn=d(s,"P",{});var Vn=m(dn);pl=c(Vn,"This hook allows you to set the chain of a user's connected wallet, keep track of the current chain the user is connected to and the status of setting the chain. Passing in a wallet label will operate on that connected wallet, otherwise it will default to the last connected wallet."),Vn.forEach(n),ca=u(s),D(js.$$.fragment,s),O=d(s,"H2",{id:!0,tabindex:!0});var Cn=m(O);D(os.$$.fragment,Cn),ol=u(Cn),D(Ws.$$.fragment,Cn),Cn.forEach(n),ra=u(s),G=d(s,"P",{});var gs=m(G);el=c(gs,`This hook allows the dev to access all notifications if enabled, send custom notifications and update notify <enable/disable & update transactionHandler function>
`),On=d(gs,"STRONG",{});var Kn=m(On);tl=c(Kn,"note"),Kn.forEach(n),cl=c(gs,` requires an API key be added to the initialization, enabled by default if API key exists
For full Notification documentation please see `),D(es.$$.fragment,gs),gs.forEach(n),ya=u(s),D(Rs.$$.fragment,s),D(Os.$$.fragment,s),S=d(s,"H2",{id:!0,tabindex:!0});var An=m(S);D(ts.$$.fragment,An),rl=u(An),D(Ss.$$.fragment,An),An.forEach(n),Da=u(s),mn=d(s,"P",{});var Yn=m(mn);yl=c(Yn,"This hook allows you to track the state of all the currently connected wallets."),Yn.forEach(n),Fa=u(s),D(qs.$$.fragment,s),q=d(s,"H2",{id:!0,tabindex:!0});var fn=m(q);D(cs.$$.fragment,fn),Dl=u(fn),D(Hs.$$.fragment,fn),fn.forEach(n),Ca=u(s),gn=d(s,"P",{});var Qn=m(gn);Fl=c(Qn,"This hook allows you to track and update the state of the AccountCenter"),Qn.forEach(n),ia=u(s),D(Is.$$.fragment,s),H=d(s,"H2",{id:!0,tabindex:!0});var un=m(H);D(rs.$$.fragment,un),Cl=u(un),D(zs.$$.fragment,un),un.forEach(n),Aa=u(s),hn=d(s,"P",{});var sp=m(hn);il=c(sp,"This hook allows you to set the locale of your application to allow language updates associated with the i18n config"),sp.forEach(n),fa=u(s),D(Ms.$$.fragment,s),L=d(s,"H2",{id:!0,tabindex:!0});var Ll=m(L);D(ys.$$.fragment,Ll),Al=c(Ll," Build Environments"),Ll.forEach(n),ua=u(s),x=d(s,"P",{});var hs=m(x);fl=c(hs,"Many of the wallet modules require dependencies that are not normally included in browser builds (namely the node builtin modules such as "),D(Us.$$.fragment,hs),ul=c(hs,", "),D(Gs.$$.fragment,hs),$l=c(hs,", "),D(Ls.$$.fragment,hs),dl=c(hs," etc). If you are having build issues you can try the following bundler configs to resolve these dependency issues:"),hs.forEach(n),$a=u(s),V=d(s,"H3",{id:!0,tabindex:!0});var Vl=m(V);D(Ds.$$.fragment,Vl),ml=c(Vl," Webpack 4"),Vl.forEach(n),da=u(s),bn=d(s,"P",{});var np=m(bn);gl=c(np,"Node built-ins are automatically bundled in v4 so that portion is handled automatically."),np.forEach(n),ma=u(s),K=d(s,"P",{});var Jn=m(K);Sn=d(Jn,"STRONG",{});var ap=m(Sn);hl=c(ap,"web3auth"),ap.forEach(n),bl=c(Jn," and "),qn=d(Jn,"STRONG",{});var lp=m(qn);wl=c(lp,"torus"),lp.forEach(n),Bl=c(Jn," will require a Babel to compile from es6 if not already supported. See config for Babel and Webpack4 as follows"),Jn.forEach(n),ga=u(s),I=d(s,"P",{});var Wn=m(I);D(Vs.$$.fragment,Wn),El=u(Wn),Hn=d(Wn,"STRONG",{});var pp=m(Hn);vl=c(pp,"AND"),pp.forEach(n),_l=u(Wn),D(Ks.$$.fragment,Wn),Wn.forEach(n),ha=u(s),wn=d(s,"P",{});var op=m(wn);In=d(op,"STRONG",{});var ep=m(In);kl=c(ep,"babel.config.js"),ep.forEach(n),op.forEach(n),ba=u(s),D(Ys.$$.fragment,s),Bn=d(s,"P",{});var tp=m(Bn);zn=d(tp,"STRONG",{});var cp=m(zn);Pl=c(cp,"webpack.config.js"),cp.forEach(n),tp.forEach(n),wa=u(s),D(Qs.$$.fragment,s),Y=d(s,"H3",{id:!0,tabindex:!0});var Kl=m(Y);D(Fs.$$.fragment,Kl),xl=c(Kl," Webpack 5"),Kl.forEach(n),Ba=u(s),En=d(s,"P",{});var rp=m(En);Nl=c(rp,"You'll need to add some dev dependencies with the following command:"),rp.forEach(n),Ea=u(s),vn=d(s,"P",{});var yp=m(vn);D(Js.$$.fragment,yp),yp.forEach(n),va=u(s),Cs=d(s,"P",{});var Ia=m(Cs);Tl=c(Ia,"Then add the following to your "),D(Xs.$$.fragment,Ia),jl=c(Ia," file:"),Ia.forEach(n),_a=u(s),D(Zs.$$.fragment,s),Q=d(s,"H4",{id:!0,tabindex:!0});var Yl=m(Q);D(is.$$.fragment,Yl),Wl=c(Yl," If using create-react-app"),Yl.forEach(n),ka=u(s),sn=d(s,"P",{});var Ql=m(sn);D(As.$$.fragment,Ql),Rl=c(Ql," provides an similar way to override webpack config which is obfuscated in Create React App built applications."),Ql.forEach(n),Pa=u(s),fs=d(s,"P",{});var za=m(fs);Ol=c(za,"The above webpack 5 example can be used in the "),D(nn.$$.fragment,za),Sl=c(za," file at the root level in this case."),za.forEach(n),xa=u(s),an=d(s,"P",{});var Jl=m(an);D(us.$$.fragment,Jl),ql=c(Jl," is another option for working with Create React App DApps"),Jl.forEach(n),Na=u(s),ln=d(s,"P",{});var Xl=m(ln);Hl=c(Xl,`Add the following dev dependencies:
`),D(pn.$$.fragment,Xl),Xl.forEach(n),Ta=u(s),_n=d(s,"P",{});var Dp=m(_n);Mn=d(Dp,"STRONG",{});var Fp=m(Mn);Il=c(Fp,"OR"),Fp.forEach(n),Dp.forEach(n),ja=u(s),kn=d(s,"P",{});var Cp=m(kn);D(on.$$.fragment,Cp),Cp.forEach(n),Wa=u(s),D(en.$$.fragment,s),J=d(s,"H3",{id:!0,tabindex:!0});var Zl=m(J);D($s.$$.fragment,Zl),zl=c(Zl," Vite"),Zl.forEach(n),Ra=u(s),Pn=d(s,"P",{});var ip=m(Pn);Ml=c(ip,"Add the following dev dependencies:"),ip.forEach(n),Oa=u(s),xn=d(s,"P",{});var Ap=m(xn);D(tn.$$.fragment,Ap),Ap.forEach(n),Sa=u(s),ds=d(s,"P",{});var Ma=m(ds);Ul=c(Ma,"Then add the following to your "),D(cn.$$.fragment,Ma),Gl=c(Ma," file:"),Ma.forEach(n),qa=u(s),D(rn.$$.fragment,s),this.h()},h(){w(P,"id","quickstart-with-injected-wallets-and-ethers-provider"),w(P,"tabindex","-1"),w(z,"id","install"),w(z,"tabindex","-1"),w(M,"id","add-code"),w(M,"tabindex","-1"),w(j,"id","init"),w(j,"tabindex","-1"),w(W,"id","useconnectwallet"),w(W,"tabindex","-1"),w(R,"id","usesetchain"),w(R,"tabindex","-1"),w(O,"id","usenotifications"),w(O,"tabindex","-1"),w(S,"id","usewallets"),w(S,"tabindex","-1"),w(q,"id","useaccountcenter"),w(q,"tabindex","-1"),w(H,"id","usesetlocale"),w(H,"tabindex","-1"),w(L,"id","build-environments"),w(L,"tabindex","-1"),w(V,"id","webpack-4"),w(V,"tabindex","-1"),w(Y,"id","webpack-5"),w(Y,"tabindex","-1"),w(Q,"id","if-using-create-react-app"),w(Q,"tabindex","-1"),w(J,"id","vite"),w(J,"tabindex","-1")},m(s,a){o(s,p,a),r(p,l),o(s,e,a),o(s,b,a),r(b,h),o(s,v,a),o(s,P,a),F(T,P,null),r(P,Ga),o(s,Xn,a),o(s,z,a),F(X,z,null),r(z,La),o(s,Zn,a),F(Z,s,a),o(s,sa,a),o(s,M,a),F(ss,M,null),r(M,Va),o(s,na,a),F(bs,s,a),o(s,j,a),F(ns,j,null),r(j,Ka),F(ws,j,null),o(s,aa,a),o(s,k,a),r(k,Ya),F(Bs,k,null),r(k,Qa),F(Es,k,null),r(k,Ja),F(vs,k,null),r(k,Xa),F(as,k,null),o(s,la,a),o(s,W,a),F(ls,W,null),r(W,Za),F(_s,W,null),o(s,pa,a),o(s,$n,a),r($n,sl),o(s,oa,a),F(ks,s,a),o(s,U,a),r(U,Rn),F(Ps,Rn,null),r(U,nl),F(xs,U,null),r(U,al),o(s,ea,a),F(Ns,s,a),o(s,R,a),F(ps,R,null),r(R,ll),F(Ts,R,null),o(s,ta,a),o(s,dn,a),r(dn,pl),o(s,ca,a),F(js,s,a),o(s,O,a),F(os,O,null),r(O,ol),F(Ws,O,null),o(s,ra,a),o(s,G,a),r(G,el),r(G,On),r(On,tl),r(G,cl),F(es,G,null),o(s,ya,a),F(Rs,s,a),F(Os,s,a),o(s,S,a),F(ts,S,null),r(S,rl),F(Ss,S,null),o(s,Da,a),o(s,mn,a),r(mn,yl),o(s,Fa,a),F(qs,s,a),o(s,q,a),F(cs,q,null),r(q,Dl),F(Hs,q,null),o(s,Ca,a),o(s,gn,a),r(gn,Fl),o(s,ia,a),F(Is,s,a),o(s,H,a),F(rs,H,null),r(H,Cl),F(zs,H,null),o(s,Aa,a),o(s,hn,a),r(hn,il),o(s,fa,a),F(Ms,s,a),o(s,L,a),F(ys,L,null),r(L,Al),o(s,ua,a),o(s,x,a),r(x,fl),F(Us,x,null),r(x,ul),F(Gs,x,null),r(x,$l),F(Ls,x,null),r(x,dl),o(s,$a,a),o(s,V,a),F(Ds,V,null),r(V,ml),o(s,da,a),o(s,bn,a),r(bn,gl),o(s,ma,a),o(s,K,a),r(K,Sn),r(Sn,hl),r(K,bl),r(K,qn),r(qn,wl),r(K,Bl),o(s,ga,a),o(s,I,a),F(Vs,I,null),r(I,El),r(I,Hn),r(Hn,vl),r(I,_l),F(Ks,I,null),o(s,ha,a),o(s,wn,a),r(wn,In),r(In,kl),o(s,ba,a),F(Ys,s,a),o(s,Bn,a),r(Bn,zn),r(zn,Pl),o(s,wa,a),F(Qs,s,a),o(s,Y,a),F(Fs,Y,null),r(Y,xl),o(s,Ba,a),o(s,En,a),r(En,Nl),o(s,Ea,a),o(s,vn,a),F(Js,vn,null),o(s,va,a),o(s,Cs,a),r(Cs,Tl),F(Xs,Cs,null),r(Cs,jl),o(s,_a,a),F(Zs,s,a),o(s,Q,a),F(is,Q,null),r(Q,Wl),o(s,ka,a),o(s,sn,a),F(As,sn,null),r(sn,Rl),o(s,Pa,a),o(s,fs,a),r(fs,Ol),F(nn,fs,null),r(fs,Sl),o(s,xa,a),o(s,an,a),F(us,an,null),r(an,ql),o(s,Na,a),o(s,ln,a),r(ln,Hl),F(pn,ln,null),o(s,Ta,a),o(s,_n,a),r(_n,Mn),r(Mn,Il),o(s,ja,a),o(s,kn,a),F(on,kn,null),o(s,Wa,a),F(en,s,a),o(s,J,a),F($s,J,null),r(J,zl),o(s,Ra,a),o(s,Pn,a),r(Pn,Ml),o(s,Oa,a),o(s,xn,a),F(tn,xn,null),o(s,Sa,a),o(s,ds,a),r(ds,Ul),F(cn,ds,null),r(ds,Gl),o(s,qa,a),F(rn,s,a),Ha=!0},p(s,[a]){const Un={};a&1&&(Un.$$scope={dirty:a,ctx:s}),T.$set(Un);const Nn={};a&1&&(Nn.$$scope={dirty:a,ctx:s}),X.$set(Nn);const Tn={};a&1&&(Tn.$$scope={dirty:a,ctx:s}),Z.$set(Tn);const jn={};a&1&&(jn.$$scope={dirty:a,ctx:s}),ss.$set(jn);const yn={};a&1&&(yn.$$scope={dirty:a,ctx:s}),ns.$set(yn);const N={};a&1&&(N.$$scope={dirty:a,ctx:s}),as.$set(N);const Dn={};a&1&&(Dn.$$scope={dirty:a,ctx:s}),ls.$set(Dn);const Gn={};a&1&&(Gn.$$scope={dirty:a,ctx:s}),ps.$set(Gn);const ms={};a&1&&(ms.$$scope={dirty:a,ctx:s}),os.$set(ms);const Ln={};a&1&&(Ln.$$scope={dirty:a,ctx:s}),es.$set(Ln);const Fn={};a&1&&(Fn.$$scope={dirty:a,ctx:s}),ts.$set(Fn);const Vn={};a&1&&(Vn.$$scope={dirty:a,ctx:s}),cs.$set(Vn);const Cn={};a&1&&(Cn.$$scope={dirty:a,ctx:s}),rs.$set(Cn);const gs={};a&1&&(gs.$$scope={dirty:a,ctx:s}),ys.$set(gs);const Kn={};a&1&&(Kn.$$scope={dirty:a,ctx:s}),Ds.$set(Kn);const An={};a&1&&(An.$$scope={dirty:a,ctx:s}),Fs.$set(An);const Yn={};a&1&&(Yn.$$scope={dirty:a,ctx:s}),is.$set(Yn);const fn={};a&1&&(fn.$$scope={dirty:a,ctx:s}),As.$set(fn);const Qn={};a&1&&(Qn.$$scope={dirty:a,ctx:s}),us.$set(Qn);const un={};a&1&&(un.$$scope={dirty:a,ctx:s}),$s.$set(un)},i(s){Ha||(C(T.$$.fragment,s),C(X.$$.fragment,s),C(Z.$$.fragment,s),C(ss.$$.fragment,s),C(bs.$$.fragment,s),C(ns.$$.fragment,s),C(ws.$$.fragment,s),C(Bs.$$.fragment,s),C(Es.$$.fragment,s),C(vs.$$.fragment,s),C(as.$$.fragment,s),C(ls.$$.fragment,s),C(_s.$$.fragment,s),C(ks.$$.fragment,s),C(Ps.$$.fragment,s),C(xs.$$.fragment,s),C(Ns.$$.fragment,s),C(ps.$$.fragment,s),C(Ts.$$.fragment,s),C(js.$$.fragment,s),C(os.$$.fragment,s),C(Ws.$$.fragment,s),C(es.$$.fragment,s),C(Rs.$$.fragment,s),C(Os.$$.fragment,s),C(ts.$$.fragment,s),C(Ss.$$.fragment,s),C(qs.$$.fragment,s),C(cs.$$.fragment,s),C(Hs.$$.fragment,s),C(Is.$$.fragment,s),C(rs.$$.fragment,s),C(zs.$$.fragment,s),C(Ms.$$.fragment,s),C(ys.$$.fragment,s),C(Us.$$.fragment,s),C(Gs.$$.fragment,s),C(Ls.$$.fragment,s),C(Ds.$$.fragment,s),C(Vs.$$.fragment,s),C(Ks.$$.fragment,s),C(Ys.$$.fragment,s),C(Qs.$$.fragment,s),C(Fs.$$.fragment,s),C(Js.$$.fragment,s),C(Xs.$$.fragment,s),C(Zs.$$.fragment,s),C(is.$$.fragment,s),C(As.$$.fragment,s),C(nn.$$.fragment,s),C(us.$$.fragment,s),C(pn.$$.fragment,s),C(on.$$.fragment,s),C(en.$$.fragment,s),C($s.$$.fragment,s),C(tn.$$.fragment,s),C(cn.$$.fragment,s),C(rn.$$.fragment,s),Ha=!0)},o(s){i(T.$$.fragment,s),i(X.$$.fragment,s),i(Z.$$.fragment,s),i(ss.$$.fragment,s),i(bs.$$.fragment,s),i(ns.$$.fragment,s),i(ws.$$.fragment,s),i(Bs.$$.fragment,s),i(Es.$$.fragment,s),i(vs.$$.fragment,s),i(as.$$.fragment,s),i(ls.$$.fragment,s),i(_s.$$.fragment,s),i(ks.$$.fragment,s),i(Ps.$$.fragment,s),i(xs.$$.fragment,s),i(Ns.$$.fragment,s),i(ps.$$.fragment,s),i(Ts.$$.fragment,s),i(js.$$.fragment,s),i(os.$$.fragment,s),i(Ws.$$.fragment,s),i(es.$$.fragment,s),i(Rs.$$.fragment,s),i(Os.$$.fragment,s),i(ts.$$.fragment,s),i(Ss.$$.fragment,s),i(qs.$$.fragment,s),i(cs.$$.fragment,s),i(Hs.$$.fragment,s),i(Is.$$.fragment,s),i(rs.$$.fragment,s),i(zs.$$.fragment,s),i(Ms.$$.fragment,s),i(ys.$$.fragment,s),i(Us.$$.fragment,s),i(Gs.$$.fragment,s),i(Ls.$$.fragment,s),i(Ds.$$.fragment,s),i(Vs.$$.fragment,s),i(Ks.$$.fragment,s),i(Ys.$$.fragment,s),i(Qs.$$.fragment,s),i(Fs.$$.fragment,s),i(Js.$$.fragment,s),i(Xs.$$.fragment,s),i(Zs.$$.fragment,s),i(is.$$.fragment,s),i(As.$$.fragment,s),i(nn.$$.fragment,s),i(us.$$.fragment,s),i(pn.$$.fragment,s),i(on.$$.fragment,s),i(en.$$.fragment,s),i($s.$$.fragment,s),i(tn.$$.fragment,s),i(cn.$$.fragment,s),i(rn.$$.fragment,s),Ha=!1},d(s){s&&n(p),s&&n(e),s&&n(b),s&&n(v),s&&n(P),A(T),s&&n(Xn),s&&n(z),A(X),s&&n(Zn),A(Z,s),s&&n(sa),s&&n(M),A(ss),s&&n(na),A(bs,s),s&&n(j),A(ns),A(ws),s&&n(aa),s&&n(k),A(Bs),A(Es),A(vs),A(as),s&&n(la),s&&n(W),A(ls),A(_s),s&&n(pa),s&&n($n),s&&n(oa),A(ks,s),s&&n(U),A(Ps),A(xs),s&&n(ea),A(Ns,s),s&&n(R),A(ps),A(Ts),s&&n(ta),s&&n(dn),s&&n(ca),A(js,s),s&&n(O),A(os),A(Ws),s&&n(ra),s&&n(G),A(es),s&&n(ya),A(Rs,s),A(Os,s),s&&n(S),A(ts),A(Ss),s&&n(Da),s&&n(mn),s&&n(Fa),A(qs,s),s&&n(q),A(cs),A(Hs),s&&n(Ca),s&&n(gn),s&&n(ia),A(Is,s),s&&n(H),A(rs),A(zs),s&&n(Aa),s&&n(hn),s&&n(fa),A(Ms,s),s&&n(L),A(ys),s&&n(ua),s&&n(x),A(Us),A(Gs),A(Ls),s&&n($a),s&&n(V),A(Ds),s&&n(da),s&&n(bn),s&&n(ma),s&&n(K),s&&n(ga),s&&n(I),A(Vs),A(Ks),s&&n(ha),s&&n(wn),s&&n(ba),A(Ys,s),s&&n(Bn),s&&n(wa),A(Qs,s),s&&n(Y),A(Fs),s&&n(Ba),s&&n(En),s&&n(Ea),s&&n(vn),A(Js),s&&n(va),s&&n(Cs),A(Xs),s&&n(_a),A(Zs,s),s&&n(Q),A(is),s&&n(ka),s&&n(sn),A(As),s&&n(Pa),s&&n(fs),A(nn),s&&n(xa),s&&n(an),A(us),s&&n(Na),s&&n(ln),A(pn),s&&n(Ta),s&&n(_n),s&&n(ja),s&&n(kn),A(on),s&&n(Wa),A(en,s),s&&n(J),A($s),s&&n(Ra),s&&n(Pn),s&&n(Oa),s&&n(xn),A(tn),s&&n(Sa),s&&n(ds),A(cn),s&&n(qa),A(rn,s)}}}class Zp extends up{constructor(p){super(),$p(this,p,null,Mp,dp,{})}}export{Zp as default};
