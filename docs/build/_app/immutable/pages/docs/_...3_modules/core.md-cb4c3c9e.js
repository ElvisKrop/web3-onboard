import{S as kF,i as xF,s as TF,e as A,t as e,k as m,w as c,c as f,a as d,h as t,d as n,m as u,x as D,b as w,g as r,M as l,y,q as F,o as i,B as C,E as lr}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as E}from"../../../chunks/CodeFence-7c02fe57.js";import{C as g}from"../../../chunks/CodeInline-7947d9bd.js";import{L as B}from"../../../chunks/Link-5aa5b43b.js";import{A as OF}from"../../../chunks/Admonition-d24cb020.js";/* empty css                                                            */import{T as _F,a as ar}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function SF(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function PF(b){let o,p;return o=new E({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/core
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/core</span></span>
<span class="line"></span></code></pre>`}}),{c(){c(o.$$.fragment)},l($){D(o.$$.fragment,$)},m($,v){y(o,$,v),p=!0},p:lr,i($){p||(F(o.$$.fragment,$),p=!0)},o($){i(o.$$.fragment,$),p=!1},d($){C(o,$)}}}function jF(b){let o,p;return o=new E({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/core
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/core</span></span>
<span class="line"></span></code></pre>`}}),{c(){c(o.$$.fragment)},l($){D(o.$$.fragment,$)},m($,v){y(o,$,v),p=!0},p:lr,i($){p||(F(o.$$.fragment,$),p=!0)},o($){i(o.$$.fragment,$),p=!1},d($){C(o,$)}}}function IF(b){let o,p,$,v;return o=new ar({props:{value:"yarn",$$slots:{default:[PF]},$$scope:{ctx:b}}}),$=new ar({props:{value:"npm",$$slots:{default:[jF]},$$scope:{ctx:b}}}),{c(){c(o.$$.fragment),p=m(),c($.$$.fragment)},l(h){D(o.$$.fragment,h),p=u(h),D($.$$.fragment,h)},m(h,_){y(o,h,_),r(h,p,_),y($,h,_),v=!0},p(h,_){const k={};_&1&&(k.$$scope={dirty:_,ctx:h}),o.$set(k);const P={};_&1&&(P.$$scope={dirty:_,ctx:h}),$.$set(P)},i(h){v||(F(o.$$.fragment,h),F($.$$.fragment,h),v=!0)},o(h){i(o.$$.fragment,h),i($.$$.fragment,h),v=!1},d(h){C(o,h),h&&n(p),C($,h)}}}function NF(b){let o,p;return o=new E({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent</span></span>
<span class="line"></span></code></pre>`}}),{c(){c(o.$$.fragment)},l($){D(o.$$.fragment,$)},m($,v){y(o,$,v),p=!0},p:lr,i($){p||(F(o.$$.fragment,$),p=!0)},o($){i(o.$$.fragment,$),p=!1},d($){C(o,$)}}}function RF(b){let o,p;return o=new E({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent</span></span>
<span class="line"></span></code></pre>`}}),{c(){c(o.$$.fragment)},l($){D(o.$$.fragment,$)},m($,v){y(o,$,v),p=!0},p:lr,i($){p||(F(o.$$.fragment,$),p=!0)},o($){i(o.$$.fragment,$),p=!1},d($){C(o,$)}}}function zF(b){let o,p,$,v;return o=new ar({props:{value:"yarn",$$slots:{default:[NF]},$$scope:{ctx:b}}}),$=new ar({props:{value:"npm",$$slots:{default:[RF]},$$scope:{ctx:b}}}),{c(){c(o.$$.fragment),p=m(),c($.$$.fragment)},l(h){D(o.$$.fragment,h),p=u(h),D($.$$.fragment,h)},m(h,_){y(o,h,_),r(h,p,_),y($,h,_),v=!0},p(h,_){const k={};_&1&&(k.$$scope={dirty:_,ctx:h}),o.$set(k);const P={};_&1&&(P.$$scope={dirty:_,ctx:h}),$.$set(P)},i(h){v||(F(o.$$.fragment,h),F($.$$.fragment,h),v=!0)},o(h){i(o.$$.fragment,h),i($.$$.fragment,h),v=!1},d(h){C(o,h),h&&n(p),C($,h)}}}function MF(b){let o;return{c(){o=e("Build Environments")},l(p){o=t(p,"Build Environments")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function LF(b){let o,p,$,v,h,_,k,P,J,Gs,os,ps,es,K,Ys,ts,rs,cs,Z,Vs,V;return k=new g({props:{code:"injected-wallets"}}),J=new B({props:{href:"#build-environments",$$slots:{default:[MF]},$$scope:{ctx:b}}}),{c(){o=A("ul"),p=A("li"),$=e("MEW wallet currently fails to install on M1 macs"),v=m(),h=A("li"),_=e("All wallet modules (except for "),c(k.$$.fragment),P=e(") require extra dependencies and may require polyfilling the node built in modules for the browser. See the "),c(J.$$.fragment),Gs=e(" section for more info"),os=m(),ps=A("li"),es=A("strong"),K=e("If using React"),Ys=e(" you may be interested in checking out the React Hooks package here - https://www.npmjs.com/package/@web3-onboard/react"),ts=m(),rs=A("li"),cs=A("strong"),Z=e("If using Vue"),Vs=e(" you may be interested in checking out the Vue package here - https://www.npmjs.com/package/@web3-onboard/vue")},l(j){o=f(j,"UL",{});var x=d(o);p=f(x,"LI",{});var U=d(p);$=t(U,"MEW wallet currently fails to install on M1 macs"),U.forEach(n),v=u(x),h=f(x,"LI",{});var Ds=d(h);_=t(Ds,"All wallet modules (except for "),D(k.$$.fragment,Ds),P=t(Ds,") require extra dependencies and may require polyfilling the node built in modules for the browser. See the "),D(J.$$.fragment,Ds),Gs=t(Ds," section for more info"),Ds.forEach(n),os=u(x),ps=f(x,"LI",{});var Xs=d(ps);es=f(Xs,"STRONG",{});var fs=d(es);K=t(fs,"If using React"),fs.forEach(n),Ys=t(Xs," you may be interested in checking out the React Hooks package here - https://www.npmjs.com/package/@web3-onboard/react"),Xs.forEach(n),ts=u(x),rs=f(x,"LI",{});var Vn=d(rs);cs=f(Vn,"STRONG",{});var Xn=d(cs);Z=t(Xn,"If using Vue"),Xn.forEach(n),Vs=t(Vn," you may be interested in checking out the Vue package here - https://www.npmjs.com/package/@web3-onboard/vue"),Vn.forEach(n),x.forEach(n)},m(j,x){r(j,o,x),l(o,p),l(p,$),l(o,v),l(o,h),l(h,_),y(k,h,null),l(h,P),y(J,h,null),l(h,Gs),l(o,os),l(o,ps),l(ps,es),l(es,K),l(ps,Ys),l(o,ts),l(o,rs),l(rs,cs),l(cs,Z),l(rs,Vs),V=!0},p(j,x){const U={};x&1&&(U.$$scope={dirty:x,ctx:j}),J.$set(U)},i(j){V||(F(k.$$.fragment,j),F(J.$$.fragment,j),V=!0)},o(j){i(k.$$.fragment,j),i(J.$$.fragment,j),V=!1},d(j){j&&n(o),C(k),C(J)}}}function WF(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function UF(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function HF(b){let o;return{c(){o=e("default en file")},l(p){o=t(p,"default en file")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function qF(b){let o;return{c(){o=e("ICU syntax")},l(p){o=t(p,"ICU syntax")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function GF(b){let o;return{c(){o=e("here")},l(p){o=t(p,"here")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function YF(b){let o;return{c(){o=e("default en file here")},l(p){o=t(p,"default en file here")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function VF(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function XF(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function JF(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function KF(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function ZF(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function QF(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function si(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function ni(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function ai(b){let o;return{c(){o=e("RXJS Observable")},l(p){o=t(p,"RXJS Observable")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function li(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function oi(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function pi(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function ei(b){let o;return{c(){o=e("CSS variables")},l(p){o=t(p,"CSS variables")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function ti(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function ri(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function ci(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function Di(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function yi(b){let o;return{c(){o=e("CRACO")},l(p){o=t(p,"CRACO")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function Fi(b){let o;return{c(){o=e("React App Rewired")},l(p){o=t(p,"React App Rewired")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function ii(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function Ci(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function Ai(b){let o;return{c(){o=e("#")},l(p){o=t(p,"#")},m(p,$){r(p,o,$)},d(p){p&&n(o)}}}function fi(b){let o,p,$,v,h,_,k,P,J,Gs,os,ps,es,K,Ys,ts,rs,cs,Z,Vs,V,j,x,U,Ds,Xs,fs,Vn,Xn,Jn,ds,Js,or,me,Kn,_p,Zn,pr,ue,Qn,kp,sa,er,ge,na,aa,xp,la,tr,be,oa,$s,Tp,pa,rr,ea,cr,he,ta,ys,Dr,Ks,yr,Zs,Fr,we,ra,Op,ca,ir,Ee,Da,ya,Sp,Fa,Cr,Be,Qs,Pp,Ar,fr,sn,ve,ia,L,jp,Ca,dr,Aa,$r,fa,mr,da,ur,$a,gr,_e,R,Uo,ma,br,hr,ua,ga,wr,nn,Er,an,ba,Br,ha,vr,_r,ln,wa,kr,Ea,xr,Tr,Ho,Ba,Or,Sr,qo,va,Pr,ke,Fs,jr,_a,Ir,ka,Nr,xe,Go,Rr,Te,xa,Ta,ms,on,zr,Oe,Yo,Mr,Se,Oa,us,pn,Lr,Pe,z,Wr,Sa,Ur,Pa,Hr,ja,qr,Ia,Gr,Na,Yr,je,gs,en,Vr,Ie,Ra,bs,tn,Xr,Ne,rn,Jr,za,Kr,Re,Ma,Vo,Zr,ze,La,hs,cn,Qr,Me,Dn,sc,Wa,nc,Le,Ua,H,ac,Ha,lc,qa,oc,Ga,pc,Ya,ec,We,ws,yn,tc,Ue,Xo,rc,He,Q,Jo,Va,cc,Dc,Ko,Xa,yc,Fc,Zo,Ja,ic,Cc,Qo,Ka,Ac,qe,Za,Es,Fn,fc,Ge,Cn,dc,Qa,$c,Ye,sl,Bs,An,mc,Ve,ss,uc,nl,gc,al,bc,fn,hc,Xe,dn,wc,ll,Ec,Je,ol,$n,Bc,pl,vc,Ke,el,vs,mn,_c,Ze,sp,kc,Qe,_s,Ip,tl,xc,rl,Tc,st,cl,ks,Np,Dl,Oc,yl,Sc,nt,Fl,xs,Rp,il,Pc,Cl,jc,at,Al,Ts,zp,fl,Ic,dl,Nc,lt,$l,T,Mp,ml,Rc,ul,zc,gl,Mc,bl,Lc,hl,Wc,wl,Uc,El,Hc,Bl,qc,vl,Gc,ot,_l,N,Lp,kl,Yc,xl,Vc,Tl,Xc,Ol,Jc,Sl,Kc,Pl,Zc,pt,np,Qc,et,I,ap,jl,sD,nD,lp,Il,aD,lD,un,Nl,oD,Rl,pD,eD,q,zl,tD,Ml,rD,Ll,cD,Wl,DD,Ul,yD,FD,gn,Hl,iD,ql,CD,AD,bn,Gl,fD,Yl,dD,$D,hn,Vl,mD,Xl,uD,tt,Jl,Kl,Os,Wp,Zl,gD,Ql,bD,rt,so,Ss,Up,no,hD,ao,wD,ct,lo,Ps,wn,ED,Dt,En,BD,oo,vD,yt,po,O,_D,eo,kD,to,xD,ro,TD,co,OD,Do,SD,yo,PD,Fo,jD,Ft,js,Bn,ID,it,is,ND,vn,RD,io,zD,Ct,Co,Is,_n,MD,At,ns,LD,Ao,WD,fo,UD,$o,HD,ft,Ns,kn,qD,dt,op,GD,$t,Rs,Hp,YD,VD,qp,XD,JD,mt,Cs,mo,KD,Gp,ZD,QD,uo,ut,pp,Yp,sy,gt,go,ep,Vp,ny,bt,bo,zs,xn,ay,ht,tp,ly,wt,rp,ho,Et,Tn,oy,wo,py,Bt,Eo,Ms,On,ey,vt,Bo,Sn,ty,_t,Pn,ry,vo,cy,kt,_o,jn,Dy,xt,ko,yy,xo,Tt,cp,Xp,Fy,Ot,Dp,To,St,Oo,Ls,In,iy,Pt,yp,Cy,jt,Fp,So,It,Nn,Ay,Po,fy,Nt,jo,Ws,Rn,dy,Rt,ip,$y,zt,Cp,Io,Mt,zn,my,No,uy,Lt,Ro,Us,Mn,gy,Wt,Ln,by,zo,hy,Ut,Mo,Ht;return P=new B({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[SF]},$$scope:{ctx:b}}}),K=new _F({props:{values:["yarn","npm"],$$slots:{default:[IF]},$$scope:{ctx:b}}}),Z=new _F({props:{values:["yarn","npm"],$$slots:{default:[zF]},$$scope:{ctx:b}}}),V=new OF({props:{type:"note",$$slots:{default:[LF]},$$scope:{ctx:b}}}),U=new B({props:{class:"header-anchor",href:"#initialization","aria-hidden":"true",$$slots:{default:[WF]},$$scope:{ctx:b}}}),Jn=new E({props:{lang:"typescript",ext:"ts",linesCount:15,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">InitOptions</span><span style="color: #A6ACCD"> {</span></span>
<span class="line"><span style="color: #A6ACCD">  wallets: WalletInit[]</span></span>
<span class="line"><span style="color: #A6ACCD">  chains: Chain[]</span></span>
<span class="line"><span style="color: #A6ACCD">  appMetadata?: AppMetadata</span></span>
<span class="line"><span style="color: #A6ACCD">  i18n?: i18nOptions</span></span>
<span class="line"><span style="color: #A6ACCD">  accountCenter?: AccountCenterOptions</span></span>
<span class="line"><span style="color: #A6ACCD">  apiKey?: string</span></span>
<span class="line"><span style="color: #A6ACCD">  notify?: Partial</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">NotifyOptions</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  gas?: typeof gas</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/**</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Object mapping for W3O components with the key being the component and the value the DOM element to mount the component to. This element must be available at time of package script execution.</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   */</span></span>
<span class="line"><span style="color: #A6ACCD">  containerElements?: Partial</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">ContainerElements</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"></span></code></pre>`}}),Js=new B({props:{class:"header-anchor",href:"#options","aria-hidden":"true",$$slots:{default:[UF]},$$scope:{ctx:b}}}),Zn=new g({props:{code:"wallets"}}),sa=new g({props:{code:"chains"}}),na=new E({props:{lang:"typescript",ext:"ts",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Chain</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ChainId</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// hex encoded string, eg &#39;0x1&#39; for Ethereum Mainnet</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">namespace</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">evm</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// string indicating chain namespace. Defaults to &#39;evm&#39; but will allow other chain namespaces in the future</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// used for network requests</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// used for display, eg Ethereum Mainnet</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TokenSymbol</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the native token symbol, eg ETH, BNB, MATIC</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">color</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the color used to represent the chain and will be used as a background for the icon</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the icon to represent the chain</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">publicRpcUrl</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// an optional public RPC used when adding a new chain config to the wallet</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">blockExplorerUrl</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// also used when adding a new config to the wallet</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),la=new g({props:{code:"appMetadata"}}),oa=new E({props:{lang:"typescript",ext:"ts",linesCount:23,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AppMetadata</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// app name</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// SVG icon string, with height or width (whichever is larger) set to 100% or a valid image URL</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// note: if using an emoji make sure to send base64 string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Optional wide format logo (ie icon and text) to be displayed in the sidebar of connect modal. Defaults to icon if not provided</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">logo</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// description of app</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">description</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// url to a getting started guide for app</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">gettingStartedGuide</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// url that points to more information about app</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">explore</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// if your app only supports injected wallets and when no injected wallets detected, recommend the user to install some</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">recommendedInjectedWallets</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RecommendedInjectedWallets</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RecommendedInjectedWallets</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// display name</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// link to download wallet</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),pa=new g({props:{code:"i18n"}}),ea=new g({props:{code:"en"}}),ta=new E({props:{lang:"typescript",ext:"ts",linesCount:3,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Locale</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// eg &#39;en&#39;, &#39;es&#39;</span></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">i18nOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Record</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Locale</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">i18n</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Ks=new B({props:{href:"https://github.com/blocknative/web3-onboard/blob/v2-web3-onboard-develop/packages/core/src/i18n/en.json",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[HF]},$$scope:{ctx:b}}}),Zs=new B({props:{href:"https://formatjs.io/docs/core-concepts/icu-syntax/",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[qF]},$$scope:{ctx:b}}}),ca=new g({props:{code:"accountCenter"}}),Da=new E({props:{lang:"typescript",ext:"ts",linesCount:20,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default: &#39;topRight&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">expanded</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default: true</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// enabled by default for mobile</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/**</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">deprecated</span><span style="color: #464B5D; font-style: italic"> Use top level containerElements property</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * with the accountCenter prop set to the desired container El. See documentation below</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   */</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">containerElement</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// defines the DOM container element for svelte to attach</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">expanded</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">expanded</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span></code></pre>`}}),Fa=new g({props:{code:"containerElements"}}),sn=new B({props:{href:"https://github.com/blocknative/web3-onboard/blob/8531a73d69365f7d584320f1c4b97a5d90f1c34e/packages/demo/src/App.svelte#L227",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[GF]},$$scope:{ctx:b}}}),ia=new E({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ContainerElements</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// when using the accountCenter with a container el the accountCenter position properties are ignored</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">accountCenter</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),Ca=new g({props:{code:"notify"}}),Aa=new g({props:{code:"enabled"}}),fa=new g({props:{code:"transactionHandler"}}),da=new g({props:{code:"transactionHandler"}}),$a=new g({props:{code:"Notification"}}),ma=new g({props:{code:"Notification.message"}}),ga=new g({props:{code:"Notification.eventCode"}}),nn=new B({props:{href:"https://github.com/blocknative/web3-onboard/blob/v2-web3-onboard-develop/packages/core/src/i18n/en.json",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[YF]},$$scope:{ctx:b}}}),ba=new g({props:{code:"Notification.type"}}),ha=new g({props:{code:"NotificationType"}}),wa=new g({props:{code:"Notification.autoDismiss"}}),Ea=new g({props:{code:"0"}}),Ba=new g({props:{code:"Notification.link"}}),va=new g({props:{code:"Notification.onClick()"}}),_a=new g({props:{code:"--onboard-grey-600"}}),ka=new g({props:{code:"--notify-onboard-grey-600"}}),xa=new E({props:{lang:"javascript",ext:"js",linesCount:8,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">notifications</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> unsubscribe </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> wallets</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">update</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">transaction notifications: </span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> update)</span></span>
<span class="line"><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// unsubscribe when updates are no longer needed</span></span>
<span class="line"><span style="color: #82AAFF">unsubscribe</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span></code></pre>`}}),Ta=new E({props:{lang:"typescript",ext:"ts",linesCount:58,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotifyOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default: true</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/**</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Callback that receives all transaction events</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Return a custom notification based on the event</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Or return false to disable notification for this event</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Or return undefined for a default notification</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   */</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">transactionHandler</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">event</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">EthereumTransactionData</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TransactionHandlerReturn</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CommonPositions</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CommonPositions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TransactionHandlerReturn</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Partial</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Notification</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">id</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">startTime</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">key</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotificationType</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">network</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Network</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">startTime</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">eventCode</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">autoDismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">link</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">onClick</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">event</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Event</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotificationType</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">pending</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">error</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">hint</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">declare</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Network</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">main</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">testnet</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ropsten</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rinkeby</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">goerli</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">kovan</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xdai</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bsc-main</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">matic-main</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">fantom-main</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">matic-mumbai</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">local</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UpdateNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">notificationObject</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #89DDFF">):</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">dismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">update</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UpdateNotification</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),on=new B({props:{class:"header-anchor",href:"#initialization-example","aria-hidden":"true",$$slots:{default:[VF]},$$scope:{ctx:b}}}),Oa=new E({props:{lang:"typescript",ext:"ts",linesCount:121,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">\`</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/</span><span style="color: #89DDFF">\${</span><span style="color: #A6ACCD">INFURA_ID</span><span style="color: #89DDFF">}\`</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x5</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Goerli</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">\`</span><span style="color: #C3E88D">https://goerli.infura.io/v3/</span><span style="color: #89DDFF">\${</span><span style="color: #A6ACCD">INFURA_ID</span><span style="color: #89DDFF">}\`</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x38</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">BNB</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Binance Smart Chain</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://bsc-dataseed.binance.org/</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x89</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MATIC</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Matic Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://matic-mainnet.chainstacklabs.com</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">OETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Optimism</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.optimism.io</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">42161</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ARB-ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Arbitrum</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://rpc.ankr.com/arbitrum</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">appMetadata</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Token Swap</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> myIcon</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// svg string icon</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">logo</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> myLogo</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// svg string logo</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Swap tokens for other tokens</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">recommendedInjectedWallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://metamask.io</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Coinbase</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://wallet.coinbase.com/</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    ]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xxx387fb-bxx1-4xxc-a0x3-9d37e426xxxx</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  notify: </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> transaction </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">eventCode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">txPool</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            type</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            message</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Your transaction from #1 DApp is in the mempool</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> transaction </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">eventCode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">txPool</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            type</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            message</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Your transaction from #1 DApp is in the mempool</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">accountCenter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">i18n</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">en</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">connect</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">selectingWallet</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">header</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">custom text header</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">notify</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">transaction</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">txStuck</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">custom text for this notification event</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">watched</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">          </span><span style="color: #464B5D; font-style: italic">// Any words in brackets can be re-ordered or removed to fit your dapps desired verbiage</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&quot;</span><span style="color: #F07178">txPool</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Your account is {verb} {formattedValue} {asset} {preposition} {counterpartyShortened}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">es</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">transaction</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">txRequest</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Su transacci\xF3n est\xE1 esperando que confirme</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),pn=new B({props:{class:"header-anchor",href:"#connecting-a-wallet","aria-hidden":"true",$$slots:{default:[XF]},$$scope:{ctx:b}}}),Sa=new g({props:{code:"connectWallet"}}),Pa=new g({props:{code:"Promise"}}),ja=new g({props:{code:"wallets"}}),Ia=new g({props:{code:"wallets"}}),Na=new g({props:{code:"connectWallet"}}),en=new B({props:{class:"header-anchor",href:"#example","aria-hidden":"true",$$slots:{default:[JF]},$$scope:{ctx:b}}}),Ra=new E({props:{lang:"javascript",ext:"js",linesCount:7,code:`<pre><code><span class="line"><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">connectWallet</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallets</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">wallets</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span></code></pre>`}}),tn=new B({props:{class:"header-anchor",href:"#auto-selecting-a-wallet","aria-hidden":"true",$$slots:{default:[KF]},$$scope:{ctx:b}}}),za=new g({props:{code:"wallets"}}),Ma=new E({props:{lang:"javascript",ext:"js",linesCount:9,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> walletsSub </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">wallets</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> unsubscribe </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> walletsSub</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">wallets</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectedWallets</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallets</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">map</span><span style="color: #F07178">(</span><span style="color: #89DDFF">({</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">label</span><span style="color: #F07178"> </span><span style="color: #89DDFF">})</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">label</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">localStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setItem</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">connectedWallets</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">JSON</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">stringify</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">connectedWallets</span><span style="color: #F07178">))</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// Don&#39;t forget to unsubscribe when your app or component un mounts to prevent memory leaks</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// unsubscribe()</span></span>
<span class="line"></span></code></pre>`}}),La=new E({props:{lang:"javascript",ext:"js",linesCount:18,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> previouslyConnectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> JSON</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">parse</span><span style="color: #A6ACCD">(window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">localStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getItem</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">connectedWallets</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> (previouslyConnectedWallets) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Connect the most recently connected wallet (first in the array)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> autoSelect</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">previouslyConnectedWallets</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">] </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// You can also auto connect &quot;silently&quot; and disable all onboard modals to avoid them flashing on page load</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    autoSelect</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> label</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">previouslyConnectedWallets</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> disableModals</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// OR - loop through and initiate connection for all previously connected wallets</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// note: This UX might not be great as the user may need to login to each wallet one after the other</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// for (walletLabel in previouslyConnectedWallets) {</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//   await onboard.connectWallet({ autoSelect: walletLabel })</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// }</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),cn=new B({props:{class:"header-anchor",href:"#disconnecting-a-wallet","aria-hidden":"true",$$slots:{default:[ZF]},$$scope:{ctx:b}}}),Wa=new g({props:{code:"wallets"}}),Ua=new E({props:{lang:"javascript",ext:"js",linesCount:4,code:`<pre><code><span class="line"><span style="color: #464B5D; font-style: italic">// disconnect the first wallet in the wallets array</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">primaryWallet</span><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">wallets</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">disconnectWallet</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> primaryWallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">label </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),Ha=new g({props:{code:"disconnectWallet"}}),qa=new g({props:{code:"wallet.label"}}),Ga=new g({props:{code:"Promise"}}),Ya=new g({props:{code:"wallets"}}),yn=new B({props:{class:"header-anchor",href:"#state","aria-hidden":"true",$$slots:{default:[QF]},$$scope:{ctx:b}}}),Va=new g({props:{code:"wallets"}}),Xa=new g({props:{code:"chains"}}),Ja=new g({props:{code:"accountCenter"}}),Ka=new g({props:{code:"walletModules"}}),Za=new E({props:{lang:"typescript",ext:"ts",linesCount:67,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AppState</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletState</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Chain</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">accountCenter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenter</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">walletModules</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletModule</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">locale</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Locale</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">notify</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">notifications</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notification</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Chain</span><span style="color: #A6ACCD"> {</span></span>
<span class="line"><span style="color: #A6ACCD">  namespace</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">evm</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> ChainId</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> TokenSymbol</span></span>
<span class="line"><span style="color: #A6ACCD">  color</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> string</span></span>
<span class="line"><span style="color: #A6ACCD">  icon</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> string</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletState</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">provider</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">EIP1193Provider</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">accounts</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Account</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ConnectedChain</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">instance</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">unknown</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Account</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">address</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">ens</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">avatar</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">contentHash</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">getText</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">undefined</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">balance</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Record</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">TokenSymbol</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ConnectedChain</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">namespace</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">evm</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ChainId</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ChainId</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TokenSymbol</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">expanded</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomRight</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletModule</span><span style="color: #A6ACCD"> {</span></span>
<span class="line"><span style="color: #A6ACCD">  label: string</span></span>
<span class="line"><span style="color: #A6ACCD">  getIcon: () </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD">&gt; </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">getInterface</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">helpers</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">GetInterfaceHelpers</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">WalletInterface</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"></span></code></pre>`}}),Fn=new B({props:{class:"header-anchor",href:"#get-current-state","aria-hidden":"true",$$slots:{default:[si]},$$scope:{ctx:b}}}),Qa=new g({props:{code:"state.get()"}}),sl=new E({props:{lang:"javascript",ext:"js",linesCount:2,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> currentState </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span></code></pre>`}}),An=new B({props:{class:"header-anchor",href:"#subscribe-to-state-updates","aria-hidden":"true",$$slots:{default:[ni]},$$scope:{ctx:b}}}),nl=new g({props:{code:"state.select()"}}),al=new g({props:{code:"select"}}),fn=new B({props:{href:"https://rxjs.dev/guide/observable",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ai]},$$scope:{ctx:b}}}),ll=new g({props:{code:"select"}}),ol=new E({props:{lang:"javascript",ext:"js",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> state </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> unsubscribe </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">update</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">state update: </span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> update))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// remember to unsubscribe when updates are no longer needed</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// unsubscribe()</span></span>
<span class="line"></span></code></pre>`}}),pl=new g({props:{code:"wallets"}}),el=new E({props:{lang:"javascript",ext:"js",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">wallets</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> unsubscribe </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> wallets</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">update</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">wallets update: </span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> update))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// unsubscribe when updates are no longer needed</span></span>
<span class="line"><span style="color: #82AAFF">unsubscribe</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span></code></pre>`}}),mn=new B({props:{class:"header-anchor",href:"#actions-to-modify-state","aria-hidden":"true",$$slots:{default:[li]},$$scope:{ctx:b}}}),tl=new g({props:{code:"setWalletModules"}}),rl=new g({props:{code:"setWalletModules"}}),cl=new E({props:{lang:"typescript",ext:"ts",linesCount:31,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> ledgerModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/ledger</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> trezorModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/trezor</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> ledger </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">ledgerModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> trezor </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">trezorModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">email</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;EMAIL_CONTACT&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">appUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;APP_URL&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// initialize with injected and hardware wallets</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> trezor</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> ledger]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">      </span><span style="color: #464B5D; font-style: italic">// Only one RPC required</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">\`</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/</span><span style="color: #89DDFF">\${</span><span style="color: #A6ACCD">INFURA_KEY</span><span style="color: #89DDFF">}\`</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">||</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">\`</span><span style="color: #C3E88D">https://eth-mainnet.g.alchemy.com/v2/</span><span style="color: #89DDFF">\${</span><span style="color: #A6ACCD">ALCHEMY_KEY</span><span style="color: #89DDFF">}\`</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// then after a user action, you may decide to only display hardware wallets on the next call to onboard.connectWallet</span></span>
<span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setWalletModules</span><span style="color: #A6ACCD">([ledger</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> trezor])</span></span>
<span class="line"></span></code></pre>`}}),Dl=new g({props:{code:"updateBalances"}}),yl=new g({props:{code:"updatedBalances"}}),Fl=new E({props:{lang:"javascript",ext:"js",linesCount:4,code:`<pre><code><span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">updateBalances</span><span style="color: #A6ACCD">() </span><span style="color: #464B5D; font-style: italic">// update all balances for all connected addresses</span></span>
<span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">updateBalances</span><span style="color: #A6ACCD">([</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0xfdadfadsadsadsadasdsa</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]) </span><span style="color: #464B5D; font-style: italic">// update balance for one address</span></span>
<span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">updateBalances</span><span style="color: #A6ACCD">([</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0xfdadfadsadsadsadasdsa</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0xfdsafdsfdsfdsfds</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]) </span><span style="color: #464B5D; font-style: italic">// update balance for two addresses</span></span>
<span class="line"></span></code></pre>`}}),il=new g({props:{code:"setLocale"}}),Cl=new g({props:{code:"setLocale"}}),Al=new E({props:{lang:"javascript",ext:"js",linesCount:2,code:`<pre><code><span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setLocal</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">fr_FR</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),fl=new g({props:{code:"updateNotify"}}),dl=new g({props:{code:"updateNotify"}}),$l=new E({props:{lang:"javascript",ext:"js",linesCount:29,code:`<pre><code><span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">updateNotify</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">eventCode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">txPool</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">          type</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">          message</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Your transaction from #1 DApp is in the mempool</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">eventCode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">txPool</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">          type</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">          message</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Your transaction from #1 DApp is in the mempool</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),ml=new g({props:{code:"customNotification"}}),ul=new g({props:{code:"CustomNotification"}}),gl=new g({props:{code:"customNotification"}}),bl=new g({props:{code:"UpdateNotification"}}),hl=new g({props:{code:"UpdateNotification"}}),wl=new g({props:{code:"update"}}),El=new g({props:{code:"CustomNotification"}}),Bl=new g({props:{code:"customNotification"}}),vl=new g({props:{code:"dismiss"}}),_l=new E({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> update</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> dismiss </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">customNotification</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">pending</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">This is a custom DApp pending notification to use however you want</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">autoDismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">update</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">eventCode</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">dbUpdateSuccess</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Updated status for custom notification</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">autoDismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">8000</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F78C6C">4000</span></span>
<span class="line"><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),kl=new g({props:{code:"preflightNotifications"}}),xl=new g({props:{code:"PreflightNotificationsOptions"}}),Tl=new g({props:{code:"preflightNotifications"}}),Ol=new g({props:{code:"sendTransaction"}}),Sl=new g({props:{code:"sendTransaction"}}),Pl=new g({props:{code:"sendTransaction"}}),jl=new g({props:{code:"txRequest"}}),Il=new g({props:{code:"txAwaitingApproval"}}),Nl=new g({props:{code:"txConfirmReminder"}}),Rl=new g({props:{code:"txApproveReminderTimeout"}}),zl=new g({props:{code:"nsfFail"}}),Ml=new g({props:{code:"gasPrice"}}),Ll=new g({props:{code:"estimateGas"}}),Wl=new g({props:{code:"balance"}}),Ul=new g({props:{code:"txDetails.value"}}),Hl=new g({props:{code:"txError"}}),ql=new g({props:{code:"sendTransaction"}}),Gl=new g({props:{code:"txSendFail"}}),Yl=new g({props:{code:"sendTransaction"}}),Vl=new g({props:{code:"txUnderpriced"}}),Xl=new g({props:{code:"sendTransaction"}}),Jl=new E({props:{lang:"typescript",ext:"ts",linesCount:13,code:`<pre><code><span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">PreflightNotificationsOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">sendTransaction</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">estimateGas</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">gasPrice</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">balance</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">txDetails</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">value</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">to</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">from</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">txApproveReminderTimeout</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// defaults to 15 seconds if not specified</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),Kl=new E({props:{lang:"typescript",ext:"ts",linesCount:27,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> balanceValue </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">values</span><span style="color: #A6ACCD">(balance)[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> ethersProvider </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> ethers</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">providers</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Web3Provider</span><span style="color: #A6ACCD">(provider</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">any</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> signer </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> ethersProvider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getSigner</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> txDetails </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">to</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> toAddress</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">value</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">100000000000000</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> sendTransaction </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">signer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sendTransaction</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">txDetails</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">tx</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">tx</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">hash</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> gasPrice </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> ethersProvider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getGasPrice</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #A6ACCD">())</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> estimateGas </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">estimateGas</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">txDetails</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #F07178">())</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> transactionHash </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">preflightNotifications</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  sendTransaction</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  gasPrice</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  estimateGas</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">balance</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> balanceValue</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">txDetails</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> txDetails</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(transactionHash)</span></span>
<span class="line"></span></code></pre>`}}),Zl=new g({props:{code:"updateAccountCenter"}}),Ql=new g({props:{code:"updateAccountCenter"}}),so=new E({props:{lang:"typescript",ext:"ts",linesCount:6,code:`<pre><code><span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">updateAccountCenter</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),no=new g({props:{code:"setPrimaryWallet"}}),ao=new g({props:{code:"setPrimaryWallet"}}),lo=new E({props:{lang:"typescript",ext:"ts",linesCount:7,code:`<pre><code><span class="line"><span style="color: #464B5D; font-style: italic">// set the second wallet in the wallets array as the primary</span></span>
<span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setPrimaryWallet</span><span style="color: #A6ACCD">(wallets[</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// set the second wallet in the wallets array as the primary wallet</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// as well as setting the third account in that wallet as the primary account</span></span>
<span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setPrimaryWallet</span><span style="color: #A6ACCD">(wallets[</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> wallets[</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">accounts[</span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">address)</span></span>
<span class="line"></span></code></pre>`}}),wn=new B({props:{class:"header-anchor",href:"#setting-the-user-s-chain-network","aria-hidden":"true",$$slots:{default:[oi]},$$scope:{ctx:b}}}),oo=new g({props:{code:"setChain"}}),po=new E({props:{lang:"typescript",ext:"ts",linesCount:9,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">SetChain</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">options</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">SetChainOptions</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">boolean</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">SetChainOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chainId</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// hex encoded string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chainNamespace</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">evm</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// defaults to &#39;evm&#39; (currently the only valid value, but will add more in future updates)</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallet</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the wallet.label of the wallet to set chain</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> success </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setChain</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">chainId</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x89</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),eo=new g({props:{code:"setChain"}}),to=new g({props:{code:"chainId"}}),ro=new g({props:{code:"setChain"}}),co=new g({props:{code:"setChain"}}),Do=new g({props:{code:"wallets"}}),yo=new g({props:{code:"wallet.label"}}),Fo=new g({props:{code:"wallet"}}),Bn=new B({props:{class:"header-anchor",href:"#custom-styling","aria-hidden":"true",$$slots:{default:[pi]},$$scope:{ctx:b}}}),vn=new B({props:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ei]},$$scope:{ctx:b}}}),io=new g({props:{code:":root"}}),Co=new E({props:{lang:"css",ext:"css",linesCount:199,code:`<pre><code><span class="line"><span style="color: #89DDFF">:</span><span style="color: #C792EA">root</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE THE COLOR  PALLETTE */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-white</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> white</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-black</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> black</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-primary-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">2f80ed</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-primary-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">eff1fc</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-primary-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">d0d4f7</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-primary-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">b1b8f2</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-primary-400</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">929bed</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-primary-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">6370e5</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-primary-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">454ea0</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-primary-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">323873</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-gray-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ebebed</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-gray-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">c2c4c9</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-gray-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">999ca5</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-gray-400</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">707481</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-gray-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">33394b</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-gray-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">242835</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-gray-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">1a1d26</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-success-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">d1fae3</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-success-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">baf7d5</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-success-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">a4f4c6</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-success-400</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">8df2b8</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-success-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">5aec99</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-success-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">18ce66</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-success-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">129b4d</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-danger-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffe5e6</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-danger-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffcccc</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-danger-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffb3b3</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-danger-400</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ff8080</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-danger-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ff4f4f</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-danger-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">cc0000</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-danger-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">660000</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-warning-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffefcc</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-warning-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffe7b3</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-warning-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffd780</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-warning-400</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffc74c</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-warning-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffaf00</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-warning-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">cc8c00</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-warning-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">664600</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE ACCOUNT CENTER*/</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-z-index</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-position-top</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-position-bottom</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-position-right</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-position-left</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-minimized-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-upper-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-network-section</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-app-info-section</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-minimized-address-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-address-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-account-section-background-hover</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-action-background-hover</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-minimized-chain-select-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-network-selector-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-network-selector-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-minimized-network-selector-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-app-btn-text-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-app-btn-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-center-app-btn-font-family</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE SECTIONS OF THE CONNECT MODAL */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-connect-content-width</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-connect-content-height</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-columns</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-connect-sidebar-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-connect-sidebar-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-connect-sidebar-progress-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-connect-sidebar-progress-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-connect-header-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-connect-header-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-main-scroll-container-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-link-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-close-button-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-close-button-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-checkbox-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-checkbox-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-background-hover</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-border-color</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-border-radius</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-box-shadow</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-app-icon-border-color</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE THE SHARED MODAL */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-modal-background</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-modal-color</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE THE CONNECT MODAL */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-modal-border-radius</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-modal-backdrop</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-modal-box-shadow</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE THE ACTION REQUIRED MODAL */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-action-required-modal-background</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* FONTS */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-font-family-normal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-font-family-semibold</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro Semibold</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-font-family-light</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro Light</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2.25rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-3</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1.5rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-4</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1.25rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-6</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.875rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-7</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.75rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* SPACING */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-spacing-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-spacing-2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-spacing-3</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1.5rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-spacing-4</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-spacing-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.5rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* BORDER RADIUS */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-border-radius-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">24px</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-border-radius-2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">20px</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-border-radius-3</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">16px</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* SHADOWS */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-shadow-0</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> none</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-shadow-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0px</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">4px</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">12px</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">rgba</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-shadow-2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> inset </span><span style="color: #F78C6C">0px</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">-1px</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0px</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">rgba</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* MAIN MODAL POSITIONING */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-modal-z-index</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-modal-top</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-modal-bottom</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-modal-right</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-modal-left</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* HD WALLET ACCOUNT SELECT MODAL POSITIONING */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-account-select-modal-z-index</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-account-select-modal-top</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-account-select-modal-bottom</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-account-select-modal-right</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-account-select-modal-left</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* MAGIC WALLET MODAL POSITIONING */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-z-index</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-top</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-bottom</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-right</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-left</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* HARDWARE WALLET STYLES  */</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* *if not set will fallback to variables with \`--onboard\` prefix shown above */</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* COLORS */</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-white</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> white</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-black</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> black</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-primary-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">eff1fc</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-primary-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">d0d4f7</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-primary-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">b1b8f2</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-primary-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">6370e5</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-primary-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">454ea0</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-gray-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ebebed</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-gray-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">c2c4c9</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-gray-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">999ca5</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-gray-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">33394b</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-gray-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">1a1d26</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-danger-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ff4f4f</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* FONTS */</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-font-family-normal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-font-family-light</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro Light</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-font-size-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-font-size-7</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">.75rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-font-line-height-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">24px</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* SPACING */</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-margin-4</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --account-select-modal-margin-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.5rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* NOTIFY STYLES */</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* Notify Positioning variables only take effect if Notify is Positioned separate of Account Center */</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-container-position-top</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-container-position-bottom</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-container-position-right</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-container-position-left</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-font-family-normal</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-font-size-5</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-gray-300</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-gray-600</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-border-radius</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-font-size-7</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-font-size-6</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-line-height-4</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-primary-100</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-primary-400</span></span>
<span class="line"><span style="color: #A6ACCD">  --notify-onboard-main-padding</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),_n=new B({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[ti]},$$scope:{ctx:b}}}),Ao=new g({props:{code:"crypto"}}),fo=new g({props:{code:"buffer"}}),$o=new g({props:{code:"util"}}),kn=new B({props:{class:"header-anchor",href:"#webpack-4","aria-hidden":"true",$$slots:{default:[ri]},$$scope:{ctx:b}}}),mo=new g({props:{code:"npm i --save-dev @babel/cli @babel/core @babel/node @babel/plugin-proposal-nullish-coalescing-operator @babel/plugin-proposal-optional-chaining @babel/plugin-syntax-bigint @babel/register"}}),uo=new g({props:{code:"npm i babel-loader"}}),go=new E({props:{lang:"javascript",ext:"js",linesCount:10,code:`<pre><code><span class="line"><span style="color: #89DDFF">module.exports</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">api</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">api</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">cache</span><span style="color: #F07178">(</span><span style="color: #FF9CAC">true</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">plugins</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> [</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@babel/plugin-proposal-optional-chaining</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@babel/plugin-proposal-nullish-coalescing-operator</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@babel/plugin-syntax-bigint</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">  ]</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">plugins</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),bo=new E({props:{lang:"javascript",ext:"js",linesCount:9,code:`<pre><code><span class="line"><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">module</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">rules </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">...</span><span style="color: #A6ACCD">otherModuleRules</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">test</span><span style="color: #89DDFF">:</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">\\.</span><span style="color: #C3E88D">js</span><span style="color: #89DDFF; font-style: italic">$</span><span style="color: #89DDFF">/</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">exclude</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">_</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">node_modules</span><span style="color: #A6ACCD">\\/</span><span style="color: #89DDFF">(</span><span style="color: #C3E88D">@web3auth</span><span style="color: #89DDFF">|</span><span style="color: #C3E88D">@ethereumjs</span><span style="color: #89DDFF">)/</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">test</span><span style="color: #A6ACCD">(_)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">loader</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">babel-loader</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">]</span></span>
<span class="line"></span></code></pre>`}}),xn=new B({props:{class:"header-anchor",href:"#webpack-5","aria-hidden":"true",$$slots:{default:[ci]},$$scope:{ctx:b}}}),ho=new g({props:{code:"npm i --save-dev assert buffer crypto-browserify stream-http https-browserify os-browserify process stream-browserify util path-browserify"}}),wo=new g({props:{code:"webpack.config.js"}}),Eo=new E({props:{lang:"javascript",ext:"js",linesCount:30,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> webpack </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">webpack</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">module.exports</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">resolve</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">fallback</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">path</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">path-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">alias</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">assert</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">buffer</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-http</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">https</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">os</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">os-browserify/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">process</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">stream</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">util</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">util</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">experiments</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">asyncWebAssembly</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> webpack</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ProvidePlugin</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">process</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">Buffer</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),On=new B({props:{class:"header-anchor",href:"#if-using-create-react-app","aria-hidden":"true",$$slots:{default:[Di]},$$scope:{ctx:b}}}),Sn=new B({props:{href:"https://www.npmjs.com/package/@craco/craco",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[yi]},$$scope:{ctx:b}}}),vo=new g({props:{code:"craco.config.js"}}),jn=new B({props:{href:"https://www.npmjs.com/package/react-app-rewired",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Fi]},$$scope:{ctx:b}}}),xo=new g({props:{code:"npm i --save-dev rollup-plugin-polyfill-node webpack-bundle-analyzer assert buffer crypto-browserify stream-http https-browserify os-browserify process stream-browserify util path-browserify"}}),To=new g({props:{code:"yarn add rollup-plugin-polyfill-node webpack-bundle-analyzer assert buffer crypto-browserify stream-http https-browserify os-browserify process stream-browserify util path-browserify -D"}}),Oo=new E({props:{lang:"javascript",ext:"js",linesCount:51,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> webpack </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">webpack</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> BundleAnalyzerPlugin </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">webpack-bundle-analyzer</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">path</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">module.exports</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">override</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">fallback</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">resolve</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">fallback</span><span style="color: #F07178"> </span><span style="color: #89DDFF">||</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #FFCB6B">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">assign</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">fallback</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    assert</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    buffer</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    crypto</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    http</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-http</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    https</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    os</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">os-browserify/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    path</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">path-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    process</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    stream</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    url</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">url</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    util</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">util</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">resolve</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">fallback</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">fallback</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">resolve</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">alias</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">...</span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">resolve</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">alias</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">bn.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">__dirname</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/bn.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    lodash</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">__dirname</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/lodash</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">magic-sdk</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">__dirname</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/magic-sdk/dist/cjs/index.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">plugins</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">plugins</span><span style="color: #F07178"> </span><span style="color: #89DDFF">||</span><span style="color: #F07178"> [])</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">concat</span><span style="color: #F07178">([</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">webpack</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ProvidePlugin</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      process</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">      Buffer</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">]</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">webpack</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">IgnorePlugin</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      resourceRegExp</span><span style="color: #89DDFF">:</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">genesisStates</span><span style="color: #A6ACCD">\\/</span><span style="color: #89DDFF">[</span><span style="color: #C3E88D">a-z</span><span style="color: #89DDFF">]*</span><span style="color: #A6ACCD">\\.</span><span style="color: #C3E88D">json</span><span style="color: #89DDFF; font-style: italic">$</span><span style="color: #89DDFF">/</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">      contextRegExp</span><span style="color: #89DDFF">:</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">@ethereumjs</span><span style="color: #A6ACCD">\\/</span><span style="color: #C3E88D">common</span><span style="color: #89DDFF">/</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">BundleAnalyzerPlugin</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      analyzerMode</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">disabled</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  ])</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">ignoreWarnings</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> [</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">Failed to parse source map</span><span style="color: #89DDFF">/</span><span style="color: #F07178">]</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">module</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">rules</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    test</span><span style="color: #89DDFF">:</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">\\.</span><span style="color: #89DDFF">(</span><span style="color: #C3E88D">js</span><span style="color: #89DDFF">|</span><span style="color: #C3E88D">mjs</span><span style="color: #89DDFF">|</span><span style="color: #C3E88D">jsx</span><span style="color: #89DDFF">)</span><span style="color: #89DDFF; font-style: italic">$</span><span style="color: #89DDFF">/</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    enforce</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">pre</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    loader</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">source-map-loader</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    resolve</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      fullySpecified</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">config</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),In=new B({props:{class:"header-anchor",href:"#sveltekit","aria-hidden":"true",$$slots:{default:[ii]},$$scope:{ctx:b}}}),So=new g({props:{code:"yarn add rollup-plugin-polyfill-node -D"}}),Po=new g({props:{code:"svelte.config.js"}}),jo=new E({props:{lang:"javascript",ext:"js",linesCount:53,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> adapter </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@sveltejs/adapter-auto</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> preprocess </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">svelte-preprocess</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> nodePolyfills </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rollup-plugin-polyfill-node</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> process</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">env</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">NODE_ENV</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> development </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">===</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">development</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">/** </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">type</span><span style="color: #464B5D; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">import(&#39;@sveltejs/kit&#39;).Config</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #464B5D; font-style: italic"> */</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> config </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">preprocess</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">preprocess</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">kit</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">adapter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">adapter</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">vite</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">        development </span><span style="color: #89DDFF">&amp;&amp;</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #F07178">include</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/**/*.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RegExp</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/.vite/.*js</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">      ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">resolve</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">alias</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">stream</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">assert</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">build</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">rollupOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">external</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/*</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)]</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">commonjsOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">transformMixedEsModules</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">optimizeDeps</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">exclude</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@ethersproject/hash</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">wrtc</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">include</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/gas</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/sequence</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">js-sha3</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@ethersproject/bignumber</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">        ]</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> config</span></span>
<span class="line"></span></code></pre>`}}),Rn=new B({props:{class:"header-anchor",href:"#vite","aria-hidden":"true",$$slots:{default:[Ci]},$$scope:{ctx:b}}}),Io=new g({props:{code:"npm i --save-dev rollup-plugin-polyfill-node"}}),No=new g({props:{code:"vite.config.js"}}),Ro=new E({props:{lang:"javascript",ext:"js",linesCount:32,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> nodePolyfills </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rollup-plugin-polyfill-node</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> process</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">env</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">NODE_ENV</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> development </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">===</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">development</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// other config options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    development </span><span style="color: #89DDFF">&amp;&amp;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">include</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/**/*.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RegExp</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/.vite/.*js</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">resolve</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">alias</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">stream</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">assert</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">build</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">rollupOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)]</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">commonjsOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">transformMixedEsModules</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),Mn=new B({props:{class:"header-anchor",href:"#nuxt-js","aria-hidden":"true",$$slots:{default:[Ai]},$$scope:{ctx:b}}}),zo=new g({props:{code:"nuxt.config.js"}}),Mo=new E({props:{lang:"javascript",ext:"js",linesCount:4,code:`<pre><code><span class="line"><span style="color: #FFCB6B">build</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #FFCB6B">standalone</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),{c(){o=A("h1"),p=e("Core"),$=m(),v=A("p"),h=e("This is the core package that contains all of the UI and logic to be able to seamlessly connect user's wallets to your app and track the state of those wallets. Onboard no longer contains any wallet specific code, so wallets need to be passed in upon initialization."),_=m(),k=A("h2"),c(P.$$.fragment),J=e(" Install"),Gs=m(),os=A("p"),ps=e("Install the core module:"),es=m(),c(K.$$.fragment),Ys=m(),ts=A("p"),rs=e("If you would like to support all wallets, then you can install all of the wallet modules:"),cs=m(),c(Z.$$.fragment),Vs=m(),c(V.$$.fragment),j=m(),x=A("h2"),c(U.$$.fragment),Ds=e(" Initialization"),Xs=m(),fs=A("p"),Vn=e("Onboard needs to be initialized with an options object before the API can be used:"),Xn=m(),c(Jn.$$.fragment),ds=A("h3"),c(Js.$$.fragment),or=e(" Options"),me=m(),Kn=A("p"),_p=A("strong"),c(Zn.$$.fragment),pr=e(`
An array of wallet modules that you would like to be presented to the user to select from when connecting a wallet. A wallet module is an abstraction that allows for easy interaction without needing to know the specifics of how that wallet works and are separate packages that can be included.`),ue=m(),Qn=A("p"),kp=A("strong"),c(sa.$$.fragment),er=e(`
An array of Chains that your app supports:`),ge=m(),c(na.$$.fragment),aa=A("p"),xp=A("strong"),c(la.$$.fragment),tr=e(`
An object that defines your app:`),be=m(),c(oa.$$.fragment),$s=A("p"),Tp=A("strong"),c(pa.$$.fragment),rr=e(`
An object that defines the display text for different locales. Can also be used to override the default text. To override the default text, pass in a object for the `),c(ea.$$.fragment),cr=e(" locale."),he=m(),c(ta.$$.fragment),ys=A("p"),Dr=e("To see a list of all of the text values that can be internationalized or replaced, check out the "),c(Ks.$$.fragment),yr=e(`.
Onboard is using the `),c(Zs.$$.fragment),Fr=e(" for formatting under the hood."),we=m(),ra=A("p"),Op=A("strong"),c(ca.$$.fragment),ir=e(`
An object that defines whether the account center UI (default and minimal) is enabled and it's position on the screen. Currently the account center is enabled for both desktop and mobile devices.`),Ee=m(),c(Da.$$.fragment),ya=A("p"),Sp=A("strong"),c(Fa.$$.fragment),Cr=e(`
An object mapping for W3O components with the key being the DOM element to mount the specified component to.
This defines the DOM container element for svelte to attach the component.`),Be=m(),Qs=A("p"),Pp=A("strong"),Ar=e("NOTE"),fr=e(`: containerElement must be a DOM element with a styleSheet property attached and the element must be available on the DOM at the time of component mounting.
For an example please see containerElement usage `),c(sn.$$.fragment),ve=m(),c(ia.$$.fragment),L=A("p"),jp=A("strong"),c(Ca.$$.fragment),dr=e(`
Notify provides by default transaction notifications for all connected wallets on the current blockchain. When switching chains the previous chain listeners remain active for 60 seconds to allow capture and report of an remaining transactions that may be in flight.
By default transaction notifications are captured if a DAppID is provided in the Onboard config along with the Account Center being enabled.
An object that defines whether transaction notifications will display (defaults to true if an API key is provided). This object contains an `),c(Aa.$$.fragment),$r=e(" flag prop and an optional "),c(fa.$$.fragment),mr=e(` which is a callback that can disable or allow customizations of notifications.
Currently notifications are positioned in the same location as the account center (either below, if the Account Center is positioned along the top, or above if positioned on the bottom of the view).
The `),c(da.$$.fragment),ur=e(" can react off any property of the Ethereum TransactionData returned to the callback from the event (see console.log in example init). In turn, it can return a Custom "),c($a.$$.fragment),gr=e(" object to define the verbiage, styling, or add functionality:"),_e=m(),R=A("ul"),Uo=A("li"),c(ma.$$.fragment),br=e(" - to completely customize the message shown"),hr=m(),ua=A("li"),c(ga.$$.fragment),wr=e(" - handle codes in your own way - see codes here under the notify prop "),c(nn.$$.fragment),Er=m(),an=A("li"),c(ba.$$.fragment),Br=e(" - icon type displayed (see "),c(ha.$$.fragment),vr=e(" below for options)"),_r=m(),ln=A("li"),c(wa.$$.fragment),kr=e(" - time (in ms) after which the notification will be dismissed. If set to "),c(Ea.$$.fragment),xr=e(" the notification will remain on screen until the user dismisses the notification, refreshes the page or navigates away from the site with the notifications"),Tr=m(),Ho=A("li"),c(Ba.$$.fragment),Or=e(" - add link to the transaction hash. For instance, a link to the transaction on etherscan"),Sr=m(),qo=A("li"),c(va.$$.fragment),Pr=e(" - onClick handler for when user clicks the notification element"),ke=m(),Fs=A("p"),jr=e("Notify can also be styled by using the CSS variables found below. These are setup to allow maximum customization with base styling variables setting the global theme (i.e. "),c(_a.$$.fragment),Ir=e(") along with more precise component level styling variables available ("),c(ka.$$.fragment),Nr=e(") with the latter taking precedent if defined"),xe=m(),Go=A("p"),Rr=e("If notifications are enabled the notifications can be handled through onboard app state as seen below."),Te=m(),c(xa.$$.fragment),c(Ta.$$.fragment),ms=A("h3"),c(on.$$.fragment),zr=e(" Initialization Example"),Oe=m(),Yo=A("p"),Mr=e("Putting it all together, here is an example initialization with the injected wallet modules:"),Se=m(),c(Oa.$$.fragment),us=A("h2"),c(pn.$$.fragment),Lr=e(" Connecting a Wallet"),Pe=m(),z=A("p"),Wr=e("To initiate a user to select and connect a wallet you can call the "),c(Sa.$$.fragment),Ur=e(" function on an initialized Onboard instance. It will return a "),c(Pa.$$.fragment),Hr=e(" that will resolve when the user either successfully connects a wallet, or when they dismiss the UI. The resolved value from the promise will be the latest state of the "),c(ja.$$.fragment),qr=e(' array. The order of the wallets array is last to first, so the most recently selected wallet will be the first item in the array and can be thought of as the "primary wallet". If no wallet was selected, then the '),c(Ia.$$.fragment),Gr=e(" array will have the same state as it had before calling "),c(Na.$$.fragment),Yr=e("."),je=m(),gs=A("h3"),c(en.$$.fragment),Vr=e(" Example"),Ie=m(),c(Ra.$$.fragment),bs=A("h3"),c(tn.$$.fragment),Xr=e(" Auto Selecting a Wallet"),Ne=m(),rn=A("p"),Jr=e(`A common UX pattern is to remember the wallet(s) that a user has previously connected by storing them in localStorage and then automatically selecting them for the user next time they visit your app.
You could enable this in your app by first syncing the `),c(za.$$.fragment),Kr=e(" array to localStorage:"),Re=m(),c(Ma.$$.fragment),Vo=A("p"),Zr=e("Now that you have the most recent wallets connected saved in local storage, you can auto select those wallet(s) when your app loads:"),ze=m(),c(La.$$.fragment),hs=A("h2"),c(cn.$$.fragment),Qr=e(" Disconnecting a Wallet"),Me=m(),Dn=A("p"),sc=e("A wallet can be disconnected, which will cleanup any background operations the wallet may be doing and will also remove it from the Onboard "),c(Wa.$$.fragment),nc=e(" array:"),Le=m(),c(Ua.$$.fragment),H=A("p"),ac=e("The "),c(Ha.$$.fragment),lc=e(" method takes the "),c(qa.$$.fragment),oc=e(" value and returns a "),c(Ga.$$.fragment),pc=e(" that resolves to the current state of the "),c(Ya.$$.fragment),ec=e(" array."),We=m(),ws=A("h2"),c(yn.$$.fragment),tc=e(" State"),Ue=m(),Xo=A("p"),rc=e("Onboard currently keeps track of the following state:"),He=m(),Q=A("ul"),Jo=A("li"),c(Va.$$.fragment),cc=e(": The wallets connected to Onboard"),Dc=m(),Ko=A("li"),c(Xa.$$.fragment),yc=e(": The chains that Onboard has been initialized with"),Fc=m(),Zo=A("li"),c(Ja.$$.fragment),ic=e(": The current state of the account center UI"),Cc=m(),Qo=A("li"),c(Ka.$$.fragment),Ac=e(": The wallet modules that are currently set and will be rendered in the wallet selection modal"),qe=m(),c(Za.$$.fragment),Es=A("h3"),c(Fn.$$.fragment),fc=e(" Get Current State"),Ge=m(),Cn=A("p"),dc=e("The current state of Onboard can be accessed at any time using the "),c(Qa.$$.fragment),$c=e(" method:"),Ye=m(),c(sl.$$.fragment),Bs=A("h3"),c(An.$$.fragment),mc=e(" Subscribe to State Updates"),Ve=m(),ss=A("p"),uc=e("State can also be subscribed to using the "),c(nl.$$.fragment),gc=e(" method. The "),c(al.$$.fragment),bc=e(" method will return an "),c(fn.$$.fragment),hc=e(". Understanding of RXJS observables is not necessary to subscribe to state updates, but allows for composable functionality if wanted. The key point to understand is that if you subscribe for updates, remember to unsubscribe when you are finished to prevent memory leaks."),Xe=m(),dn=A("p"),wc=e("To subscribe to all state updates, call the "),c(ll.$$.fragment),Ec=e(" method with no arguments:"),Je=m(),c(ol.$$.fragment),$n=A("p"),Bc=e("Specific top level slices of state can be subscribed to. For example you may want to just subscribe to receive updates to the "),c(pl.$$.fragment),vc=e(" array only:"),Ke=m(),c(el.$$.fragment),vs=A("h3"),c(mn.$$.fragment),_c=e(" Actions to Modify State"),Ze=m(),sp=A("p"),kc=e("A limited subset of internal actions are exposed to update the Onboard state."),Qe=m(),_s=A("p"),Ip=A("strong"),c(tl.$$.fragment),xc=e(`
For updating the wallets that are displayed in the wallet selection modal. This can be used if the wallets you want to support is conditional on another user action within your app. The `),c(rl.$$.fragment),Tc=e(" action is called with an updated array of wallets (the same wallets that are passed in on initialization)"),st=m(),c(cl.$$.fragment),ks=A("p"),Np=A("strong"),c(Dl.$$.fragment),Oc=e(`
You may decide to get updated balances for connected wallets after a user action by calling the `),c(yl.$$.fragment),Sc=e(" function, which expects a conditional array of addresses:"),nt=m(),c(Fl.$$.fragment),xs=A("p"),Rp=A("strong"),c(il.$$.fragment),Pc=e(`
Onboard will automatically detect the browser locale at runtime, but if you would like to update it manually you can call the `),c(Cl.$$.fragment),jc=e(" function:"),at=m(),c(Al.$$.fragment),Ts=A("p"),zp=A("strong"),c(fl.$$.fragment),Ic=e(`
If you need to update your notify configuration after initialization, you can do that by calling the `),c(dl.$$.fragment),Nc=e(" function:"),lt=m(),c($l.$$.fragment),T=A("p"),Mp=A("strong"),c(ml.$$.fragment),Rc=e(`
Notify can be used to deliver custom DApp notifications by passing a `),c(ul.$$.fragment),zc=e(" object to the "),c(gl.$$.fragment),Mc=e(" action. This will return an "),c(bl.$$.fragment),Lc=e(` type.
This `),c(hl.$$.fragment),Wc=e(" will return an "),c(wl.$$.fragment),Uc=e(" function that can be passed a new "),c(El.$$.fragment),Hc=e(` to update the existing notification.
The `),c(Bl.$$.fragment),qc=e(" method also returns a "),c(vl.$$.fragment),Gc=e(" method that is called without any parameters to dismiss the notification."),ot=m(),c(_l.$$.fragment),N=A("p"),Lp=A("strong"),c(kl.$$.fragment),Yc=e(`
Notify can be used to deliver standard notifications along with preflight information by passing a `),c(xl.$$.fragment),Vc=e(" object to the "),c(Tl.$$.fragment),Xc=e(" action. This will return a a promise that resolves to the transaction hash (if "),c(Ol.$$.fragment),Jc=e(" resolves the transaction hash and is successful), the internal notification id (if no "),c(Sl.$$.fragment),Kc=e(" function is provided) or return nothing if an error occurs or "),c(Pl.$$.fragment),Zc=e(" is not provided or doesn't resolve to a string."),pt=m(),np=A("p"),Qc=e("Preflight event types include"),et=m(),I=A("ul"),ap=A("li"),c(jl.$$.fragment),sD=e(" : Alert user there is a transaction request awaiting confirmation by their wallet"),nD=m(),lp=A("li"),c(Il.$$.fragment),aD=e(" : A previous transaction is awaiting confirmation"),lD=m(),un=A("li"),c(Nl.$$.fragment),oD=e(" : Reminder to confirm a transaction to continue - configurable with the "),c(Rl.$$.fragment),pD=e(" property; defaults to 15 seconds"),eD=m(),q=A("li"),c(zl.$$.fragment),tD=e(" : The user has insufficient funds for transaction (requires "),c(Ml.$$.fragment),rD=e(", "),c(Ll.$$.fragment),cD=e(", "),c(Wl.$$.fragment),DD=e(", "),c(Ul.$$.fragment),yD=e(")"),FD=m(),gn=A("li"),c(Hl.$$.fragment),iD=e(" : General transaction error (requires "),c(ql.$$.fragment),CD=e(")"),AD=m(),bn=A("li"),c(Gl.$$.fragment),fD=e(" : The user rejected the transaction (requires "),c(Yl.$$.fragment),dD=e(")"),$D=m(),hn=A("li"),c(Vl.$$.fragment),mD=e(" : The gas price for the transaction is too low (requires "),c(Xl.$$.fragment),uD=e(")"),tt=m(),c(Jl.$$.fragment),c(Kl.$$.fragment),Os=A("p"),Wp=A("strong"),c(Zl.$$.fragment),gD=e(`
If you need to update your Account Center configuration after initialization, you can call the `),c(Ql.$$.fragment),bD=e(" function with the new configuration"),rt=m(),c(so.$$.fragment),Ss=A("p"),Up=A("strong"),c(no.$$.fragment),hD=e(`
The primary wallet (first in the list of connected wallets) and primary account (first in the list of connected accounts for a wallet) can be set by using the `),c(ao.$$.fragment),wD=e(" function. The wallet that is set needs to be passed in for the first parameter and if you would like to set the primary account, the address of that account also needs to be passed in:"),ct=m(),c(lo.$$.fragment),Ps=A("h2"),c(wn.$$.fragment),ED=e(" Setting the User's Chain/Network"),Dt=m(),En=A("p"),BD=e("When initializing Onboard you define a list of chains/networks that your app supports. If you would like to prompt the user to switch to one of those chains, you can use the "),c(oo.$$.fragment),vD=e(" method on an initialized instance of Onboard:"),yt=m(),c(po.$$.fragment),O=A("p"),_D=e("The "),c(eo.$$.fragment),kD=e(" methods takes an options object with a "),c(to.$$.fragment),xD=e(" property hex encoded string for the chain id to switch to. The chain id must be one of the chains that Onboard was initialized with. If the wallet supports programatically adding and switching the chain, then the user will be prompted to do so, if not, then a modal will be displayed indicating to the user that they need to switch chains to continue. The "),c(ro.$$.fragment),TD=e(" method returns a promise that resolves when either the user has confirmed the chain switch, or has dismissed the modal and resolves with a boolean indicating if the switch network was successful or not. The "),c(co.$$.fragment),OD=e(" method will by default switch the first wallet (the most recently connected) in the "),c(Do.$$.fragment),SD=e(" array. A specific wallet can be targeted by passing in the "),c(yo.$$.fragment),PD=e(" in the options object as the "),c(Fo.$$.fragment),jD=e(" parameter."),Ft=m(),js=A("h2"),c(Bn.$$.fragment),ID=e(" Custom Styling"),it=m(),is=A("p"),ND=e("The Onboard styles can customized via "),c(vn.$$.fragment),RD=e(". The following properties and their default properties can be customized by adding these variables to the "),c(io.$$.fragment),zD=e(" in your CSS file:"),Ct=m(),c(Co.$$.fragment),Is=A("h2"),c(_n.$$.fragment),MD=e(" Build Environments"),At=m(),ns=A("p"),LD=e("Many of the wallet modules require dependencies that are not normally included in browser builds (namely the node builtin modules such as "),c(Ao.$$.fragment),WD=e(", "),c(fo.$$.fragment),UD=e(", "),c($o.$$.fragment),HD=e(" etc). If you are having build issues you can try the following bundler configs to resolve these dependency issues:"),ft=m(),Ns=A("h3"),c(kn.$$.fragment),qD=e(" Webpack 4"),dt=m(),op=A("p"),GD=e("Node built-ins are automatically bundled in v4 so that portion is handled automatically."),$t=m(),Rs=A("p"),Hp=A("strong"),YD=e("web3auth"),VD=e(" and "),qp=A("strong"),XD=e("torus"),JD=e(" will require a Babel to compile from es6 if not already supported. See config for Babel and Webpack4 as follows"),mt=m(),Cs=A("p"),c(mo.$$.fragment),KD=m(),Gp=A("strong"),ZD=e("AND"),QD=m(),c(uo.$$.fragment),ut=m(),pp=A("p"),Yp=A("strong"),sy=e("babel.config.js"),gt=m(),c(go.$$.fragment),ep=A("p"),Vp=A("strong"),ny=e("webpack.config.js"),bt=m(),c(bo.$$.fragment),zs=A("h3"),c(xn.$$.fragment),ay=e(" Webpack 5"),ht=m(),tp=A("p"),ly=e("You'll need to add some dev dependencies with the following command:"),wt=m(),rp=A("p"),c(ho.$$.fragment),Et=m(),Tn=A("p"),oy=e("Then add the following to your "),c(wo.$$.fragment),py=e(" file:"),Bt=m(),c(Eo.$$.fragment),Ms=A("h4"),c(On.$$.fragment),ey=e(" If using create-react-app"),vt=m(),Bo=A("p"),c(Sn.$$.fragment),ty=e(" provides an similar way to override webpack config which is obfuscated in Create React App built applications."),_t=m(),Pn=A("p"),ry=e("The above webpack 5 example can be used in the "),c(vo.$$.fragment),cy=e(" file at the root level in this case."),kt=m(),_o=A("p"),c(jn.$$.fragment),Dy=e(" is another option for working with Create React App DApps"),xt=m(),ko=A("p"),yy=e(`Add the following dev dependencies:
`),c(xo.$$.fragment),Tt=m(),cp=A("p"),Xp=A("strong"),Fy=e("OR"),Ot=m(),Dp=A("p"),c(To.$$.fragment),St=m(),c(Oo.$$.fragment),Ls=A("h3"),c(In.$$.fragment),iy=e(" SvelteKit"),Pt=m(),yp=A("p"),Cy=e("Add the following dev dependencies:"),jt=m(),Fp=A("p"),c(So.$$.fragment),It=m(),Nn=A("p"),Ay=e("Then add the following to your "),c(Po.$$.fragment),fy=e(" file:"),Nt=m(),c(jo.$$.fragment),Ws=A("h3"),c(Rn.$$.fragment),dy=e(" Vite"),Rt=m(),ip=A("p"),$y=e("Add the following dev dependencies:"),zt=m(),Cp=A("p"),c(Io.$$.fragment),Mt=m(),zn=A("p"),my=e("Then add the following to your "),c(No.$$.fragment),uy=e(" file:"),Lt=m(),c(Ro.$$.fragment),Us=A("h3"),c(Mn.$$.fragment),gy=e(" Nuxt.js"),Wt=m(),Ln=A("p"),by=e("Add the following to your "),c(zo.$$.fragment),hy=e(":"),Ut=m(),c(Mo.$$.fragment),this.h()},l(s){o=f(s,"H1",{});var a=d(o);p=t(a,"Core"),a.forEach(n),$=u(s),v=f(s,"P",{});var Jp=d(v);h=t(Jp,"This is the core package that contains all of the UI and logic to be able to seamlessly connect user's wallets to your app and track the state of those wallets. Onboard no longer contains any wallet specific code, so wallets need to be passed in upon initialization."),Jp.forEach(n),_=u(s),k=f(s,"H2",{id:!0,tabindex:!0});var Ap=d(k);D(P.$$.fragment,Ap),J=t(Ap," Install"),Ap.forEach(n),Gs=u(s),os=f(s,"P",{});var Kp=d(os);ps=t(Kp,"Install the core module:"),Kp.forEach(n),es=u(s),D(K.$$.fragment,s),Ys=u(s),ts=f(s,"P",{});var Zp=d(ts);rs=t(Zp,"If you would like to support all wallets, then you can install all of the wallet modules:"),Zp.forEach(n),cs=u(s),D(Z.$$.fragment,s),Vs=u(s),D(V.$$.fragment,s),j=u(s),x=f(s,"H2",{id:!0,tabindex:!0});var fp=d(x);D(U.$$.fragment,fp),Ds=t(fp," Initialization"),fp.forEach(n),Xs=u(s),fs=f(s,"P",{});var Qp=d(fs);Vn=t(Qp,"Onboard needs to be initialized with an options object before the API can be used:"),Qp.forEach(n),Xn=u(s),D(Jn.$$.fragment,s),ds=f(s,"H3",{id:!0,tabindex:!0});var dp=d(ds);D(Js.$$.fragment,dp),or=t(dp," Options"),dp.forEach(n),me=u(s),Kn=f(s,"P",{});var $p=d(Kn);_p=f($p,"STRONG",{});var se=d(_p);D(Zn.$$.fragment,se),se.forEach(n),pr=t($p,`
An array of wallet modules that you would like to be presented to the user to select from when connecting a wallet. A wallet module is an abstraction that allows for easy interaction without needing to know the specifics of how that wallet works and are separate packages that can be included.`),$p.forEach(n),ue=u(s),Qn=f(s,"P",{});var mp=d(Qn);kp=f(mp,"STRONG",{});var ne=d(kp);D(sa.$$.fragment,ne),ne.forEach(n),er=t(mp,`
An array of Chains that your app supports:`),mp.forEach(n),ge=u(s),D(na.$$.fragment,s),aa=f(s,"P",{});var up=d(aa);xp=f(up,"STRONG",{});var ae=d(xp);D(la.$$.fragment,ae),ae.forEach(n),tr=t(up,`
An object that defines your app:`),up.forEach(n),be=u(s),D(oa.$$.fragment,s),$s=f(s,"P",{});var Wn=d($s);Tp=f(Wn,"STRONG",{});var le=d(Tp);D(pa.$$.fragment,le),le.forEach(n),rr=t(Wn,`
An object that defines the display text for different locales. Can also be used to override the default text. To override the default text, pass in a object for the `),D(ea.$$.fragment,Wn),cr=t(Wn," locale."),Wn.forEach(n),he=u(s),D(ta.$$.fragment,s),ys=f(s,"P",{});var Hs=d(ys);Dr=t(Hs,"To see a list of all of the text values that can be internationalized or replaced, check out the "),D(Ks.$$.fragment,Hs),yr=t(Hs,`.
Onboard is using the `),D(Zs.$$.fragment,Hs),Fr=t(Hs," for formatting under the hood."),Hs.forEach(n),we=u(s),ra=f(s,"P",{});var gp=d(ra);Op=f(gp,"STRONG",{});var oe=d(Op);D(ca.$$.fragment,oe),oe.forEach(n),ir=t(gp,`
An object that defines whether the account center UI (default and minimal) is enabled and it's position on the screen. Currently the account center is enabled for both desktop and mobile devices.`),gp.forEach(n),Ee=u(s),D(Da.$$.fragment,s),ya=f(s,"P",{});var bp=d(ya);Sp=f(bp,"STRONG",{});var pe=d(Sp);D(Fa.$$.fragment,pe),pe.forEach(n),Cr=t(bp,`
An object mapping for W3O components with the key being the DOM element to mount the specified component to.
This defines the DOM container element for svelte to attach the component.`),bp.forEach(n),Be=u(s),Qs=f(s,"P",{});var Lo=d(Qs);Pp=f(Lo,"STRONG",{});var ee=d(Pp);Ar=t(ee,"NOTE"),ee.forEach(n),fr=t(Lo,`: containerElement must be a DOM element with a styleSheet property attached and the element must be available on the DOM at the time of component mounting.
For an example please see containerElement usage `),D(sn.$$.fragment,Lo),Lo.forEach(n),ve=u(s),D(ia.$$.fragment,s),L=f(s,"P",{});var G=d(L);jp=f(G,"STRONG",{});var te=d(jp);D(Ca.$$.fragment,te),te.forEach(n),dr=t(G,`
Notify provides by default transaction notifications for all connected wallets on the current blockchain. When switching chains the previous chain listeners remain active for 60 seconds to allow capture and report of an remaining transactions that may be in flight.
By default transaction notifications are captured if a DAppID is provided in the Onboard config along with the Account Center being enabled.
An object that defines whether transaction notifications will display (defaults to true if an API key is provided). This object contains an `),D(Aa.$$.fragment,G),$r=t(G," flag prop and an optional "),D(fa.$$.fragment,G),mr=t(G,` which is a callback that can disable or allow customizations of notifications.
Currently notifications are positioned in the same location as the account center (either below, if the Account Center is positioned along the top, or above if positioned on the bottom of the view).
The `),D(da.$$.fragment,G),ur=t(G," can react off any property of the Ethereum TransactionData returned to the callback from the event (see console.log in example init). In turn, it can return a Custom "),D($a.$$.fragment,G),gr=t(G," object to define the verbiage, styling, or add functionality:"),G.forEach(n),_e=u(s),R=f(s,"UL",{});var W=d(R);Uo=f(W,"LI",{});var hp=d(Uo);D(ma.$$.fragment,hp),br=t(hp," - to completely customize the message shown"),hp.forEach(n),hr=u(W),ua=f(W,"LI",{});var Wo=d(ua);D(ga.$$.fragment,Wo),wr=t(Wo," - handle codes in your own way - see codes here under the notify prop "),D(nn.$$.fragment,Wo),Wo.forEach(n),Er=u(W),an=f(W,"LI",{});var Un=d(an);D(ba.$$.fragment,Un),Br=t(Un," - icon type displayed (see "),D(ha.$$.fragment,Un),vr=t(Un," below for options)"),Un.forEach(n),_r=u(W),ln=f(W,"LI",{});var Hn=d(ln);D(wa.$$.fragment,Hn),kr=t(Hn," - time (in ms) after which the notification will be dismissed. If set to "),D(Ea.$$.fragment,Hn),xr=t(Hn," the notification will remain on screen until the user dismisses the notification, refreshes the page or navigates away from the site with the notifications"),Hn.forEach(n),Tr=u(W),Ho=f(W,"LI",{});var wp=d(Ho);D(Ba.$$.fragment,wp),Or=t(wp," - add link to the transaction hash. For instance, a link to the transaction on etherscan"),wp.forEach(n),Sr=u(W),qo=f(W,"LI",{});var Ep=d(qo);D(va.$$.fragment,Ep),Pr=t(Ep," - onClick handler for when user clicks the notification element"),Ep.forEach(n),W.forEach(n),ke=u(s),Fs=f(s,"P",{});var qs=d(Fs);jr=t(qs,"Notify can also be styled by using the CSS variables found below. These are setup to allow maximum customization with base styling variables setting the global theme (i.e. "),D(_a.$$.fragment,qs),Ir=t(qs,") along with more precise component level styling variables available ("),D(ka.$$.fragment,qs),Nr=t(qs,") with the latter taking precedent if defined"),qs.forEach(n),xe=u(s),Go=f(s,"P",{});var Ky=d(Go);Rr=t(Ky,"If notifications are enabled the notifications can be handled through onboard app state as seen below."),Ky.forEach(n),Te=u(s),D(xa.$$.fragment,s),D(Ta.$$.fragment,s),ms=f(s,"H3",{id:!0,tabindex:!0});var wy=d(ms);D(on.$$.fragment,wy),zr=t(wy," Initialization Example"),wy.forEach(n),Oe=u(s),Yo=f(s,"P",{});var Zy=d(Yo);Mr=t(Zy,"Putting it all together, here is an example initialization with the injected wallet modules:"),Zy.forEach(n),Se=u(s),D(Oa.$$.fragment,s),us=f(s,"H2",{id:!0,tabindex:!0});var Ey=d(us);D(pn.$$.fragment,Ey),Lr=t(Ey," Connecting a Wallet"),Ey.forEach(n),Pe=u(s),z=f(s,"P",{});var as=d(z);Wr=t(as,"To initiate a user to select and connect a wallet you can call the "),D(Sa.$$.fragment,as),Ur=t(as," function on an initialized Onboard instance. It will return a "),D(Pa.$$.fragment,as),Hr=t(as," that will resolve when the user either successfully connects a wallet, or when they dismiss the UI. The resolved value from the promise will be the latest state of the "),D(ja.$$.fragment,as),qr=t(as,' array. The order of the wallets array is last to first, so the most recently selected wallet will be the first item in the array and can be thought of as the "primary wallet". If no wallet was selected, then the '),D(Ia.$$.fragment,as),Gr=t(as," array will have the same state as it had before calling "),D(Na.$$.fragment,as),Yr=t(as,"."),as.forEach(n),je=u(s),gs=f(s,"H3",{id:!0,tabindex:!0});var By=d(gs);D(en.$$.fragment,By),Vr=t(By," Example"),By.forEach(n),Ie=u(s),D(Ra.$$.fragment,s),bs=f(s,"H3",{id:!0,tabindex:!0});var vy=d(bs);D(tn.$$.fragment,vy),Xr=t(vy," Auto Selecting a Wallet"),vy.forEach(n),Ne=u(s),rn=f(s,"P",{});var qt=d(rn);Jr=t(qt,`A common UX pattern is to remember the wallet(s) that a user has previously connected by storing them in localStorage and then automatically selecting them for the user next time they visit your app.
You could enable this in your app by first syncing the `),D(za.$$.fragment,qt),Kr=t(qt," array to localStorage:"),qt.forEach(n),Re=u(s),D(Ma.$$.fragment,s),Vo=f(s,"P",{});var Qy=d(Vo);Zr=t(Qy,"Now that you have the most recent wallets connected saved in local storage, you can auto select those wallet(s) when your app loads:"),Qy.forEach(n),ze=u(s),D(La.$$.fragment,s),hs=f(s,"H2",{id:!0,tabindex:!0});var _y=d(hs);D(cn.$$.fragment,_y),Qr=t(_y," Disconnecting a Wallet"),_y.forEach(n),Me=u(s),Dn=f(s,"P",{});var Gt=d(Dn);sc=t(Gt,"A wallet can be disconnected, which will cleanup any background operations the wallet may be doing and will also remove it from the Onboard "),D(Wa.$$.fragment,Gt),nc=t(Gt," array:"),Gt.forEach(n),Le=u(s),D(Ua.$$.fragment,s),H=f(s,"P",{});var As=d(H);ac=t(As,"The "),D(Ha.$$.fragment,As),lc=t(As," method takes the "),D(qa.$$.fragment,As),oc=t(As," value and returns a "),D(Ga.$$.fragment,As),pc=t(As," that resolves to the current state of the "),D(Ya.$$.fragment,As),ec=t(As," array."),As.forEach(n),We=u(s),ws=f(s,"H2",{id:!0,tabindex:!0});var ky=d(ws);D(yn.$$.fragment,ky),tc=t(ky," State"),ky.forEach(n),Ue=u(s),Xo=f(s,"P",{});var sF=d(Xo);rc=t(sF,"Onboard currently keeps track of the following state:"),sF.forEach(n),He=u(s),Q=f(s,"UL",{});var qn=d(Q);Jo=f(qn,"LI",{});var xy=d(Jo);D(Va.$$.fragment,xy),cc=t(xy,": The wallets connected to Onboard"),xy.forEach(n),Dc=u(qn),Ko=f(qn,"LI",{});var Ty=d(Ko);D(Xa.$$.fragment,Ty),yc=t(Ty,": The chains that Onboard has been initialized with"),Ty.forEach(n),Fc=u(qn),Zo=f(qn,"LI",{});var Oy=d(Zo);D(Ja.$$.fragment,Oy),ic=t(Oy,": The current state of the account center UI"),Oy.forEach(n),Cc=u(qn),Qo=f(qn,"LI",{});var Sy=d(Qo);D(Ka.$$.fragment,Sy),Ac=t(Sy,": The wallet modules that are currently set and will be rendered in the wallet selection modal"),Sy.forEach(n),qn.forEach(n),qe=u(s),D(Za.$$.fragment,s),Es=f(s,"H3",{id:!0,tabindex:!0});var Py=d(Es);D(Fn.$$.fragment,Py),fc=t(Py," Get Current State"),Py.forEach(n),Ge=u(s),Cn=f(s,"P",{});var Yt=d(Cn);dc=t(Yt,"The current state of Onboard can be accessed at any time using the "),D(Qa.$$.fragment,Yt),$c=t(Yt," method:"),Yt.forEach(n),Ye=u(s),D(sl.$$.fragment,s),Bs=f(s,"H3",{id:!0,tabindex:!0});var jy=d(Bs);D(An.$$.fragment,jy),mc=t(jy," Subscribe to State Updates"),jy.forEach(n),Ve=u(s),ss=f(s,"P",{});var Gn=d(ss);uc=t(Gn,"State can also be subscribed to using the "),D(nl.$$.fragment,Gn),gc=t(Gn," method. The "),D(al.$$.fragment,Gn),bc=t(Gn," method will return an "),D(fn.$$.fragment,Gn),hc=t(Gn,". Understanding of RXJS observables is not necessary to subscribe to state updates, but allows for composable functionality if wanted. The key point to understand is that if you subscribe for updates, remember to unsubscribe when you are finished to prevent memory leaks."),Gn.forEach(n),Xe=u(s),dn=f(s,"P",{});var Vt=d(dn);wc=t(Vt,"To subscribe to all state updates, call the "),D(ll.$$.fragment,Vt),Ec=t(Vt," method with no arguments:"),Vt.forEach(n),Je=u(s),D(ol.$$.fragment,s),$n=f(s,"P",{});var Xt=d($n);Bc=t(Xt,"Specific top level slices of state can be subscribed to. For example you may want to just subscribe to receive updates to the "),D(pl.$$.fragment,Xt),vc=t(Xt," array only:"),Xt.forEach(n),Ke=u(s),D(el.$$.fragment,s),vs=f(s,"H3",{id:!0,tabindex:!0});var Iy=d(vs);D(mn.$$.fragment,Iy),_c=t(Iy," Actions to Modify State"),Iy.forEach(n),Ze=u(s),sp=f(s,"P",{});var nF=d(sp);kc=t(nF,"A limited subset of internal actions are exposed to update the Onboard state."),nF.forEach(n),Qe=u(s),_s=f(s,"P",{});var re=d(_s);Ip=f(re,"STRONG",{});var aF=d(Ip);D(tl.$$.fragment,aF),aF.forEach(n),xc=t(re,`
For updating the wallets that are displayed in the wallet selection modal. This can be used if the wallets you want to support is conditional on another user action within your app. The `),D(rl.$$.fragment,re),Tc=t(re," action is called with an updated array of wallets (the same wallets that are passed in on initialization)"),re.forEach(n),st=u(s),D(cl.$$.fragment,s),ks=f(s,"P",{});var ce=d(ks);Np=f(ce,"STRONG",{});var lF=d(Np);D(Dl.$$.fragment,lF),lF.forEach(n),Oc=t(ce,`
You may decide to get updated balances for connected wallets after a user action by calling the `),D(yl.$$.fragment,ce),Sc=t(ce," function, which expects a conditional array of addresses:"),ce.forEach(n),nt=u(s),D(Fl.$$.fragment,s),xs=f(s,"P",{});var De=d(xs);Rp=f(De,"STRONG",{});var oF=d(Rp);D(il.$$.fragment,oF),oF.forEach(n),Pc=t(De,`
Onboard will automatically detect the browser locale at runtime, but if you would like to update it manually you can call the `),D(Cl.$$.fragment,De),jc=t(De," function:"),De.forEach(n),at=u(s),D(Al.$$.fragment,s),Ts=f(s,"P",{});var ye=d(Ts);zp=f(ye,"STRONG",{});var pF=d(zp);D(fl.$$.fragment,pF),pF.forEach(n),Ic=t(ye,`
If you need to update your notify configuration after initialization, you can do that by calling the `),D(dl.$$.fragment,ye),Nc=t(ye," function:"),ye.forEach(n),lt=u(s),D($l.$$.fragment,s),T=f(s,"P",{});var S=d(T);Mp=f(S,"STRONG",{});var eF=d(Mp);D(ml.$$.fragment,eF),eF.forEach(n),Rc=t(S,`
Notify can be used to deliver custom DApp notifications by passing a `),D(ul.$$.fragment,S),zc=t(S," object to the "),D(gl.$$.fragment,S),Mc=t(S," action. This will return an "),D(bl.$$.fragment,S),Lc=t(S,` type.
This `),D(hl.$$.fragment,S),Wc=t(S," will return an "),D(wl.$$.fragment,S),Uc=t(S," function that can be passed a new "),D(El.$$.fragment,S),Hc=t(S,` to update the existing notification.
The `),D(Bl.$$.fragment,S),qc=t(S," method also returns a "),D(vl.$$.fragment,S),Gc=t(S," method that is called without any parameters to dismiss the notification."),S.forEach(n),ot=u(s),D(_l.$$.fragment,s),N=f(s,"P",{});var X=d(N);Lp=f(X,"STRONG",{});var tF=d(Lp);D(kl.$$.fragment,tF),tF.forEach(n),Yc=t(X,`
Notify can be used to deliver standard notifications along with preflight information by passing a `),D(xl.$$.fragment,X),Vc=t(X," object to the "),D(Tl.$$.fragment,X),Xc=t(X," action. This will return a a promise that resolves to the transaction hash (if "),D(Ol.$$.fragment,X),Jc=t(X," resolves the transaction hash and is successful), the internal notification id (if no "),D(Sl.$$.fragment,X),Kc=t(X," function is provided) or return nothing if an error occurs or "),D(Pl.$$.fragment,X),Zc=t(X," is not provided or doesn't resolve to a string."),X.forEach(n),pt=u(s),np=f(s,"P",{});var rF=d(np);Qc=t(rF,"Preflight event types include"),rF.forEach(n),et=u(s),I=f(s,"UL",{});var Y=d(I);ap=f(Y,"LI",{});var Ny=d(ap);D(jl.$$.fragment,Ny),sD=t(Ny," : Alert user there is a transaction request awaiting confirmation by their wallet"),Ny.forEach(n),nD=u(Y),lp=f(Y,"LI",{});var Ry=d(lp);D(Il.$$.fragment,Ry),aD=t(Ry," : A previous transaction is awaiting confirmation"),Ry.forEach(n),lD=u(Y),un=f(Y,"LI",{});var Fe=d(un);D(Nl.$$.fragment,Fe),oD=t(Fe," : Reminder to confirm a transaction to continue - configurable with the "),D(Rl.$$.fragment,Fe),pD=t(Fe," property; defaults to 15 seconds"),Fe.forEach(n),eD=u(Y),q=f(Y,"LI",{});var ls=d(q);D(zl.$$.fragment,ls),tD=t(ls," : The user has insufficient funds for transaction (requires "),D(Ml.$$.fragment,ls),rD=t(ls,", "),D(Ll.$$.fragment,ls),cD=t(ls,", "),D(Wl.$$.fragment,ls),DD=t(ls,", "),D(Ul.$$.fragment,ls),yD=t(ls,")"),ls.forEach(n),FD=u(Y),gn=f(Y,"LI",{});var ie=d(gn);D(Hl.$$.fragment,ie),iD=t(ie," : General transaction error (requires "),D(ql.$$.fragment,ie),CD=t(ie,")"),ie.forEach(n),AD=u(Y),bn=f(Y,"LI",{});var Ce=d(bn);D(Gl.$$.fragment,Ce),fD=t(Ce," : The user rejected the transaction (requires "),D(Yl.$$.fragment,Ce),dD=t(Ce,")"),Ce.forEach(n),$D=u(Y),hn=f(Y,"LI",{});var Ae=d(hn);D(Vl.$$.fragment,Ae),mD=t(Ae," : The gas price for the transaction is too low (requires "),D(Xl.$$.fragment,Ae),uD=t(Ae,")"),Ae.forEach(n),Y.forEach(n),tt=u(s),D(Jl.$$.fragment,s),D(Kl.$$.fragment,s),Os=f(s,"P",{});var fe=d(Os);Wp=f(fe,"STRONG",{});var cF=d(Wp);D(Zl.$$.fragment,cF),cF.forEach(n),gD=t(fe,`
If you need to update your Account Center configuration after initialization, you can call the `),D(Ql.$$.fragment,fe),bD=t(fe," function with the new configuration"),fe.forEach(n),rt=u(s),D(so.$$.fragment,s),Ss=f(s,"P",{});var de=d(Ss);Up=f(de,"STRONG",{});var DF=d(Up);D(no.$$.fragment,DF),DF.forEach(n),hD=t(de,`
The primary wallet (first in the list of connected wallets) and primary account (first in the list of connected accounts for a wallet) can be set by using the `),D(ao.$$.fragment,de),wD=t(de," function. The wallet that is set needs to be passed in for the first parameter and if you would like to set the primary account, the address of that account also needs to be passed in:"),de.forEach(n),ct=u(s),D(lo.$$.fragment,s),Ps=f(s,"H2",{id:!0,tabindex:!0});var zy=d(Ps);D(wn.$$.fragment,zy),ED=t(zy," Setting the User's Chain/Network"),zy.forEach(n),Dt=u(s),En=f(s,"P",{});var Jt=d(En);BD=t(Jt,"When initializing Onboard you define a list of chains/networks that your app supports. If you would like to prompt the user to switch to one of those chains, you can use the "),D(oo.$$.fragment,Jt),vD=t(Jt," method on an initialized instance of Onboard:"),Jt.forEach(n),yt=u(s),D(po.$$.fragment,s),O=f(s,"P",{});var M=d(O);_D=t(M,"The "),D(eo.$$.fragment,M),kD=t(M," methods takes an options object with a "),D(to.$$.fragment,M),xD=t(M," property hex encoded string for the chain id to switch to. The chain id must be one of the chains that Onboard was initialized with. If the wallet supports programatically adding and switching the chain, then the user will be prompted to do so, if not, then a modal will be displayed indicating to the user that they need to switch chains to continue. The "),D(ro.$$.fragment,M),TD=t(M," method returns a promise that resolves when either the user has confirmed the chain switch, or has dismissed the modal and resolves with a boolean indicating if the switch network was successful or not. The "),D(co.$$.fragment,M),OD=t(M," method will by default switch the first wallet (the most recently connected) in the "),D(Do.$$.fragment,M),SD=t(M," array. A specific wallet can be targeted by passing in the "),D(yo.$$.fragment,M),PD=t(M," in the options object as the "),D(Fo.$$.fragment,M),jD=t(M," parameter."),M.forEach(n),Ft=u(s),js=f(s,"H2",{id:!0,tabindex:!0});var My=d(js);D(Bn.$$.fragment,My),ID=t(My," Custom Styling"),My.forEach(n),it=u(s),is=f(s,"P",{});var Bp=d(is);ND=t(Bp,"The Onboard styles can customized via "),D(vn.$$.fragment,Bp),RD=t(Bp,". The following properties and their default properties can be customized by adding these variables to the "),D(io.$$.fragment,Bp),zD=t(Bp," in your CSS file:"),Bp.forEach(n),Ct=u(s),D(Co.$$.fragment,s),Is=f(s,"H2",{id:!0,tabindex:!0});var Ly=d(Is);D(_n.$$.fragment,Ly),MD=t(Ly," Build Environments"),Ly.forEach(n),At=u(s),ns=f(s,"P",{});var Yn=d(ns);LD=t(Yn,"Many of the wallet modules require dependencies that are not normally included in browser builds (namely the node builtin modules such as "),D(Ao.$$.fragment,Yn),WD=t(Yn,", "),D(fo.$$.fragment,Yn),UD=t(Yn,", "),D($o.$$.fragment,Yn),HD=t(Yn," etc). If you are having build issues you can try the following bundler configs to resolve these dependency issues:"),Yn.forEach(n),ft=u(s),Ns=f(s,"H3",{id:!0,tabindex:!0});var Wy=d(Ns);D(kn.$$.fragment,Wy),qD=t(Wy," Webpack 4"),Wy.forEach(n),dt=u(s),op=f(s,"P",{});var yF=d(op);GD=t(yF,"Node built-ins are automatically bundled in v4 so that portion is handled automatically."),yF.forEach(n),$t=u(s),Rs=f(s,"P",{});var $e=d(Rs);Hp=f($e,"STRONG",{});var FF=d(Hp);YD=t(FF,"web3auth"),FF.forEach(n),VD=t($e," and "),qp=f($e,"STRONG",{});var iF=d(qp);XD=t(iF,"torus"),iF.forEach(n),JD=t($e," will require a Babel to compile from es6 if not already supported. See config for Babel and Webpack4 as follows"),$e.forEach(n),mt=u(s),Cs=f(s,"P",{});var vp=d(Cs);D(mo.$$.fragment,vp),KD=u(vp),Gp=f(vp,"STRONG",{});var CF=d(Gp);ZD=t(CF,"AND"),CF.forEach(n),QD=u(vp),D(uo.$$.fragment,vp),vp.forEach(n),ut=u(s),pp=f(s,"P",{});var AF=d(pp);Yp=f(AF,"STRONG",{});var fF=d(Yp);sy=t(fF,"babel.config.js"),fF.forEach(n),AF.forEach(n),gt=u(s),D(go.$$.fragment,s),ep=f(s,"P",{});var dF=d(ep);Vp=f(dF,"STRONG",{});var $F=d(Vp);ny=t($F,"webpack.config.js"),$F.forEach(n),dF.forEach(n),bt=u(s),D(bo.$$.fragment,s),zs=f(s,"H3",{id:!0,tabindex:!0});var Uy=d(zs);D(xn.$$.fragment,Uy),ay=t(Uy," Webpack 5"),Uy.forEach(n),ht=u(s),tp=f(s,"P",{});var mF=d(tp);ly=t(mF,"You'll need to add some dev dependencies with the following command:"),mF.forEach(n),wt=u(s),rp=f(s,"P",{});var uF=d(rp);D(ho.$$.fragment,uF),uF.forEach(n),Et=u(s),Tn=f(s,"P",{});var Kt=d(Tn);oy=t(Kt,"Then add the following to your "),D(wo.$$.fragment,Kt),py=t(Kt," file:"),Kt.forEach(n),Bt=u(s),D(Eo.$$.fragment,s),Ms=f(s,"H4",{id:!0,tabindex:!0});var Hy=d(Ms);D(On.$$.fragment,Hy),ey=t(Hy," If using create-react-app"),Hy.forEach(n),vt=u(s),Bo=f(s,"P",{});var qy=d(Bo);D(Sn.$$.fragment,qy),ty=t(qy," provides an similar way to override webpack config which is obfuscated in Create React App built applications."),qy.forEach(n),_t=u(s),Pn=f(s,"P",{});var Zt=d(Pn);ry=t(Zt,"The above webpack 5 example can be used in the "),D(vo.$$.fragment,Zt),cy=t(Zt," file at the root level in this case."),Zt.forEach(n),kt=u(s),_o=f(s,"P",{});var Gy=d(_o);D(jn.$$.fragment,Gy),Dy=t(Gy," is another option for working with Create React App DApps"),Gy.forEach(n),xt=u(s),ko=f(s,"P",{});var Yy=d(ko);yy=t(Yy,`Add the following dev dependencies:
`),D(xo.$$.fragment,Yy),Yy.forEach(n),Tt=u(s),cp=f(s,"P",{});var gF=d(cp);Xp=f(gF,"STRONG",{});var bF=d(Xp);Fy=t(bF,"OR"),bF.forEach(n),gF.forEach(n),Ot=u(s),Dp=f(s,"P",{});var hF=d(Dp);D(To.$$.fragment,hF),hF.forEach(n),St=u(s),D(Oo.$$.fragment,s),Ls=f(s,"H3",{id:!0,tabindex:!0});var Vy=d(Ls);D(In.$$.fragment,Vy),iy=t(Vy," SvelteKit"),Vy.forEach(n),Pt=u(s),yp=f(s,"P",{});var wF=d(yp);Cy=t(wF,"Add the following dev dependencies:"),wF.forEach(n),jt=u(s),Fp=f(s,"P",{});var EF=d(Fp);D(So.$$.fragment,EF),EF.forEach(n),It=u(s),Nn=f(s,"P",{});var Qt=d(Nn);Ay=t(Qt,"Then add the following to your "),D(Po.$$.fragment,Qt),fy=t(Qt," file:"),Qt.forEach(n),Nt=u(s),D(jo.$$.fragment,s),Ws=f(s,"H3",{id:!0,tabindex:!0});var Xy=d(Ws);D(Rn.$$.fragment,Xy),dy=t(Xy," Vite"),Xy.forEach(n),Rt=u(s),ip=f(s,"P",{});var BF=d(ip);$y=t(BF,"Add the following dev dependencies:"),BF.forEach(n),zt=u(s),Cp=f(s,"P",{});var vF=d(Cp);D(Io.$$.fragment,vF),vF.forEach(n),Mt=u(s),zn=f(s,"P",{});var sr=d(zn);my=t(sr,"Then add the following to your "),D(No.$$.fragment,sr),uy=t(sr," file:"),sr.forEach(n),Lt=u(s),D(Ro.$$.fragment,s),Us=f(s,"H3",{id:!0,tabindex:!0});var Jy=d(Us);D(Mn.$$.fragment,Jy),gy=t(Jy," Nuxt.js"),Jy.forEach(n),Wt=u(s),Ln=f(s,"P",{});var nr=d(Ln);by=t(nr,"Add the following to your "),D(zo.$$.fragment,nr),hy=t(nr,":"),nr.forEach(n),Ut=u(s),D(Mo.$$.fragment,s),this.h()},h(){w(k,"id","install"),w(k,"tabindex","-1"),w(x,"id","initialization"),w(x,"tabindex","-1"),w(ds,"id","options"),w(ds,"tabindex","-1"),w(ms,"id","initialization-example"),w(ms,"tabindex","-1"),w(us,"id","connecting-a-wallet"),w(us,"tabindex","-1"),w(gs,"id","example"),w(gs,"tabindex","-1"),w(bs,"id","auto-selecting-a-wallet"),w(bs,"tabindex","-1"),w(hs,"id","disconnecting-a-wallet"),w(hs,"tabindex","-1"),w(ws,"id","state"),w(ws,"tabindex","-1"),w(Es,"id","get-current-state"),w(Es,"tabindex","-1"),w(Bs,"id","subscribe-to-state-updates"),w(Bs,"tabindex","-1"),w(vs,"id","actions-to-modify-state"),w(vs,"tabindex","-1"),w(Ps,"id","setting-the-user-s-chain-network"),w(Ps,"tabindex","-1"),w(js,"id","custom-styling"),w(js,"tabindex","-1"),w(Is,"id","build-environments"),w(Is,"tabindex","-1"),w(Ns,"id","webpack-4"),w(Ns,"tabindex","-1"),w(zs,"id","webpack-5"),w(zs,"tabindex","-1"),w(Ms,"id","if-using-create-react-app"),w(Ms,"tabindex","-1"),w(Ls,"id","sveltekit"),w(Ls,"tabindex","-1"),w(Ws,"id","vite"),w(Ws,"tabindex","-1"),w(Us,"id","nuxt-js"),w(Us,"tabindex","-1")},m(s,a){r(s,o,a),l(o,p),r(s,$,a),r(s,v,a),l(v,h),r(s,_,a),r(s,k,a),y(P,k,null),l(k,J),r(s,Gs,a),r(s,os,a),l(os,ps),r(s,es,a),y(K,s,a),r(s,Ys,a),r(s,ts,a),l(ts,rs),r(s,cs,a),y(Z,s,a),r(s,Vs,a),y(V,s,a),r(s,j,a),r(s,x,a),y(U,x,null),l(x,Ds),r(s,Xs,a),r(s,fs,a),l(fs,Vn),r(s,Xn,a),y(Jn,s,a),r(s,ds,a),y(Js,ds,null),l(ds,or),r(s,me,a),r(s,Kn,a),l(Kn,_p),y(Zn,_p,null),l(Kn,pr),r(s,ue,a),r(s,Qn,a),l(Qn,kp),y(sa,kp,null),l(Qn,er),r(s,ge,a),y(na,s,a),r(s,aa,a),l(aa,xp),y(la,xp,null),l(aa,tr),r(s,be,a),y(oa,s,a),r(s,$s,a),l($s,Tp),y(pa,Tp,null),l($s,rr),y(ea,$s,null),l($s,cr),r(s,he,a),y(ta,s,a),r(s,ys,a),l(ys,Dr),y(Ks,ys,null),l(ys,yr),y(Zs,ys,null),l(ys,Fr),r(s,we,a),r(s,ra,a),l(ra,Op),y(ca,Op,null),l(ra,ir),r(s,Ee,a),y(Da,s,a),r(s,ya,a),l(ya,Sp),y(Fa,Sp,null),l(ya,Cr),r(s,Be,a),r(s,Qs,a),l(Qs,Pp),l(Pp,Ar),l(Qs,fr),y(sn,Qs,null),r(s,ve,a),y(ia,s,a),r(s,L,a),l(L,jp),y(Ca,jp,null),l(L,dr),y(Aa,L,null),l(L,$r),y(fa,L,null),l(L,mr),y(da,L,null),l(L,ur),y($a,L,null),l(L,gr),r(s,_e,a),r(s,R,a),l(R,Uo),y(ma,Uo,null),l(Uo,br),l(R,hr),l(R,ua),y(ga,ua,null),l(ua,wr),y(nn,ua,null),l(R,Er),l(R,an),y(ba,an,null),l(an,Br),y(ha,an,null),l(an,vr),l(R,_r),l(R,ln),y(wa,ln,null),l(ln,kr),y(Ea,ln,null),l(ln,xr),l(R,Tr),l(R,Ho),y(Ba,Ho,null),l(Ho,Or),l(R,Sr),l(R,qo),y(va,qo,null),l(qo,Pr),r(s,ke,a),r(s,Fs,a),l(Fs,jr),y(_a,Fs,null),l(Fs,Ir),y(ka,Fs,null),l(Fs,Nr),r(s,xe,a),r(s,Go,a),l(Go,Rr),r(s,Te,a),y(xa,s,a),y(Ta,s,a),r(s,ms,a),y(on,ms,null),l(ms,zr),r(s,Oe,a),r(s,Yo,a),l(Yo,Mr),r(s,Se,a),y(Oa,s,a),r(s,us,a),y(pn,us,null),l(us,Lr),r(s,Pe,a),r(s,z,a),l(z,Wr),y(Sa,z,null),l(z,Ur),y(Pa,z,null),l(z,Hr),y(ja,z,null),l(z,qr),y(Ia,z,null),l(z,Gr),y(Na,z,null),l(z,Yr),r(s,je,a),r(s,gs,a),y(en,gs,null),l(gs,Vr),r(s,Ie,a),y(Ra,s,a),r(s,bs,a),y(tn,bs,null),l(bs,Xr),r(s,Ne,a),r(s,rn,a),l(rn,Jr),y(za,rn,null),l(rn,Kr),r(s,Re,a),y(Ma,s,a),r(s,Vo,a),l(Vo,Zr),r(s,ze,a),y(La,s,a),r(s,hs,a),y(cn,hs,null),l(hs,Qr),r(s,Me,a),r(s,Dn,a),l(Dn,sc),y(Wa,Dn,null),l(Dn,nc),r(s,Le,a),y(Ua,s,a),r(s,H,a),l(H,ac),y(Ha,H,null),l(H,lc),y(qa,H,null),l(H,oc),y(Ga,H,null),l(H,pc),y(Ya,H,null),l(H,ec),r(s,We,a),r(s,ws,a),y(yn,ws,null),l(ws,tc),r(s,Ue,a),r(s,Xo,a),l(Xo,rc),r(s,He,a),r(s,Q,a),l(Q,Jo),y(Va,Jo,null),l(Jo,cc),l(Q,Dc),l(Q,Ko),y(Xa,Ko,null),l(Ko,yc),l(Q,Fc),l(Q,Zo),y(Ja,Zo,null),l(Zo,ic),l(Q,Cc),l(Q,Qo),y(Ka,Qo,null),l(Qo,Ac),r(s,qe,a),y(Za,s,a),r(s,Es,a),y(Fn,Es,null),l(Es,fc),r(s,Ge,a),r(s,Cn,a),l(Cn,dc),y(Qa,Cn,null),l(Cn,$c),r(s,Ye,a),y(sl,s,a),r(s,Bs,a),y(An,Bs,null),l(Bs,mc),r(s,Ve,a),r(s,ss,a),l(ss,uc),y(nl,ss,null),l(ss,gc),y(al,ss,null),l(ss,bc),y(fn,ss,null),l(ss,hc),r(s,Xe,a),r(s,dn,a),l(dn,wc),y(ll,dn,null),l(dn,Ec),r(s,Je,a),y(ol,s,a),r(s,$n,a),l($n,Bc),y(pl,$n,null),l($n,vc),r(s,Ke,a),y(el,s,a),r(s,vs,a),y(mn,vs,null),l(vs,_c),r(s,Ze,a),r(s,sp,a),l(sp,kc),r(s,Qe,a),r(s,_s,a),l(_s,Ip),y(tl,Ip,null),l(_s,xc),y(rl,_s,null),l(_s,Tc),r(s,st,a),y(cl,s,a),r(s,ks,a),l(ks,Np),y(Dl,Np,null),l(ks,Oc),y(yl,ks,null),l(ks,Sc),r(s,nt,a),y(Fl,s,a),r(s,xs,a),l(xs,Rp),y(il,Rp,null),l(xs,Pc),y(Cl,xs,null),l(xs,jc),r(s,at,a),y(Al,s,a),r(s,Ts,a),l(Ts,zp),y(fl,zp,null),l(Ts,Ic),y(dl,Ts,null),l(Ts,Nc),r(s,lt,a),y($l,s,a),r(s,T,a),l(T,Mp),y(ml,Mp,null),l(T,Rc),y(ul,T,null),l(T,zc),y(gl,T,null),l(T,Mc),y(bl,T,null),l(T,Lc),y(hl,T,null),l(T,Wc),y(wl,T,null),l(T,Uc),y(El,T,null),l(T,Hc),y(Bl,T,null),l(T,qc),y(vl,T,null),l(T,Gc),r(s,ot,a),y(_l,s,a),r(s,N,a),l(N,Lp),y(kl,Lp,null),l(N,Yc),y(xl,N,null),l(N,Vc),y(Tl,N,null),l(N,Xc),y(Ol,N,null),l(N,Jc),y(Sl,N,null),l(N,Kc),y(Pl,N,null),l(N,Zc),r(s,pt,a),r(s,np,a),l(np,Qc),r(s,et,a),r(s,I,a),l(I,ap),y(jl,ap,null),l(ap,sD),l(I,nD),l(I,lp),y(Il,lp,null),l(lp,aD),l(I,lD),l(I,un),y(Nl,un,null),l(un,oD),y(Rl,un,null),l(un,pD),l(I,eD),l(I,q),y(zl,q,null),l(q,tD),y(Ml,q,null),l(q,rD),y(Ll,q,null),l(q,cD),y(Wl,q,null),l(q,DD),y(Ul,q,null),l(q,yD),l(I,FD),l(I,gn),y(Hl,gn,null),l(gn,iD),y(ql,gn,null),l(gn,CD),l(I,AD),l(I,bn),y(Gl,bn,null),l(bn,fD),y(Yl,bn,null),l(bn,dD),l(I,$D),l(I,hn),y(Vl,hn,null),l(hn,mD),y(Xl,hn,null),l(hn,uD),r(s,tt,a),y(Jl,s,a),y(Kl,s,a),r(s,Os,a),l(Os,Wp),y(Zl,Wp,null),l(Os,gD),y(Ql,Os,null),l(Os,bD),r(s,rt,a),y(so,s,a),r(s,Ss,a),l(Ss,Up),y(no,Up,null),l(Ss,hD),y(ao,Ss,null),l(Ss,wD),r(s,ct,a),y(lo,s,a),r(s,Ps,a),y(wn,Ps,null),l(Ps,ED),r(s,Dt,a),r(s,En,a),l(En,BD),y(oo,En,null),l(En,vD),r(s,yt,a),y(po,s,a),r(s,O,a),l(O,_D),y(eo,O,null),l(O,kD),y(to,O,null),l(O,xD),y(ro,O,null),l(O,TD),y(co,O,null),l(O,OD),y(Do,O,null),l(O,SD),y(yo,O,null),l(O,PD),y(Fo,O,null),l(O,jD),r(s,Ft,a),r(s,js,a),y(Bn,js,null),l(js,ID),r(s,it,a),r(s,is,a),l(is,ND),y(vn,is,null),l(is,RD),y(io,is,null),l(is,zD),r(s,Ct,a),y(Co,s,a),r(s,Is,a),y(_n,Is,null),l(Is,MD),r(s,At,a),r(s,ns,a),l(ns,LD),y(Ao,ns,null),l(ns,WD),y(fo,ns,null),l(ns,UD),y($o,ns,null),l(ns,HD),r(s,ft,a),r(s,Ns,a),y(kn,Ns,null),l(Ns,qD),r(s,dt,a),r(s,op,a),l(op,GD),r(s,$t,a),r(s,Rs,a),l(Rs,Hp),l(Hp,YD),l(Rs,VD),l(Rs,qp),l(qp,XD),l(Rs,JD),r(s,mt,a),r(s,Cs,a),y(mo,Cs,null),l(Cs,KD),l(Cs,Gp),l(Gp,ZD),l(Cs,QD),y(uo,Cs,null),r(s,ut,a),r(s,pp,a),l(pp,Yp),l(Yp,sy),r(s,gt,a),y(go,s,a),r(s,ep,a),l(ep,Vp),l(Vp,ny),r(s,bt,a),y(bo,s,a),r(s,zs,a),y(xn,zs,null),l(zs,ay),r(s,ht,a),r(s,tp,a),l(tp,ly),r(s,wt,a),r(s,rp,a),y(ho,rp,null),r(s,Et,a),r(s,Tn,a),l(Tn,oy),y(wo,Tn,null),l(Tn,py),r(s,Bt,a),y(Eo,s,a),r(s,Ms,a),y(On,Ms,null),l(Ms,ey),r(s,vt,a),r(s,Bo,a),y(Sn,Bo,null),l(Bo,ty),r(s,_t,a),r(s,Pn,a),l(Pn,ry),y(vo,Pn,null),l(Pn,cy),r(s,kt,a),r(s,_o,a),y(jn,_o,null),l(_o,Dy),r(s,xt,a),r(s,ko,a),l(ko,yy),y(xo,ko,null),r(s,Tt,a),r(s,cp,a),l(cp,Xp),l(Xp,Fy),r(s,Ot,a),r(s,Dp,a),y(To,Dp,null),r(s,St,a),y(Oo,s,a),r(s,Ls,a),y(In,Ls,null),l(Ls,iy),r(s,Pt,a),r(s,yp,a),l(yp,Cy),r(s,jt,a),r(s,Fp,a),y(So,Fp,null),r(s,It,a),r(s,Nn,a),l(Nn,Ay),y(Po,Nn,null),l(Nn,fy),r(s,Nt,a),y(jo,s,a),r(s,Ws,a),y(Rn,Ws,null),l(Ws,dy),r(s,Rt,a),r(s,ip,a),l(ip,$y),r(s,zt,a),r(s,Cp,a),y(Io,Cp,null),r(s,Mt,a),r(s,zn,a),l(zn,my),y(No,zn,null),l(zn,uy),r(s,Lt,a),y(Ro,s,a),r(s,Us,a),y(Mn,Us,null),l(Us,gy),r(s,Wt,a),r(s,Ln,a),l(Ln,by),y(zo,Ln,null),l(Ln,hy),r(s,Ut,a),y(Mo,s,a),Ht=!0},p(s,[a]){const Jp={};a&1&&(Jp.$$scope={dirty:a,ctx:s}),P.$set(Jp);const Ap={};a&1&&(Ap.$$scope={dirty:a,ctx:s}),K.$set(Ap);const Kp={};a&1&&(Kp.$$scope={dirty:a,ctx:s}),Z.$set(Kp);const Zp={};a&1&&(Zp.$$scope={dirty:a,ctx:s}),V.$set(Zp);const fp={};a&1&&(fp.$$scope={dirty:a,ctx:s}),U.$set(fp);const Qp={};a&1&&(Qp.$$scope={dirty:a,ctx:s}),Js.$set(Qp);const dp={};a&1&&(dp.$$scope={dirty:a,ctx:s}),Ks.$set(dp);const $p={};a&1&&($p.$$scope={dirty:a,ctx:s}),Zs.$set($p);const se={};a&1&&(se.$$scope={dirty:a,ctx:s}),sn.$set(se);const mp={};a&1&&(mp.$$scope={dirty:a,ctx:s}),nn.$set(mp);const ne={};a&1&&(ne.$$scope={dirty:a,ctx:s}),on.$set(ne);const up={};a&1&&(up.$$scope={dirty:a,ctx:s}),pn.$set(up);const ae={};a&1&&(ae.$$scope={dirty:a,ctx:s}),en.$set(ae);const Wn={};a&1&&(Wn.$$scope={dirty:a,ctx:s}),tn.$set(Wn);const le={};a&1&&(le.$$scope={dirty:a,ctx:s}),cn.$set(le);const Hs={};a&1&&(Hs.$$scope={dirty:a,ctx:s}),yn.$set(Hs);const gp={};a&1&&(gp.$$scope={dirty:a,ctx:s}),Fn.$set(gp);const oe={};a&1&&(oe.$$scope={dirty:a,ctx:s}),An.$set(oe);const bp={};a&1&&(bp.$$scope={dirty:a,ctx:s}),fn.$set(bp);const pe={};a&1&&(pe.$$scope={dirty:a,ctx:s}),mn.$set(pe);const Lo={};a&1&&(Lo.$$scope={dirty:a,ctx:s}),wn.$set(Lo);const ee={};a&1&&(ee.$$scope={dirty:a,ctx:s}),Bn.$set(ee);const G={};a&1&&(G.$$scope={dirty:a,ctx:s}),vn.$set(G);const te={};a&1&&(te.$$scope={dirty:a,ctx:s}),_n.$set(te);const W={};a&1&&(W.$$scope={dirty:a,ctx:s}),kn.$set(W);const hp={};a&1&&(hp.$$scope={dirty:a,ctx:s}),xn.$set(hp);const Wo={};a&1&&(Wo.$$scope={dirty:a,ctx:s}),On.$set(Wo);const Un={};a&1&&(Un.$$scope={dirty:a,ctx:s}),Sn.$set(Un);const Hn={};a&1&&(Hn.$$scope={dirty:a,ctx:s}),jn.$set(Hn);const wp={};a&1&&(wp.$$scope={dirty:a,ctx:s}),In.$set(wp);const Ep={};a&1&&(Ep.$$scope={dirty:a,ctx:s}),Rn.$set(Ep);const qs={};a&1&&(qs.$$scope={dirty:a,ctx:s}),Mn.$set(qs)},i(s){Ht||(F(P.$$.fragment,s),F(K.$$.fragment,s),F(Z.$$.fragment,s),F(V.$$.fragment,s),F(U.$$.fragment,s),F(Jn.$$.fragment,s),F(Js.$$.fragment,s),F(Zn.$$.fragment,s),F(sa.$$.fragment,s),F(na.$$.fragment,s),F(la.$$.fragment,s),F(oa.$$.fragment,s),F(pa.$$.fragment,s),F(ea.$$.fragment,s),F(ta.$$.fragment,s),F(Ks.$$.fragment,s),F(Zs.$$.fragment,s),F(ca.$$.fragment,s),F(Da.$$.fragment,s),F(Fa.$$.fragment,s),F(sn.$$.fragment,s),F(ia.$$.fragment,s),F(Ca.$$.fragment,s),F(Aa.$$.fragment,s),F(fa.$$.fragment,s),F(da.$$.fragment,s),F($a.$$.fragment,s),F(ma.$$.fragment,s),F(ga.$$.fragment,s),F(nn.$$.fragment,s),F(ba.$$.fragment,s),F(ha.$$.fragment,s),F(wa.$$.fragment,s),F(Ea.$$.fragment,s),F(Ba.$$.fragment,s),F(va.$$.fragment,s),F(_a.$$.fragment,s),F(ka.$$.fragment,s),F(xa.$$.fragment,s),F(Ta.$$.fragment,s),F(on.$$.fragment,s),F(Oa.$$.fragment,s),F(pn.$$.fragment,s),F(Sa.$$.fragment,s),F(Pa.$$.fragment,s),F(ja.$$.fragment,s),F(Ia.$$.fragment,s),F(Na.$$.fragment,s),F(en.$$.fragment,s),F(Ra.$$.fragment,s),F(tn.$$.fragment,s),F(za.$$.fragment,s),F(Ma.$$.fragment,s),F(La.$$.fragment,s),F(cn.$$.fragment,s),F(Wa.$$.fragment,s),F(Ua.$$.fragment,s),F(Ha.$$.fragment,s),F(qa.$$.fragment,s),F(Ga.$$.fragment,s),F(Ya.$$.fragment,s),F(yn.$$.fragment,s),F(Va.$$.fragment,s),F(Xa.$$.fragment,s),F(Ja.$$.fragment,s),F(Ka.$$.fragment,s),F(Za.$$.fragment,s),F(Fn.$$.fragment,s),F(Qa.$$.fragment,s),F(sl.$$.fragment,s),F(An.$$.fragment,s),F(nl.$$.fragment,s),F(al.$$.fragment,s),F(fn.$$.fragment,s),F(ll.$$.fragment,s),F(ol.$$.fragment,s),F(pl.$$.fragment,s),F(el.$$.fragment,s),F(mn.$$.fragment,s),F(tl.$$.fragment,s),F(rl.$$.fragment,s),F(cl.$$.fragment,s),F(Dl.$$.fragment,s),F(yl.$$.fragment,s),F(Fl.$$.fragment,s),F(il.$$.fragment,s),F(Cl.$$.fragment,s),F(Al.$$.fragment,s),F(fl.$$.fragment,s),F(dl.$$.fragment,s),F($l.$$.fragment,s),F(ml.$$.fragment,s),F(ul.$$.fragment,s),F(gl.$$.fragment,s),F(bl.$$.fragment,s),F(hl.$$.fragment,s),F(wl.$$.fragment,s),F(El.$$.fragment,s),F(Bl.$$.fragment,s),F(vl.$$.fragment,s),F(_l.$$.fragment,s),F(kl.$$.fragment,s),F(xl.$$.fragment,s),F(Tl.$$.fragment,s),F(Ol.$$.fragment,s),F(Sl.$$.fragment,s),F(Pl.$$.fragment,s),F(jl.$$.fragment,s),F(Il.$$.fragment,s),F(Nl.$$.fragment,s),F(Rl.$$.fragment,s),F(zl.$$.fragment,s),F(Ml.$$.fragment,s),F(Ll.$$.fragment,s),F(Wl.$$.fragment,s),F(Ul.$$.fragment,s),F(Hl.$$.fragment,s),F(ql.$$.fragment,s),F(Gl.$$.fragment,s),F(Yl.$$.fragment,s),F(Vl.$$.fragment,s),F(Xl.$$.fragment,s),F(Jl.$$.fragment,s),F(Kl.$$.fragment,s),F(Zl.$$.fragment,s),F(Ql.$$.fragment,s),F(so.$$.fragment,s),F(no.$$.fragment,s),F(ao.$$.fragment,s),F(lo.$$.fragment,s),F(wn.$$.fragment,s),F(oo.$$.fragment,s),F(po.$$.fragment,s),F(eo.$$.fragment,s),F(to.$$.fragment,s),F(ro.$$.fragment,s),F(co.$$.fragment,s),F(Do.$$.fragment,s),F(yo.$$.fragment,s),F(Fo.$$.fragment,s),F(Bn.$$.fragment,s),F(vn.$$.fragment,s),F(io.$$.fragment,s),F(Co.$$.fragment,s),F(_n.$$.fragment,s),F(Ao.$$.fragment,s),F(fo.$$.fragment,s),F($o.$$.fragment,s),F(kn.$$.fragment,s),F(mo.$$.fragment,s),F(uo.$$.fragment,s),F(go.$$.fragment,s),F(bo.$$.fragment,s),F(xn.$$.fragment,s),F(ho.$$.fragment,s),F(wo.$$.fragment,s),F(Eo.$$.fragment,s),F(On.$$.fragment,s),F(Sn.$$.fragment,s),F(vo.$$.fragment,s),F(jn.$$.fragment,s),F(xo.$$.fragment,s),F(To.$$.fragment,s),F(Oo.$$.fragment,s),F(In.$$.fragment,s),F(So.$$.fragment,s),F(Po.$$.fragment,s),F(jo.$$.fragment,s),F(Rn.$$.fragment,s),F(Io.$$.fragment,s),F(No.$$.fragment,s),F(Ro.$$.fragment,s),F(Mn.$$.fragment,s),F(zo.$$.fragment,s),F(Mo.$$.fragment,s),Ht=!0)},o(s){i(P.$$.fragment,s),i(K.$$.fragment,s),i(Z.$$.fragment,s),i(V.$$.fragment,s),i(U.$$.fragment,s),i(Jn.$$.fragment,s),i(Js.$$.fragment,s),i(Zn.$$.fragment,s),i(sa.$$.fragment,s),i(na.$$.fragment,s),i(la.$$.fragment,s),i(oa.$$.fragment,s),i(pa.$$.fragment,s),i(ea.$$.fragment,s),i(ta.$$.fragment,s),i(Ks.$$.fragment,s),i(Zs.$$.fragment,s),i(ca.$$.fragment,s),i(Da.$$.fragment,s),i(Fa.$$.fragment,s),i(sn.$$.fragment,s),i(ia.$$.fragment,s),i(Ca.$$.fragment,s),i(Aa.$$.fragment,s),i(fa.$$.fragment,s),i(da.$$.fragment,s),i($a.$$.fragment,s),i(ma.$$.fragment,s),i(ga.$$.fragment,s),i(nn.$$.fragment,s),i(ba.$$.fragment,s),i(ha.$$.fragment,s),i(wa.$$.fragment,s),i(Ea.$$.fragment,s),i(Ba.$$.fragment,s),i(va.$$.fragment,s),i(_a.$$.fragment,s),i(ka.$$.fragment,s),i(xa.$$.fragment,s),i(Ta.$$.fragment,s),i(on.$$.fragment,s),i(Oa.$$.fragment,s),i(pn.$$.fragment,s),i(Sa.$$.fragment,s),i(Pa.$$.fragment,s),i(ja.$$.fragment,s),i(Ia.$$.fragment,s),i(Na.$$.fragment,s),i(en.$$.fragment,s),i(Ra.$$.fragment,s),i(tn.$$.fragment,s),i(za.$$.fragment,s),i(Ma.$$.fragment,s),i(La.$$.fragment,s),i(cn.$$.fragment,s),i(Wa.$$.fragment,s),i(Ua.$$.fragment,s),i(Ha.$$.fragment,s),i(qa.$$.fragment,s),i(Ga.$$.fragment,s),i(Ya.$$.fragment,s),i(yn.$$.fragment,s),i(Va.$$.fragment,s),i(Xa.$$.fragment,s),i(Ja.$$.fragment,s),i(Ka.$$.fragment,s),i(Za.$$.fragment,s),i(Fn.$$.fragment,s),i(Qa.$$.fragment,s),i(sl.$$.fragment,s),i(An.$$.fragment,s),i(nl.$$.fragment,s),i(al.$$.fragment,s),i(fn.$$.fragment,s),i(ll.$$.fragment,s),i(ol.$$.fragment,s),i(pl.$$.fragment,s),i(el.$$.fragment,s),i(mn.$$.fragment,s),i(tl.$$.fragment,s),i(rl.$$.fragment,s),i(cl.$$.fragment,s),i(Dl.$$.fragment,s),i(yl.$$.fragment,s),i(Fl.$$.fragment,s),i(il.$$.fragment,s),i(Cl.$$.fragment,s),i(Al.$$.fragment,s),i(fl.$$.fragment,s),i(dl.$$.fragment,s),i($l.$$.fragment,s),i(ml.$$.fragment,s),i(ul.$$.fragment,s),i(gl.$$.fragment,s),i(bl.$$.fragment,s),i(hl.$$.fragment,s),i(wl.$$.fragment,s),i(El.$$.fragment,s),i(Bl.$$.fragment,s),i(vl.$$.fragment,s),i(_l.$$.fragment,s),i(kl.$$.fragment,s),i(xl.$$.fragment,s),i(Tl.$$.fragment,s),i(Ol.$$.fragment,s),i(Sl.$$.fragment,s),i(Pl.$$.fragment,s),i(jl.$$.fragment,s),i(Il.$$.fragment,s),i(Nl.$$.fragment,s),i(Rl.$$.fragment,s),i(zl.$$.fragment,s),i(Ml.$$.fragment,s),i(Ll.$$.fragment,s),i(Wl.$$.fragment,s),i(Ul.$$.fragment,s),i(Hl.$$.fragment,s),i(ql.$$.fragment,s),i(Gl.$$.fragment,s),i(Yl.$$.fragment,s),i(Vl.$$.fragment,s),i(Xl.$$.fragment,s),i(Jl.$$.fragment,s),i(Kl.$$.fragment,s),i(Zl.$$.fragment,s),i(Ql.$$.fragment,s),i(so.$$.fragment,s),i(no.$$.fragment,s),i(ao.$$.fragment,s),i(lo.$$.fragment,s),i(wn.$$.fragment,s),i(oo.$$.fragment,s),i(po.$$.fragment,s),i(eo.$$.fragment,s),i(to.$$.fragment,s),i(ro.$$.fragment,s),i(co.$$.fragment,s),i(Do.$$.fragment,s),i(yo.$$.fragment,s),i(Fo.$$.fragment,s),i(Bn.$$.fragment,s),i(vn.$$.fragment,s),i(io.$$.fragment,s),i(Co.$$.fragment,s),i(_n.$$.fragment,s),i(Ao.$$.fragment,s),i(fo.$$.fragment,s),i($o.$$.fragment,s),i(kn.$$.fragment,s),i(mo.$$.fragment,s),i(uo.$$.fragment,s),i(go.$$.fragment,s),i(bo.$$.fragment,s),i(xn.$$.fragment,s),i(ho.$$.fragment,s),i(wo.$$.fragment,s),i(Eo.$$.fragment,s),i(On.$$.fragment,s),i(Sn.$$.fragment,s),i(vo.$$.fragment,s),i(jn.$$.fragment,s),i(xo.$$.fragment,s),i(To.$$.fragment,s),i(Oo.$$.fragment,s),i(In.$$.fragment,s),i(So.$$.fragment,s),i(Po.$$.fragment,s),i(jo.$$.fragment,s),i(Rn.$$.fragment,s),i(Io.$$.fragment,s),i(No.$$.fragment,s),i(Ro.$$.fragment,s),i(Mn.$$.fragment,s),i(zo.$$.fragment,s),i(Mo.$$.fragment,s),Ht=!1},d(s){s&&n(o),s&&n($),s&&n(v),s&&n(_),s&&n(k),C(P),s&&n(Gs),s&&n(os),s&&n(es),C(K,s),s&&n(Ys),s&&n(ts),s&&n(cs),C(Z,s),s&&n(Vs),C(V,s),s&&n(j),s&&n(x),C(U),s&&n(Xs),s&&n(fs),s&&n(Xn),C(Jn,s),s&&n(ds),C(Js),s&&n(me),s&&n(Kn),C(Zn),s&&n(ue),s&&n(Qn),C(sa),s&&n(ge),C(na,s),s&&n(aa),C(la),s&&n(be),C(oa,s),s&&n($s),C(pa),C(ea),s&&n(he),C(ta,s),s&&n(ys),C(Ks),C(Zs),s&&n(we),s&&n(ra),C(ca),s&&n(Ee),C(Da,s),s&&n(ya),C(Fa),s&&n(Be),s&&n(Qs),C(sn),s&&n(ve),C(ia,s),s&&n(L),C(Ca),C(Aa),C(fa),C(da),C($a),s&&n(_e),s&&n(R),C(ma),C(ga),C(nn),C(ba),C(ha),C(wa),C(Ea),C(Ba),C(va),s&&n(ke),s&&n(Fs),C(_a),C(ka),s&&n(xe),s&&n(Go),s&&n(Te),C(xa,s),C(Ta,s),s&&n(ms),C(on),s&&n(Oe),s&&n(Yo),s&&n(Se),C(Oa,s),s&&n(us),C(pn),s&&n(Pe),s&&n(z),C(Sa),C(Pa),C(ja),C(Ia),C(Na),s&&n(je),s&&n(gs),C(en),s&&n(Ie),C(Ra,s),s&&n(bs),C(tn),s&&n(Ne),s&&n(rn),C(za),s&&n(Re),C(Ma,s),s&&n(Vo),s&&n(ze),C(La,s),s&&n(hs),C(cn),s&&n(Me),s&&n(Dn),C(Wa),s&&n(Le),C(Ua,s),s&&n(H),C(Ha),C(qa),C(Ga),C(Ya),s&&n(We),s&&n(ws),C(yn),s&&n(Ue),s&&n(Xo),s&&n(He),s&&n(Q),C(Va),C(Xa),C(Ja),C(Ka),s&&n(qe),C(Za,s),s&&n(Es),C(Fn),s&&n(Ge),s&&n(Cn),C(Qa),s&&n(Ye),C(sl,s),s&&n(Bs),C(An),s&&n(Ve),s&&n(ss),C(nl),C(al),C(fn),s&&n(Xe),s&&n(dn),C(ll),s&&n(Je),C(ol,s),s&&n($n),C(pl),s&&n(Ke),C(el,s),s&&n(vs),C(mn),s&&n(Ze),s&&n(sp),s&&n(Qe),s&&n(_s),C(tl),C(rl),s&&n(st),C(cl,s),s&&n(ks),C(Dl),C(yl),s&&n(nt),C(Fl,s),s&&n(xs),C(il),C(Cl),s&&n(at),C(Al,s),s&&n(Ts),C(fl),C(dl),s&&n(lt),C($l,s),s&&n(T),C(ml),C(ul),C(gl),C(bl),C(hl),C(wl),C(El),C(Bl),C(vl),s&&n(ot),C(_l,s),s&&n(N),C(kl),C(xl),C(Tl),C(Ol),C(Sl),C(Pl),s&&n(pt),s&&n(np),s&&n(et),s&&n(I),C(jl),C(Il),C(Nl),C(Rl),C(zl),C(Ml),C(Ll),C(Wl),C(Ul),C(Hl),C(ql),C(Gl),C(Yl),C(Vl),C(Xl),s&&n(tt),C(Jl,s),C(Kl,s),s&&n(Os),C(Zl),C(Ql),s&&n(rt),C(so,s),s&&n(Ss),C(no),C(ao),s&&n(ct),C(lo,s),s&&n(Ps),C(wn),s&&n(Dt),s&&n(En),C(oo),s&&n(yt),C(po,s),s&&n(O),C(eo),C(to),C(ro),C(co),C(Do),C(yo),C(Fo),s&&n(Ft),s&&n(js),C(Bn),s&&n(it),s&&n(is),C(vn),C(io),s&&n(Ct),C(Co,s),s&&n(Is),C(_n),s&&n(At),s&&n(ns),C(Ao),C(fo),C($o),s&&n(ft),s&&n(Ns),C(kn),s&&n(dt),s&&n(op),s&&n($t),s&&n(Rs),s&&n(mt),s&&n(Cs),C(mo),C(uo),s&&n(ut),s&&n(pp),s&&n(gt),C(go,s),s&&n(ep),s&&n(bt),C(bo,s),s&&n(zs),C(xn),s&&n(ht),s&&n(tp),s&&n(wt),s&&n(rp),C(ho),s&&n(Et),s&&n(Tn),C(wo),s&&n(Bt),C(Eo,s),s&&n(Ms),C(On),s&&n(vt),s&&n(Bo),C(Sn),s&&n(_t),s&&n(Pn),C(vo),s&&n(kt),s&&n(_o),C(jn),s&&n(xt),s&&n(ko),C(xo),s&&n(Tt),s&&n(cp),s&&n(Ot),s&&n(Dp),C(To),s&&n(St),C(Oo,s),s&&n(Ls),C(In),s&&n(Pt),s&&n(yp),s&&n(jt),s&&n(Fp),C(So),s&&n(It),s&&n(Nn),C(Po),s&&n(Nt),C(jo,s),s&&n(Ws),C(Rn),s&&n(Rt),s&&n(ip),s&&n(zt),s&&n(Cp),C(Io),s&&n(Mt),s&&n(zn),C(No),s&&n(Lt),C(Ro,s),s&&n(Us),C(Mn),s&&n(Wt),s&&n(Ln),C(zo),s&&n(Ut),C(Mo,s)}}}class vi extends kF{constructor(o){super(),xF(this,o,null,fi,TF,{})}}export{vi as default};
