import{S as _o,i as wo,s as Eo,e as d,t,k as A,w as c,c as g,a as b,h as r,d as a,m as u,x as D,b as m,g as p,M as $,y as F,q as y,o as i,B as f,E as Oe}from"../../../chunks/index-4af071d0.js";import"../../../chunks/scroll-9ce8c56b.js";import{C as v}from"../../../chunks/CodeFence-7c02fe57.js";import{C as w}from"../../../chunks/CodeInline-7947d9bd.js";import{L as _}from"../../../chunks/Link-5aa5b43b.js";/* empty css                                                            */import{T as vo,a as ho}from"../../../chunks/Tabs-6a4561b3.js";import"../../../chunks/singletons-13ae2ec1.js";import"../../../chunks/contexts-e4ffdb2f.js";function xo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function ko(C){let e,n;return e=new v({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/vue
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/vue</span></span>
<span class="line"></span></code></pre>`}}),{c(){c(e.$$.fragment)},l(o){D(e.$$.fragment,o)},m(o,h){F(e,o,h),n=!0},p:Oe,i(o){n||(y(e.$$.fragment,o),n=!0)},o(o){i(e.$$.fragment,o),n=!1},d(o){f(e,o)}}}function Oo(C){let e,n;return e=new v({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/vue
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/vue</span></span>
<span class="line"></span></code></pre>`}}),{c(){c(e.$$.fragment)},l(o){D(e.$$.fragment,o)},m(o,h){F(e,o,h),n=!0},p:Oe,i(o){n||(y(e.$$.fragment,o),n=!0)},o(o){i(e.$$.fragment,o),n=!1},d(o){f(e,o)}}}function Wo(C){let e,n,o,h;return e=new ho({props:{value:"yarn",$$slots:{default:[ko]},$$scope:{ctx:C}}}),o=new ho({props:{value:"npm",$$slots:{default:[Oo]},$$scope:{ctx:C}}}),{c(){c(e.$$.fragment),n=A(),c(o.$$.fragment)},l(E){D(e.$$.fragment,E),n=u(E),D(o.$$.fragment,E)},m(E,x){F(e,E,x),p(E,n,x),F(o,E,x),h=!0},p(E,x){const O={};x&1&&(O.$$scope={dirty:x,ctx:E}),e.$set(O);const H={};x&1&&(H.$$scope={dirty:x,ctx:E}),o.$set(H)},i(E){h||(y(e.$$.fragment,E),y(o.$$.fragment,E),h=!0)},o(E){i(e.$$.fragment,E),i(o.$$.fragment,E),h=!1},d(E){f(e,E),E&&a(n),f(o,E)}}}function jo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Ho(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Po(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function qo(C){let e,n,o;return n=new w({props:{code:"@web3-onboard/core"}}),{c(){e=t("initialization docs for "),c(n.$$.fragment)},l(h){e=r(h,"initialization docs for "),D(n.$$.fragment,h)},m(h,E){p(h,e,E),F(n,h,E),o=!0},p:Oe,i(h){o||(y(n.$$.fragment,h),o=!0)},o(h){i(n.$$.fragment,h),o=!1},d(h){h&&a(e),f(n,h)}}}function Mo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Bo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function To(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Ro(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function No(C){let e,n,o;return n=new w({props:{code:"@web3-onboard/core"}}),{c(){e=t("connecting a wallet for "),c(n.$$.fragment)},l(h){e=r(h,"connecting a wallet for "),D(n.$$.fragment,h)},m(h,E){p(h,e,E),F(n,h,E),o=!0},p:Oe,i(h){o||(y(n.$$.fragment,h),o=!0)},o(h){i(n.$$.fragment,h),o=!1},d(h){h&&a(e),f(n,h)}}}function Vo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function So(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Io(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Uo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Ko(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function zo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Go(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Yo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Lo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Qo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Jo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Xo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Zo(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function st(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function nt(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function at(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function lt(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function et(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function pt(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function ot(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function tt(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function rt(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function ct(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Dt(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function Ft(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function yt(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function it(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function ft(C){let e;return{c(){e=t("#")},l(n){e=r(n,"#")},m(n,o){p(n,e,o)},d(n){n&&a(e)}}}function $t(C){let e,n,o,h,E,x,O,H,We,fl,us,$l,L,ms,je,Cl,rn,Q,ds,He,Al,P,gs,Pe,cn,ul,k,qe,Dn,Me,Fn,Be,yn,Te,bs,ml,J,hs,Re,dl,fn,q,_s,Ne,$n,gl,X,Cn,Ve,An,Se,bl,Z,ws,Ie,hl,un,M,Es,Ue,mn,_l,dn,Ke,vs,wl,ss,xs,ze,El,gn,B,ks,Ge,bn,vl,Os,Ye,hn,Le,xl,ns,Ws,Qe,kl,_n,T,js,Je,wn,Ol,ga,Xe,Wl,as,Hs,Ze,jl,En,R,Ps,sp,vn,Hl,ba,np,Pl,ls,qs,ap,ql,xn,N,Ms,lp,kn,Ml,ha,ep,Bl,es,Bs,pp,Tl,On,V,Ts,op,Wn,Rl,jn,tp,Hn,Nl,ps,Rs,rp,Vl,Pn,S,Ns,cp,qn,Sl,_a,Dp,Il,os,Vs,Fp,Ul,Mn,I,Ss,yp,Bn,Kl,wa,ip,zl,ts,Is,fp,Gl,Tn,U,Us,$p,Rn,Yl,Ea,Cp,Ll,rs,Ks,Ap,Ql,Nn,K,zs,up,Vn,Jl,va,mp,Xl,cs,Gs,dp,Zl,Sn,z,Ys,gp,In,se,xa,bp,ne,Ds,Ls,hp,ae,Un,G,Qs,_p,Kn,le,ka,wp,ee,Fs,Js,Ep,pe,zn,ys,Xs,vp,oe,W,xp,Gn,kp,Yn,Op,Ln,Wp,te,is,Zs,jp,re,Oa,Hp,ce,fs,sl,Pp,qp,nl,Mp,Bp,De,Y,Qn,Tp,al,Rp,Np,Jn,Fe,Wa,ll,Vp,ye,Xn,ja,el,Sp,ie,Zn,$s,sn,Ip,fe,Ha,Up,$e,Pa,sa,Ce,nn,Kp,na,zp,Ae,aa,Cs,an,Gp,ue,qa,Yp,me,Ma,la,de,ln,Lp,ea,Qp,ge,pa,As,en,Jp,be,pn,Xp,oa,Zp,he,ta,_e;return H=new _({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[xo]},$$scope:{ctx:C}}}),us=new vo({props:{values:["yarn","npm"],$$slots:{default:[Wo]},$$scope:{ctx:C}}}),ms=new _({props:{class:"header-anchor",href:"#quickstart","aria-hidden":"true",$$slots:{default:[jo]},$$scope:{ctx:C}}}),rn=new v({props:{lang:"typescript",ext:"ts",linesCount:26,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">init</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> infuraKey </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> rpcUrl </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">\`</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/</span><span style="color: #89DDFF">\${</span><span style="color: #A6ACCD">infuraKey</span><span style="color: #89DDFF">}\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> web3Onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">init</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      rpcUrl</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> wallets</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> connectWallet</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> disconnectConnectedWallet</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> connectedWallet </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> (connectedWallet) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">providers</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Web3Provider</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">connectedWallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">any</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ..... do stuff with the provider</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),ds=new _({props:{class:"header-anchor",href:"#functions","aria-hidden":"true",$$slots:{default:[Ho]},$$scope:{ctx:C}}}),gs=new _({props:{class:"header-anchor",href:"#init","aria-hidden":"true",$$slots:{default:[Po]},$$scope:{ctx:C}}}),cn=new w({props:{code:"init"}}),Dn=new w({props:{code:"init"}}),Fn=new w({props:{code:"web3-onboard"}}),yn=new w({props:{code:"useOnboard()"}}),bs=new _({props:{href:"/docs/modules/core#initialization",$$slots:{default:[qo]},$$scope:{ctx:C}}}),hs=new _({props:{class:"header-anchor",href:"#example-usage","aria-hidden":"true",$$slots:{default:[Mo]},$$scope:{ctx:C}}}),fn=new v({props:{lang:"typescript",ext:"ts",linesCount:19,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">init</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> infuraKey </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> rpcUrl </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">\`</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/</span><span style="color: #89DDFF">\${</span><span style="color: #A6ACCD">infuraKey</span><span style="color: #89DDFF">}\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> web3Onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">init</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      rpcUrl</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),_s=new _({props:{class:"header-anchor",href:"#useonboard","aria-hidden":"true",$$slots:{default:[Bo]},$$scope:{ctx:C}}}),$n=new w({props:{code:"useOnboard"}}),Cn=new w({props:{code:"useOnboard"}}),An=new w({props:{code:"init"}}),ws=new _({props:{class:"header-anchor",href:"#example-usage-1","aria-hidden":"true",$$slots:{default:[To]},$$scope:{ctx:C}}}),un=new v({props:{lang:"typescript",ext:"ts",linesCount:7,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// Use the composable</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// Or destructure it</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> wallets</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> connectWallet</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> disconnectConnectedWallet</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> connectedWallet </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// do stuff</span></span>
<span class="line"></span></code></pre>`}}),Es=new _({props:{class:"header-anchor",href:"#connectwallet","aria-hidden":"true",$$slots:{default:[Ro]},$$scope:{ctx:C}}}),mn=new w({props:{code:"connectWallet"}}),vs=new _({props:{href:"/docs/modules/core#connecting-a-wallet",$$slots:{default:[No]},$$scope:{ctx:C}}}),xs=new _({props:{class:"header-anchor",href:"#example-usage-2","aria-hidden":"true",$$slots:{default:[Vo]},$$scope:{ctx:C}}}),gn=new v({props:{lang:"vue",ext:"vue",linesCount:15,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">async</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #82AAFF">connectWallet</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">button</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> @</span><span style="color: #C792EA">click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">connect</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Connect to a Wallet</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),ks=new _({props:{class:"header-anchor",href:"#connectedchain","aria-hidden":"true",$$slots:{default:[So]},$$scope:{ctx:C}}}),bn=new w({props:{code:"connectedChain"}}),hn=new w({props:{code:"connectedWallet"}}),Ws=new _({props:{class:"header-anchor",href:"#example-usage-3","aria-hidden":"true",$$slots:{default:[Io]},$$scope:{ctx:C}}}),_n=new v({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectedChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectedChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Connected Chain: </span><span style="color: #89DDFF">{{</span><span style="color: #A6ACCD"> connectedChain</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">id </span><span style="color: #89DDFF">}}&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),js=new _({props:{class:"header-anchor",href:"#connectedwallet","aria-hidden":"true",$$slots:{default:[Uo]},$$scope:{ctx:C}}}),wn=new w({props:{code:"connectedWallet"}}),Hs=new _({props:{class:"header-anchor",href:"#example-usage-4","aria-hidden":"true",$$slots:{default:[Ko]},$$scope:{ctx:C}}}),En=new v({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectedWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectedWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Connected Wallet: </span><span style="color: #89DDFF">{{</span><span style="color: #A6ACCD"> connectedWallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">label </span><span style="color: #89DDFF">}}&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Ps=new _({props:{class:"header-anchor",href:"#connectingwallet","aria-hidden":"true",$$slots:{default:[zo]},$$scope:{ctx:C}}}),vn=new w({props:{code:"connectingWallet"}}),qs=new _({props:{class:"header-anchor",href:"#example-usage-5","aria-hidden":"true",$$slots:{default:[Go]},$$scope:{ctx:C}}}),xn=new v({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectingWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectingWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">v-if</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">connectingWallet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Connecting...</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Ms=new _({props:{class:"header-anchor",href:"#disconnectwallet","aria-hidden":"true",$$slots:{default:[Yo]},$$scope:{ctx:C}}}),kn=new w({props:{code:"disconnectWallet"}}),Bs=new _({props:{class:"header-anchor",href:"#example-usage-6","aria-hidden":"true",$$slots:{default:[Lo]},$$scope:{ctx:C}}}),On=new v({props:{lang:"vue",ext:"vue",linesCount:15,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnectWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">async</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #82AAFF">disconnectWallet</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">button</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> @</span><span style="color: #C792EA">click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">disconnect</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Disconnect MetaMask</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Ts=new _({props:{class:"header-anchor",href:"#disconnectconnectedwallet","aria-hidden":"true",$$slots:{default:[Qo]},$$scope:{ctx:C}}}),Wn=new w({props:{code:"disconnectConnectedWallet"}}),Hn=new w({props:{code:"connectedWallet"}}),Rs=new _({props:{class:"header-anchor",href:"#example-usage-7","aria-hidden":"true",$$slots:{default:[Jo]},$$scope:{ctx:C}}}),Pn=new v({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnectConnectedWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnectConnectedWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">button</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> @</span><span style="color: #C792EA">click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">disconnectConnectedWallet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Disconnect connectedWallet</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Ns=new _({props:{class:"header-anchor",href:"#getchain","aria-hidden":"true",$$slots:{default:[Xo]},$$scope:{ctx:C}}}),qn=new w({props:{code:"getChain"}}),Vs=new _({props:{class:"header-anchor",href:"#example-usage-8","aria-hidden":"true",$$slots:{default:[Zo]},$$scope:{ctx:C}}}),Mn=new v({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">getChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">getChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">MetaMask is connected to: </span><span style="color: #89DDFF">{{</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">getChain</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">) </span><span style="color: #89DDFF">}}&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Ss=new _({props:{class:"header-anchor",href:"#setchain","aria-hidden":"true",$$slots:{default:[st]},$$scope:{ctx:C}}}),Bn=new w({props:{code:"setChain"}}),Is=new _({props:{class:"header-anchor",href:"#example-usage-9","aria-hidden":"true",$$slots:{default:[nt]},$$scope:{ctx:C}}}),Tn=new v({props:{lang:"vue",ext:"vue",linesCount:15,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">setChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">set</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #82AAFF">setChain</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> wallet</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> chainId</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">set</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">button</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> @</span><span style="color: #C792EA">click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">set</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Set MetaMask chain to mainnet</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Us=new _({props:{class:"header-anchor",href:"#settingchain","aria-hidden":"true",$$slots:{default:[at]},$$scope:{ctx:C}}}),Rn=new w({props:{code:"settingChain"}}),Ks=new _({props:{class:"header-anchor",href:"#example-usage-10","aria-hidden":"true",$$slots:{default:[lt]},$$scope:{ctx:C}}}),Nn=new v({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">settingChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">settingChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">v-if</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">settingChain</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Setting chain...</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),zs=new _({props:{class:"header-anchor",href:"#wallets","aria-hidden":"true",$$slots:{default:[et]},$$scope:{ctx:C}}}),Vn=new w({props:{code:"wallets"}}),Gs=new _({props:{class:"header-anchor",href:"#example-usage-11","aria-hidden":"true",$$slots:{default:[pt]},$$scope:{ctx:C}}}),Sn=new v({props:{lang:"vue",ext:"vue",linesCount:9,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallets</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallets</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),Ys=new _({props:{class:"header-anchor",href:"#alreadyconnectedwallets","aria-hidden":"true",$$slots:{default:[ot]},$$scope:{ctx:C}}}),In=new w({props:{code:"alreadyConnectedWallets"}}),Ls=new _({props:{class:"header-anchor",href:"#example-usage-12","aria-hidden":"true",$$slots:{default:[tt]},$$scope:{ctx:C}}}),Un=new v({props:{lang:"text",ext:"text",linesCount:17,code:`<pre><code><span class="line"><span style="color: undefined">vue</span></span>
<span class="line"><span style="color: undefined">&lt;script&gt;</span></span>
<span class="line"><span style="color: undefined">import { useOnboard } from &#39;@web3-onboard/vue&#39;</span></span>
<span class="line"><span style="color: undefined">export default {</span></span>
<span class="line"><span style="color: undefined">  setup() {</span></span>
<span class="line"><span style="color: undefined">    const { alreadyConnectedWallets } = useOnboard()</span></span>
<span class="line"><span style="color: undefined">    return { alreadyConnectedWallets }</span></span>
<span class="line"><span style="color: undefined">  }</span></span>
<span class="line"><span style="color: undefined">}</span></span>
<span class="line"><span style="color: undefined">&lt;/script&gt;</span></span>
<span class="line"><span style="color: undefined"></span></span>
<span class="line"><span style="color: undefined">&lt;template&gt;</span></span>
<span class="line"><span style="color: undefined">  &lt;div v-for=&quot;wallet in wallets&quot;&gt;</span></span>
<span class="line"><span style="color: undefined">    &lt;span&gt;Label: {{wallet.label}}&lt;/span&gt;</span></span>
<span class="line"><span style="color: undefined">  &lt;/div&gt;</span></span>
<span class="line"><span style="color: undefined">&lt;/template&gt;</span></span>
<span class="line"><span style="color: undefined"></span></span></code></pre>`}}),Qs=new _({props:{class:"header-anchor",href:"#lastconnectedtimestamp","aria-hidden":"true",$$slots:{default:[rt]},$$scope:{ctx:C}}}),Kn=new w({props:{code:"lastConnectedTimestamp"}}),Js=new _({props:{class:"header-anchor",href:"#example-usage-13","aria-hidden":"true",$$slots:{default:[ct]},$$scope:{ctx:C}}}),zn=new v({props:{lang:"text",ext:"text",linesCount:15,code:`<pre><code><span class="line"><span style="color: undefined">vue</span></span>
<span class="line"><span style="color: undefined">&lt;script&gt;</span></span>
<span class="line"><span style="color: undefined">import { useOnboard } from &#39;@web3-onboard/vue&#39;</span></span>
<span class="line"><span style="color: undefined">export default {</span></span>
<span class="line"><span style="color: undefined">  setup() {</span></span>
<span class="line"><span style="color: undefined">    const { lastConnectedTimestamp } = useOnboard()</span></span>
<span class="line"><span style="color: undefined">    return { lastConnectedTimestamp }</span></span>
<span class="line"><span style="color: undefined">  }</span></span>
<span class="line"><span style="color: undefined">}</span></span>
<span class="line"><span style="color: undefined">&lt;/script&gt;</span></span>
<span class="line"><span style="color: undefined"></span></span>
<span class="line"><span style="color: undefined">&lt;template&gt;</span></span>
<span class="line"><span style="color: undefined">  &lt;span&gt;Your last connection timestamp was: {{ lastConnectedTimestamp }}&lt;/span&gt;</span></span>
<span class="line"><span style="color: undefined">&lt;/template&gt;</span></span>
<span class="line"><span style="color: undefined"></span></span></code></pre>`}}),Xs=new _({props:{class:"header-anchor",href:"#build-environments","aria-hidden":"true",$$slots:{default:[Dt]},$$scope:{ctx:C}}}),Gn=new w({props:{code:"crypto"}}),Yn=new w({props:{code:"buffer"}}),Ln=new w({props:{code:"util"}}),Zs=new _({props:{class:"header-anchor",href:"#webpack-4","aria-hidden":"true",$$slots:{default:[Ft]},$$scope:{ctx:C}}}),Qn=new w({props:{code:"npm i --save-dev @babel/cli @babel/core @babel/node @babel/plugin-proposal-nullish-coalescing-operator @babel/plugin-proposal-optional-chaining @babel/plugin-syntax-bigint @babel/register"}}),Jn=new w({props:{code:"npm i babel-loader"}}),Xn=new v({props:{lang:"javascript",ext:"js",linesCount:10,code:`<pre><code><span class="line"><span style="color: #89DDFF">module.exports</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">api</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">api</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">cache</span><span style="color: #F07178">(</span><span style="color: #FF9CAC">true</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">plugins</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> [</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@babel/plugin-proposal-optional-chaining</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@babel/plugin-proposal-nullish-coalescing-operator</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@babel/plugin-syntax-bigint</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">  ]</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">plugins</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),Zn=new v({props:{lang:"javascript",ext:"js",linesCount:9,code:`<pre><code><span class="line"><span style="color: #A6ACCD">config</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">module</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">rules </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">...</span><span style="color: #A6ACCD">otherModuleRules</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">test</span><span style="color: #89DDFF">:</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">\\.</span><span style="color: #C3E88D">js</span><span style="color: #89DDFF; font-style: italic">$</span><span style="color: #89DDFF">/</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">exclude</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">_</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">node_modules</span><span style="color: #A6ACCD">\\/</span><span style="color: #89DDFF">(</span><span style="color: #C3E88D">@web3auth</span><span style="color: #89DDFF">|</span><span style="color: #C3E88D">@ethereumjs</span><span style="color: #89DDFF">)/</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">test</span><span style="color: #A6ACCD">(_)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">loader</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">babel-loader</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">]</span></span>
<span class="line"></span></code></pre>`}}),sn=new _({props:{class:"header-anchor",href:"#webpack-5","aria-hidden":"true",$$slots:{default:[yt]},$$scope:{ctx:C}}}),sa=new w({props:{code:"npm i --save-dev assert buffer crypto-browserify stream-http https-browserify os-browserify process stream-browserify util path-browserify"}}),na=new w({props:{code:"webpack.config.js"}}),aa=new v({props:{lang:"javascript",ext:"js",linesCount:30,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> webpack </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">webpack</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">module.exports</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">resolve</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">fallback</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">path</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> require</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">path-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">alias</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">assert</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">buffer</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-http</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">https</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">os</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">os-browserify/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">process</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">stream</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">util</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">util</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">experiments</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">asyncWebAssembly</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> webpack</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ProvidePlugin</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">process</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">Buffer</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),an=new _({props:{class:"header-anchor",href:"#vite","aria-hidden":"true",$$slots:{default:[it]},$$scope:{ctx:C}}}),la=new w({props:{code:"npm i --save-dev rollup-plugin-polyfill-node"}}),ea=new w({props:{code:"vite.config.js"}}),pa=new v({props:{lang:"javascript",ext:"js",linesCount:32,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> nodePolyfills </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rollup-plugin-polyfill-node</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> process</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">env</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">NODE_ENV</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> development </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">===</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">development</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// other config options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    development </span><span style="color: #89DDFF">&amp;&amp;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">include</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/**/*.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RegExp</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/.vite/.*js</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">resolve</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">alias</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">stream</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">assert</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">build</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">rollupOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)]</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">commonjsOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">transformMixedEsModules</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),en=new _({props:{class:"header-anchor",href:"#nuxt-js","aria-hidden":"true",$$slots:{default:[ft]},$$scope:{ctx:C}}}),oa=new w({props:{code:"nuxt.config.js"}}),ta=new v({props:{lang:"javascript",ext:"js",linesCount:4,code:`<pre><code><span class="line"><span style="color: #FFCB6B">build</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #FFCB6B">standalone</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),{c(){e=d("h1"),n=t("Vue"),o=A(),h=d("p"),E=t("A collection of composable functions for implementing web3-onboard in to a Vue project; compatible both with Vue 2 + composition-api and Vue 3"),x=A(),O=d("h2"),c(H.$$.fragment),We=t(" Install"),fl=A(),c(us.$$.fragment),$l=A(),L=d("h2"),c(ms.$$.fragment),je=t(" Quickstart"),Cl=A(),c(rn.$$.fragment),Q=d("h2"),c(ds.$$.fragment),He=t(" Functions"),Al=A(),P=d("h2"),c(gs.$$.fragment),Pe=A(),c(cn.$$.fragment),ul=A(),k=d("p"),qe=t("The "),c(Dn.$$.fragment),Me=t(" function initializes "),c(Fn.$$.fragment),Be=t(" and makes it available to the "),c(yn.$$.fragment),Te=t(" composable. For references check out the "),c(bs.$$.fragment),ml=A(),J=d("h3"),c(hs.$$.fragment),Re=t(" Example usage"),dl=A(),c(fn.$$.fragment),q=d("h2"),c(_s.$$.fragment),Ne=A(),c($n.$$.fragment),gl=A(),X=d("p"),c(Cn.$$.fragment),Ve=t(" must be used after the "),c(An.$$.fragment),Se=t(" function has been called - it will return an object that can be destructured to obtain the following reactive variables and functions:"),bl=A(),Z=d("h3"),c(ws.$$.fragment),Ie=t(" Example usage"),hl=A(),c(un.$$.fragment),M=d("h3"),c(Es.$$.fragment),Ue=A(),c(mn.$$.fragment),_l=A(),dn=d("p"),Ke=t("Function to open the onboard modal and connect to a wallet provider. For reference check out the "),c(vs.$$.fragment),wl=A(),ss=d("h3"),c(xs.$$.fragment),ze=t(" Example usage"),El=A(),c(gn.$$.fragment),B=d("h3"),c(ks.$$.fragment),Ge=A(),c(bn.$$.fragment),vl=A(),Os=d("p"),Ye=t("Computed property that contains the current chain to which "),c(hn.$$.fragment),Le=t(" is connected"),xl=A(),ns=d("h3"),c(Ws.$$.fragment),Qe=t(" Example usage"),kl=A(),c(_n.$$.fragment),T=d("h3"),c(js.$$.fragment),Je=A(),c(wn.$$.fragment),Ol=A(),ga=d("p"),Xe=t("Computed property that contains the latest connected wallet"),Wl=A(),as=d("h3"),c(Hs.$$.fragment),Ze=t(" Example usage"),jl=A(),c(En.$$.fragment),R=d("h3"),c(Ps.$$.fragment),sp=A(),c(vn.$$.fragment),Hl=A(),ba=d("p"),np=t("Readonly boolean ref that tracks the state of the wallet connection status"),Pl=A(),ls=d("h3"),c(qs.$$.fragment),ap=t(" Example usage"),ql=A(),c(xn.$$.fragment),N=d("h3"),c(Ms.$$.fragment),lp=A(),c(kn.$$.fragment),Ml=A(),ha=d("p"),ep=t("Function to disconnect a specific wallet"),Bl=A(),es=d("h3"),c(Bs.$$.fragment),pp=t(" Example usage"),Tl=A(),c(On.$$.fragment),V=d("h3"),c(Ts.$$.fragment),op=A(),c(Wn.$$.fragment),Rl=A(),jn=d("p"),tp=t("Function to disconnect the "),c(Hn.$$.fragment),Nl=A(),ps=d("h3"),c(Rs.$$.fragment),rp=t(" Example usage"),Vl=A(),c(Pn.$$.fragment),S=d("h3"),c(Ns.$$.fragment),cp=A(),c(qn.$$.fragment),Sl=A(),_a=d("p"),Dp=t("Function that returns the current chain a wallet is connected to"),Il=A(),os=d("h3"),c(Vs.$$.fragment),Fp=t(" Example usage"),Ul=A(),c(Mn.$$.fragment),I=d("h3"),c(Ss.$$.fragment),yp=A(),c(Bn.$$.fragment),Kl=A(),wa=d("p"),ip=t("Function to set the chain of a wallet"),zl=A(),ts=d("h3"),c(Is.$$.fragment),fp=t(" Example usage"),Gl=A(),c(Tn.$$.fragment),U=d("h3"),c(Us.$$.fragment),$p=A(),c(Rn.$$.fragment),Yl=A(),Ea=d("p"),Cp=t("Readonly boolean ref that tracks the status of setting the chain"),Ll=A(),rs=d("h3"),c(Ks.$$.fragment),Ap=t(" Example usage"),Ql=A(),c(Nn.$$.fragment),K=d("h3"),c(zs.$$.fragment),up=A(),c(Vn.$$.fragment),Jl=A(),va=d("p"),mp=t("Readonly ref that contains every wallet that has been connected"),Xl=A(),cs=d("h3"),c(Gs.$$.fragment),dp=t(" Example usage"),Zl=A(),c(Sn.$$.fragment),z=d("h3"),c(Ys.$$.fragment),gp=A(),c(In.$$.fragment),se=A(),xa=d("p"),bp=t("Readonly ref that contains every wallet that user connected to in the past; useful to reconnect wallets automatically after a reload"),ne=A(),Ds=d("h3"),c(Ls.$$.fragment),hp=t(" Example usage"),ae=A(),c(Un.$$.fragment),G=d("h3"),c(Qs.$$.fragment),_p=A(),c(Kn.$$.fragment),le=A(),ka=d("p"),wp=t("Readonly ref that contains the last time that the user connected a wallet in milliseconds"),ee=A(),Fs=d("h3"),c(Js.$$.fragment),Ep=t(" Example usage"),pe=A(),c(zn.$$.fragment),ys=d("h2"),c(Xs.$$.fragment),vp=t(" Build Environments"),oe=A(),W=d("p"),xp=t("Many of the wallet modules require dependencies that are not normally included in browser builds (namely the node builtin modules such as "),c(Gn.$$.fragment),kp=t(", "),c(Yn.$$.fragment),Op=t(", "),c(Ln.$$.fragment),Wp=t(" etc). If you are having build issues you can try the following bundler configs to resolve these dependency issues:"),te=A(),is=d("h3"),c(Zs.$$.fragment),jp=t(" Webpack 4"),re=A(),Oa=d("p"),Hp=t("Node built-ins are automatically bundled in v4 so that portion is handled automatically."),ce=A(),fs=d("p"),sl=d("strong"),Pp=t("web3auth"),qp=t(" and "),nl=d("strong"),Mp=t("torus"),Bp=t(" will require a Babel to compile from es6 if not already supported. See config for Babel and Webpack4 as follows"),De=A(),Y=d("p"),c(Qn.$$.fragment),Tp=A(),al=d("strong"),Rp=t("AND"),Np=A(),c(Jn.$$.fragment),Fe=A(),Wa=d("p"),ll=d("strong"),Vp=t("babel.config.js"),ye=A(),c(Xn.$$.fragment),ja=d("p"),el=d("strong"),Sp=t("webpack.config.js"),ie=A(),c(Zn.$$.fragment),$s=d("h3"),c(sn.$$.fragment),Ip=t(" Webpack 5"),fe=A(),Ha=d("p"),Up=t("You'll need to add some dev dependencies with the following command:"),$e=A(),Pa=d("p"),c(sa.$$.fragment),Ce=A(),nn=d("p"),Kp=t("Then add the following to your "),c(na.$$.fragment),zp=t(" file:"),Ae=A(),c(aa.$$.fragment),Cs=d("h3"),c(an.$$.fragment),Gp=t(" Vite"),ue=A(),qa=d("p"),Yp=t("Add the following dev dependencies:"),me=A(),Ma=d("p"),c(la.$$.fragment),de=A(),ln=d("p"),Lp=t("Then add the following to your "),c(ea.$$.fragment),Qp=t(" file:"),ge=A(),c(pa.$$.fragment),As=d("h3"),c(en.$$.fragment),Jp=t(" Nuxt.js"),be=A(),pn=d("p"),Xp=t("Add the following to your "),c(oa.$$.fragment),Zp=t(":"),he=A(),c(ta.$$.fragment),this.h()},l(s){e=g(s,"H1",{});var l=b(e);n=r(l,"Vue"),l.forEach(a),o=u(s),h=g(s,"P",{});var pl=b(h);E=r(pl,"A collection of composable functions for implementing web3-onboard in to a Vue project; compatible both with Vue 2 + composition-api and Vue 3"),pl.forEach(a),x=u(s),O=g(s,"H2",{id:!0,tabindex:!0});var Ba=b(O);D(H.$$.fragment,Ba),We=r(Ba," Install"),Ba.forEach(a),fl=u(s),D(us.$$.fragment,s),$l=u(s),L=g(s,"H2",{id:!0,tabindex:!0});var Ta=b(L);D(ms.$$.fragment,Ta),je=r(Ta," Quickstart"),Ta.forEach(a),Cl=u(s),D(rn.$$.fragment,s),Q=g(s,"H2",{id:!0,tabindex:!0});var Ra=b(Q);D(ds.$$.fragment,Ra),He=r(Ra," Functions"),Ra.forEach(a),Al=u(s),P=g(s,"H2",{id:!0,tabindex:!0});var ra=b(P);D(gs.$$.fragment,ra),Pe=u(ra),D(cn.$$.fragment,ra),ra.forEach(a),ul=u(s),k=g(s,"P",{});var j=b(k);qe=r(j,"The "),D(Dn.$$.fragment,j),Me=r(j," function initializes "),D(Fn.$$.fragment,j),Be=r(j," and makes it available to the "),D(yn.$$.fragment,j),Te=r(j," composable. For references check out the "),D(bs.$$.fragment,j),j.forEach(a),ml=u(s),J=g(s,"H3",{id:!0,tabindex:!0});var Na=b(J);D(hs.$$.fragment,Na),Re=r(Na," Example usage"),Na.forEach(a),dl=u(s),D(fn.$$.fragment,s),q=g(s,"H2",{id:!0,tabindex:!0});var ca=b(q);D(_s.$$.fragment,ca),Ne=u(ca),D($n.$$.fragment,ca),ca.forEach(a),gl=u(s),X=g(s,"P",{});var on=b(X);D(Cn.$$.fragment,on),Ve=r(on," must be used after the "),D(An.$$.fragment,on),Se=r(on," function has been called - it will return an object that can be destructured to obtain the following reactive variables and functions:"),on.forEach(a),bl=u(s),Z=g(s,"H3",{id:!0,tabindex:!0});var Va=b(Z);D(ws.$$.fragment,Va),Ie=r(Va," Example usage"),Va.forEach(a),hl=u(s),D(un.$$.fragment,s),M=g(s,"H3",{id:!0,tabindex:!0});var Da=b(M);D(Es.$$.fragment,Da),Ue=u(Da),D(mn.$$.fragment,Da),Da.forEach(a),_l=u(s),dn=g(s,"P",{});var Sa=b(dn);Ke=r(Sa,"Function to open the onboard modal and connect to a wallet provider. For reference check out the "),D(vs.$$.fragment,Sa),Sa.forEach(a),wl=u(s),ss=g(s,"H3",{id:!0,tabindex:!0});var Ia=b(ss);D(xs.$$.fragment,Ia),ze=r(Ia," Example usage"),Ia.forEach(a),El=u(s),D(gn.$$.fragment,s),B=g(s,"H3",{id:!0,tabindex:!0});var Fa=b(B);D(ks.$$.fragment,Fa),Ge=u(Fa),D(bn.$$.fragment,Fa),Fa.forEach(a),vl=u(s),Os=g(s,"P",{});var ya=b(Os);Ye=r(ya,"Computed property that contains the current chain to which "),D(hn.$$.fragment,ya),Le=r(ya," is connected"),ya.forEach(a),xl=u(s),ns=g(s,"H3",{id:!0,tabindex:!0});var Ua=b(ns);D(Ws.$$.fragment,Ua),Qe=r(Ua," Example usage"),Ua.forEach(a),kl=u(s),D(_n.$$.fragment,s),T=g(s,"H3",{id:!0,tabindex:!0});var ia=b(T);D(js.$$.fragment,ia),Je=u(ia),D(wn.$$.fragment,ia),ia.forEach(a),Ol=u(s),ga=g(s,"P",{});var ol=b(ga);Xe=r(ol,"Computed property that contains the latest connected wallet"),ol.forEach(a),Wl=u(s),as=g(s,"H3",{id:!0,tabindex:!0});var Ka=b(as);D(Hs.$$.fragment,Ka),Ze=r(Ka," Example usage"),Ka.forEach(a),jl=u(s),D(En.$$.fragment,s),R=g(s,"H3",{id:!0,tabindex:!0});var fa=b(R);D(Ps.$$.fragment,fa),sp=u(fa),D(vn.$$.fragment,fa),fa.forEach(a),Hl=u(s),ba=g(s,"P",{});var tl=b(ba);np=r(tl,"Readonly boolean ref that tracks the state of the wallet connection status"),tl.forEach(a),Pl=u(s),ls=g(s,"H3",{id:!0,tabindex:!0});var za=b(ls);D(qs.$$.fragment,za),ap=r(za," Example usage"),za.forEach(a),ql=u(s),D(xn.$$.fragment,s),N=g(s,"H3",{id:!0,tabindex:!0});var $a=b(N);D(Ms.$$.fragment,$a),lp=u($a),D(kn.$$.fragment,$a),$a.forEach(a),Ml=u(s),ha=g(s,"P",{});var rl=b(ha);ep=r(rl,"Function to disconnect a specific wallet"),rl.forEach(a),Bl=u(s),es=g(s,"H3",{id:!0,tabindex:!0});var Ga=b(es);D(Bs.$$.fragment,Ga),pp=r(Ga," Example usage"),Ga.forEach(a),Tl=u(s),D(On.$$.fragment,s),V=g(s,"H3",{id:!0,tabindex:!0});var Ca=b(V);D(Ts.$$.fragment,Ca),op=u(Ca),D(Wn.$$.fragment,Ca),Ca.forEach(a),Rl=u(s),jn=g(s,"P",{});var Ya=b(jn);tp=r(Ya,"Function to disconnect the "),D(Hn.$$.fragment,Ya),Ya.forEach(a),Nl=u(s),ps=g(s,"H3",{id:!0,tabindex:!0});var La=b(ps);D(Rs.$$.fragment,La),rp=r(La," Example usage"),La.forEach(a),Vl=u(s),D(Pn.$$.fragment,s),S=g(s,"H3",{id:!0,tabindex:!0});var Aa=b(S);D(Ns.$$.fragment,Aa),cp=u(Aa),D(qn.$$.fragment,Aa),Aa.forEach(a),Sl=u(s),_a=g(s,"P",{});var cl=b(_a);Dp=r(cl,"Function that returns the current chain a wallet is connected to"),cl.forEach(a),Il=u(s),os=g(s,"H3",{id:!0,tabindex:!0});var Qa=b(os);D(Vs.$$.fragment,Qa),Fp=r(Qa," Example usage"),Qa.forEach(a),Ul=u(s),D(Mn.$$.fragment,s),I=g(s,"H3",{id:!0,tabindex:!0});var ua=b(I);D(Ss.$$.fragment,ua),yp=u(ua),D(Bn.$$.fragment,ua),ua.forEach(a),Kl=u(s),wa=g(s,"P",{});var Dl=b(wa);ip=r(Dl,"Function to set the chain of a wallet"),Dl.forEach(a),zl=u(s),ts=g(s,"H3",{id:!0,tabindex:!0});var Ja=b(ts);D(Is.$$.fragment,Ja),fp=r(Ja," Example usage"),Ja.forEach(a),Gl=u(s),D(Tn.$$.fragment,s),U=g(s,"H3",{id:!0,tabindex:!0});var ma=b(U);D(Us.$$.fragment,ma),$p=u(ma),D(Rn.$$.fragment,ma),ma.forEach(a),Yl=u(s),Ea=g(s,"P",{});var Fl=b(Ea);Cp=r(Fl,"Readonly boolean ref that tracks the status of setting the chain"),Fl.forEach(a),Ll=u(s),rs=g(s,"H3",{id:!0,tabindex:!0});var Xa=b(rs);D(Ks.$$.fragment,Xa),Ap=r(Xa," Example usage"),Xa.forEach(a),Ql=u(s),D(Nn.$$.fragment,s),K=g(s,"H3",{id:!0,tabindex:!0});var da=b(K);D(zs.$$.fragment,da),up=u(da),D(Vn.$$.fragment,da),da.forEach(a),Jl=u(s),va=g(s,"P",{});var yl=b(va);mp=r(yl,"Readonly ref that contains every wallet that has been connected"),yl.forEach(a),Xl=u(s),cs=g(s,"H3",{id:!0,tabindex:!0});var so=b(cs);D(Gs.$$.fragment,so),dp=r(so," Example usage"),so.forEach(a),Zl=u(s),D(Sn.$$.fragment,s),z=g(s,"H3",{id:!0,tabindex:!0});var we=b(z);D(Ys.$$.fragment,we),gp=u(we),D(In.$$.fragment,we),we.forEach(a),se=u(s),xa=g(s,"P",{});var ro=b(xa);bp=r(ro,"Readonly ref that contains every wallet that user connected to in the past; useful to reconnect wallets automatically after a reload"),ro.forEach(a),ne=u(s),Ds=g(s,"H3",{id:!0,tabindex:!0});var no=b(Ds);D(Ls.$$.fragment,no),hp=r(no," Example usage"),no.forEach(a),ae=u(s),D(Un.$$.fragment,s),G=g(s,"H3",{id:!0,tabindex:!0});var Ee=b(G);D(Qs.$$.fragment,Ee),_p=u(Ee),D(Kn.$$.fragment,Ee),Ee.forEach(a),le=u(s),ka=g(s,"P",{});var co=b(ka);wp=r(co,"Readonly ref that contains the last time that the user connected a wallet in milliseconds"),co.forEach(a),ee=u(s),Fs=g(s,"H3",{id:!0,tabindex:!0});var ao=b(Fs);D(Js.$$.fragment,ao),Ep=r(ao," Example usage"),ao.forEach(a),pe=u(s),D(zn.$$.fragment,s),ys=g(s,"H2",{id:!0,tabindex:!0});var lo=b(ys);D(Xs.$$.fragment,lo),vp=r(lo," Build Environments"),lo.forEach(a),oe=u(s),W=g(s,"P",{});var tn=b(W);xp=r(tn,"Many of the wallet modules require dependencies that are not normally included in browser builds (namely the node builtin modules such as "),D(Gn.$$.fragment,tn),kp=r(tn,", "),D(Yn.$$.fragment,tn),Op=r(tn,", "),D(Ln.$$.fragment,tn),Wp=r(tn," etc). If you are having build issues you can try the following bundler configs to resolve these dependency issues:"),tn.forEach(a),te=u(s),is=g(s,"H3",{id:!0,tabindex:!0});var eo=b(is);D(Zs.$$.fragment,eo),jp=r(eo," Webpack 4"),eo.forEach(a),re=u(s),Oa=g(s,"P",{});var Do=b(Oa);Hp=r(Do,"Node built-ins are automatically bundled in v4 so that portion is handled automatically."),Do.forEach(a),ce=u(s),fs=g(s,"P",{});var il=b(fs);sl=g(il,"STRONG",{});var Fo=b(sl);Pp=r(Fo,"web3auth"),Fo.forEach(a),qp=r(il," and "),nl=g(il,"STRONG",{});var yo=b(nl);Mp=r(yo,"torus"),yo.forEach(a),Bp=r(il," will require a Babel to compile from es6 if not already supported. See config for Babel and Webpack4 as follows"),il.forEach(a),De=u(s),Y=g(s,"P",{});var Za=b(Y);D(Qn.$$.fragment,Za),Tp=u(Za),al=g(Za,"STRONG",{});var io=b(al);Rp=r(io,"AND"),io.forEach(a),Np=u(Za),D(Jn.$$.fragment,Za),Za.forEach(a),Fe=u(s),Wa=g(s,"P",{});var fo=b(Wa);ll=g(fo,"STRONG",{});var $o=b(ll);Vp=r($o,"babel.config.js"),$o.forEach(a),fo.forEach(a),ye=u(s),D(Xn.$$.fragment,s),ja=g(s,"P",{});var Co=b(ja);el=g(Co,"STRONG",{});var Ao=b(el);Sp=r(Ao,"webpack.config.js"),Ao.forEach(a),Co.forEach(a),ie=u(s),D(Zn.$$.fragment,s),$s=g(s,"H3",{id:!0,tabindex:!0});var po=b($s);D(sn.$$.fragment,po),Ip=r(po," Webpack 5"),po.forEach(a),fe=u(s),Ha=g(s,"P",{});var uo=b(Ha);Up=r(uo,"You'll need to add some dev dependencies with the following command:"),uo.forEach(a),$e=u(s),Pa=g(s,"P",{});var mo=b(Pa);D(sa.$$.fragment,mo),mo.forEach(a),Ce=u(s),nn=g(s,"P",{});var ve=b(nn);Kp=r(ve,"Then add the following to your "),D(na.$$.fragment,ve),zp=r(ve," file:"),ve.forEach(a),Ae=u(s),D(aa.$$.fragment,s),Cs=g(s,"H3",{id:!0,tabindex:!0});var oo=b(Cs);D(an.$$.fragment,oo),Gp=r(oo," Vite"),oo.forEach(a),ue=u(s),qa=g(s,"P",{});var go=b(qa);Yp=r(go,"Add the following dev dependencies:"),go.forEach(a),me=u(s),Ma=g(s,"P",{});var bo=b(Ma);D(la.$$.fragment,bo),bo.forEach(a),de=u(s),ln=g(s,"P",{});var xe=b(ln);Lp=r(xe,"Then add the following to your "),D(ea.$$.fragment,xe),Qp=r(xe," file:"),xe.forEach(a),ge=u(s),D(pa.$$.fragment,s),As=g(s,"H3",{id:!0,tabindex:!0});var to=b(As);D(en.$$.fragment,to),Jp=r(to," Nuxt.js"),to.forEach(a),be=u(s),pn=g(s,"P",{});var ke=b(pn);Xp=r(ke,"Add the following to your "),D(oa.$$.fragment,ke),Zp=r(ke,":"),ke.forEach(a),he=u(s),D(ta.$$.fragment,s),this.h()},h(){m(O,"id","install"),m(O,"tabindex","-1"),m(L,"id","quickstart"),m(L,"tabindex","-1"),m(Q,"id","functions"),m(Q,"tabindex","-1"),m(P,"id","init"),m(P,"tabindex","-1"),m(J,"id","example-usage"),m(J,"tabindex","-1"),m(q,"id","useonboard"),m(q,"tabindex","-1"),m(Z,"id","example-usage-1"),m(Z,"tabindex","-1"),m(M,"id","connectwallet"),m(M,"tabindex","-1"),m(ss,"id","example-usage-2"),m(ss,"tabindex","-1"),m(B,"id","connectedchain"),m(B,"tabindex","-1"),m(ns,"id","example-usage-3"),m(ns,"tabindex","-1"),m(T,"id","connectedwallet"),m(T,"tabindex","-1"),m(as,"id","example-usage-4"),m(as,"tabindex","-1"),m(R,"id","connectingwallet"),m(R,"tabindex","-1"),m(ls,"id","example-usage-5"),m(ls,"tabindex","-1"),m(N,"id","disconnectwallet"),m(N,"tabindex","-1"),m(es,"id","example-usage-6"),m(es,"tabindex","-1"),m(V,"id","disconnectconnectedwallet"),m(V,"tabindex","-1"),m(ps,"id","example-usage-7"),m(ps,"tabindex","-1"),m(S,"id","getchain"),m(S,"tabindex","-1"),m(os,"id","example-usage-8"),m(os,"tabindex","-1"),m(I,"id","setchain"),m(I,"tabindex","-1"),m(ts,"id","example-usage-9"),m(ts,"tabindex","-1"),m(U,"id","settingchain"),m(U,"tabindex","-1"),m(rs,"id","example-usage-10"),m(rs,"tabindex","-1"),m(K,"id","wallets"),m(K,"tabindex","-1"),m(cs,"id","example-usage-11"),m(cs,"tabindex","-1"),m(z,"id","alreadyconnectedwallets"),m(z,"tabindex","-1"),m(Ds,"id","example-usage-12"),m(Ds,"tabindex","-1"),m(G,"id","lastconnectedtimestamp"),m(G,"tabindex","-1"),m(Fs,"id","example-usage-13"),m(Fs,"tabindex","-1"),m(ys,"id","build-environments"),m(ys,"tabindex","-1"),m(is,"id","webpack-4"),m(is,"tabindex","-1"),m($s,"id","webpack-5"),m($s,"tabindex","-1"),m(Cs,"id","vite"),m(Cs,"tabindex","-1"),m(As,"id","nuxt-js"),m(As,"tabindex","-1")},m(s,l){p(s,e,l),$(e,n),p(s,o,l),p(s,h,l),$(h,E),p(s,x,l),p(s,O,l),F(H,O,null),$(O,We),p(s,fl,l),F(us,s,l),p(s,$l,l),p(s,L,l),F(ms,L,null),$(L,je),p(s,Cl,l),F(rn,s,l),p(s,Q,l),F(ds,Q,null),$(Q,He),p(s,Al,l),p(s,P,l),F(gs,P,null),$(P,Pe),F(cn,P,null),p(s,ul,l),p(s,k,l),$(k,qe),F(Dn,k,null),$(k,Me),F(Fn,k,null),$(k,Be),F(yn,k,null),$(k,Te),F(bs,k,null),p(s,ml,l),p(s,J,l),F(hs,J,null),$(J,Re),p(s,dl,l),F(fn,s,l),p(s,q,l),F(_s,q,null),$(q,Ne),F($n,q,null),p(s,gl,l),p(s,X,l),F(Cn,X,null),$(X,Ve),F(An,X,null),$(X,Se),p(s,bl,l),p(s,Z,l),F(ws,Z,null),$(Z,Ie),p(s,hl,l),F(un,s,l),p(s,M,l),F(Es,M,null),$(M,Ue),F(mn,M,null),p(s,_l,l),p(s,dn,l),$(dn,Ke),F(vs,dn,null),p(s,wl,l),p(s,ss,l),F(xs,ss,null),$(ss,ze),p(s,El,l),F(gn,s,l),p(s,B,l),F(ks,B,null),$(B,Ge),F(bn,B,null),p(s,vl,l),p(s,Os,l),$(Os,Ye),F(hn,Os,null),$(Os,Le),p(s,xl,l),p(s,ns,l),F(Ws,ns,null),$(ns,Qe),p(s,kl,l),F(_n,s,l),p(s,T,l),F(js,T,null),$(T,Je),F(wn,T,null),p(s,Ol,l),p(s,ga,l),$(ga,Xe),p(s,Wl,l),p(s,as,l),F(Hs,as,null),$(as,Ze),p(s,jl,l),F(En,s,l),p(s,R,l),F(Ps,R,null),$(R,sp),F(vn,R,null),p(s,Hl,l),p(s,ba,l),$(ba,np),p(s,Pl,l),p(s,ls,l),F(qs,ls,null),$(ls,ap),p(s,ql,l),F(xn,s,l),p(s,N,l),F(Ms,N,null),$(N,lp),F(kn,N,null),p(s,Ml,l),p(s,ha,l),$(ha,ep),p(s,Bl,l),p(s,es,l),F(Bs,es,null),$(es,pp),p(s,Tl,l),F(On,s,l),p(s,V,l),F(Ts,V,null),$(V,op),F(Wn,V,null),p(s,Rl,l),p(s,jn,l),$(jn,tp),F(Hn,jn,null),p(s,Nl,l),p(s,ps,l),F(Rs,ps,null),$(ps,rp),p(s,Vl,l),F(Pn,s,l),p(s,S,l),F(Ns,S,null),$(S,cp),F(qn,S,null),p(s,Sl,l),p(s,_a,l),$(_a,Dp),p(s,Il,l),p(s,os,l),F(Vs,os,null),$(os,Fp),p(s,Ul,l),F(Mn,s,l),p(s,I,l),F(Ss,I,null),$(I,yp),F(Bn,I,null),p(s,Kl,l),p(s,wa,l),$(wa,ip),p(s,zl,l),p(s,ts,l),F(Is,ts,null),$(ts,fp),p(s,Gl,l),F(Tn,s,l),p(s,U,l),F(Us,U,null),$(U,$p),F(Rn,U,null),p(s,Yl,l),p(s,Ea,l),$(Ea,Cp),p(s,Ll,l),p(s,rs,l),F(Ks,rs,null),$(rs,Ap),p(s,Ql,l),F(Nn,s,l),p(s,K,l),F(zs,K,null),$(K,up),F(Vn,K,null),p(s,Jl,l),p(s,va,l),$(va,mp),p(s,Xl,l),p(s,cs,l),F(Gs,cs,null),$(cs,dp),p(s,Zl,l),F(Sn,s,l),p(s,z,l),F(Ys,z,null),$(z,gp),F(In,z,null),p(s,se,l),p(s,xa,l),$(xa,bp),p(s,ne,l),p(s,Ds,l),F(Ls,Ds,null),$(Ds,hp),p(s,ae,l),F(Un,s,l),p(s,G,l),F(Qs,G,null),$(G,_p),F(Kn,G,null),p(s,le,l),p(s,ka,l),$(ka,wp),p(s,ee,l),p(s,Fs,l),F(Js,Fs,null),$(Fs,Ep),p(s,pe,l),F(zn,s,l),p(s,ys,l),F(Xs,ys,null),$(ys,vp),p(s,oe,l),p(s,W,l),$(W,xp),F(Gn,W,null),$(W,kp),F(Yn,W,null),$(W,Op),F(Ln,W,null),$(W,Wp),p(s,te,l),p(s,is,l),F(Zs,is,null),$(is,jp),p(s,re,l),p(s,Oa,l),$(Oa,Hp),p(s,ce,l),p(s,fs,l),$(fs,sl),$(sl,Pp),$(fs,qp),$(fs,nl),$(nl,Mp),$(fs,Bp),p(s,De,l),p(s,Y,l),F(Qn,Y,null),$(Y,Tp),$(Y,al),$(al,Rp),$(Y,Np),F(Jn,Y,null),p(s,Fe,l),p(s,Wa,l),$(Wa,ll),$(ll,Vp),p(s,ye,l),F(Xn,s,l),p(s,ja,l),$(ja,el),$(el,Sp),p(s,ie,l),F(Zn,s,l),p(s,$s,l),F(sn,$s,null),$($s,Ip),p(s,fe,l),p(s,Ha,l),$(Ha,Up),p(s,$e,l),p(s,Pa,l),F(sa,Pa,null),p(s,Ce,l),p(s,nn,l),$(nn,Kp),F(na,nn,null),$(nn,zp),p(s,Ae,l),F(aa,s,l),p(s,Cs,l),F(an,Cs,null),$(Cs,Gp),p(s,ue,l),p(s,qa,l),$(qa,Yp),p(s,me,l),p(s,Ma,l),F(la,Ma,null),p(s,de,l),p(s,ln,l),$(ln,Lp),F(ea,ln,null),$(ln,Qp),p(s,ge,l),F(pa,s,l),p(s,As,l),F(en,As,null),$(As,Jp),p(s,be,l),p(s,pn,l),$(pn,Xp),F(oa,pn,null),$(pn,Zp),p(s,he,l),F(ta,s,l),_e=!0},p(s,[l]){const pl={};l&1&&(pl.$$scope={dirty:l,ctx:s}),H.$set(pl);const Ba={};l&1&&(Ba.$$scope={dirty:l,ctx:s}),us.$set(Ba);const Ta={};l&1&&(Ta.$$scope={dirty:l,ctx:s}),ms.$set(Ta);const Ra={};l&1&&(Ra.$$scope={dirty:l,ctx:s}),ds.$set(Ra);const ra={};l&1&&(ra.$$scope={dirty:l,ctx:s}),gs.$set(ra);const j={};l&1&&(j.$$scope={dirty:l,ctx:s}),bs.$set(j);const Na={};l&1&&(Na.$$scope={dirty:l,ctx:s}),hs.$set(Na);const ca={};l&1&&(ca.$$scope={dirty:l,ctx:s}),_s.$set(ca);const on={};l&1&&(on.$$scope={dirty:l,ctx:s}),ws.$set(on);const Va={};l&1&&(Va.$$scope={dirty:l,ctx:s}),Es.$set(Va);const Da={};l&1&&(Da.$$scope={dirty:l,ctx:s}),vs.$set(Da);const Sa={};l&1&&(Sa.$$scope={dirty:l,ctx:s}),xs.$set(Sa);const Ia={};l&1&&(Ia.$$scope={dirty:l,ctx:s}),ks.$set(Ia);const Fa={};l&1&&(Fa.$$scope={dirty:l,ctx:s}),Ws.$set(Fa);const ya={};l&1&&(ya.$$scope={dirty:l,ctx:s}),js.$set(ya);const Ua={};l&1&&(Ua.$$scope={dirty:l,ctx:s}),Hs.$set(Ua);const ia={};l&1&&(ia.$$scope={dirty:l,ctx:s}),Ps.$set(ia);const ol={};l&1&&(ol.$$scope={dirty:l,ctx:s}),qs.$set(ol);const Ka={};l&1&&(Ka.$$scope={dirty:l,ctx:s}),Ms.$set(Ka);const fa={};l&1&&(fa.$$scope={dirty:l,ctx:s}),Bs.$set(fa);const tl={};l&1&&(tl.$$scope={dirty:l,ctx:s}),Ts.$set(tl);const za={};l&1&&(za.$$scope={dirty:l,ctx:s}),Rs.$set(za);const $a={};l&1&&($a.$$scope={dirty:l,ctx:s}),Ns.$set($a);const rl={};l&1&&(rl.$$scope={dirty:l,ctx:s}),Vs.$set(rl);const Ga={};l&1&&(Ga.$$scope={dirty:l,ctx:s}),Ss.$set(Ga);const Ca={};l&1&&(Ca.$$scope={dirty:l,ctx:s}),Is.$set(Ca);const Ya={};l&1&&(Ya.$$scope={dirty:l,ctx:s}),Us.$set(Ya);const La={};l&1&&(La.$$scope={dirty:l,ctx:s}),Ks.$set(La);const Aa={};l&1&&(Aa.$$scope={dirty:l,ctx:s}),zs.$set(Aa);const cl={};l&1&&(cl.$$scope={dirty:l,ctx:s}),Gs.$set(cl);const Qa={};l&1&&(Qa.$$scope={dirty:l,ctx:s}),Ys.$set(Qa);const ua={};l&1&&(ua.$$scope={dirty:l,ctx:s}),Ls.$set(ua);const Dl={};l&1&&(Dl.$$scope={dirty:l,ctx:s}),Qs.$set(Dl);const Ja={};l&1&&(Ja.$$scope={dirty:l,ctx:s}),Js.$set(Ja);const ma={};l&1&&(ma.$$scope={dirty:l,ctx:s}),Xs.$set(ma);const Fl={};l&1&&(Fl.$$scope={dirty:l,ctx:s}),Zs.$set(Fl);const Xa={};l&1&&(Xa.$$scope={dirty:l,ctx:s}),sn.$set(Xa);const da={};l&1&&(da.$$scope={dirty:l,ctx:s}),an.$set(da);const yl={};l&1&&(yl.$$scope={dirty:l,ctx:s}),en.$set(yl)},i(s){_e||(y(H.$$.fragment,s),y(us.$$.fragment,s),y(ms.$$.fragment,s),y(rn.$$.fragment,s),y(ds.$$.fragment,s),y(gs.$$.fragment,s),y(cn.$$.fragment,s),y(Dn.$$.fragment,s),y(Fn.$$.fragment,s),y(yn.$$.fragment,s),y(bs.$$.fragment,s),y(hs.$$.fragment,s),y(fn.$$.fragment,s),y(_s.$$.fragment,s),y($n.$$.fragment,s),y(Cn.$$.fragment,s),y(An.$$.fragment,s),y(ws.$$.fragment,s),y(un.$$.fragment,s),y(Es.$$.fragment,s),y(mn.$$.fragment,s),y(vs.$$.fragment,s),y(xs.$$.fragment,s),y(gn.$$.fragment,s),y(ks.$$.fragment,s),y(bn.$$.fragment,s),y(hn.$$.fragment,s),y(Ws.$$.fragment,s),y(_n.$$.fragment,s),y(js.$$.fragment,s),y(wn.$$.fragment,s),y(Hs.$$.fragment,s),y(En.$$.fragment,s),y(Ps.$$.fragment,s),y(vn.$$.fragment,s),y(qs.$$.fragment,s),y(xn.$$.fragment,s),y(Ms.$$.fragment,s),y(kn.$$.fragment,s),y(Bs.$$.fragment,s),y(On.$$.fragment,s),y(Ts.$$.fragment,s),y(Wn.$$.fragment,s),y(Hn.$$.fragment,s),y(Rs.$$.fragment,s),y(Pn.$$.fragment,s),y(Ns.$$.fragment,s),y(qn.$$.fragment,s),y(Vs.$$.fragment,s),y(Mn.$$.fragment,s),y(Ss.$$.fragment,s),y(Bn.$$.fragment,s),y(Is.$$.fragment,s),y(Tn.$$.fragment,s),y(Us.$$.fragment,s),y(Rn.$$.fragment,s),y(Ks.$$.fragment,s),y(Nn.$$.fragment,s),y(zs.$$.fragment,s),y(Vn.$$.fragment,s),y(Gs.$$.fragment,s),y(Sn.$$.fragment,s),y(Ys.$$.fragment,s),y(In.$$.fragment,s),y(Ls.$$.fragment,s),y(Un.$$.fragment,s),y(Qs.$$.fragment,s),y(Kn.$$.fragment,s),y(Js.$$.fragment,s),y(zn.$$.fragment,s),y(Xs.$$.fragment,s),y(Gn.$$.fragment,s),y(Yn.$$.fragment,s),y(Ln.$$.fragment,s),y(Zs.$$.fragment,s),y(Qn.$$.fragment,s),y(Jn.$$.fragment,s),y(Xn.$$.fragment,s),y(Zn.$$.fragment,s),y(sn.$$.fragment,s),y(sa.$$.fragment,s),y(na.$$.fragment,s),y(aa.$$.fragment,s),y(an.$$.fragment,s),y(la.$$.fragment,s),y(ea.$$.fragment,s),y(pa.$$.fragment,s),y(en.$$.fragment,s),y(oa.$$.fragment,s),y(ta.$$.fragment,s),_e=!0)},o(s){i(H.$$.fragment,s),i(us.$$.fragment,s),i(ms.$$.fragment,s),i(rn.$$.fragment,s),i(ds.$$.fragment,s),i(gs.$$.fragment,s),i(cn.$$.fragment,s),i(Dn.$$.fragment,s),i(Fn.$$.fragment,s),i(yn.$$.fragment,s),i(bs.$$.fragment,s),i(hs.$$.fragment,s),i(fn.$$.fragment,s),i(_s.$$.fragment,s),i($n.$$.fragment,s),i(Cn.$$.fragment,s),i(An.$$.fragment,s),i(ws.$$.fragment,s),i(un.$$.fragment,s),i(Es.$$.fragment,s),i(mn.$$.fragment,s),i(vs.$$.fragment,s),i(xs.$$.fragment,s),i(gn.$$.fragment,s),i(ks.$$.fragment,s),i(bn.$$.fragment,s),i(hn.$$.fragment,s),i(Ws.$$.fragment,s),i(_n.$$.fragment,s),i(js.$$.fragment,s),i(wn.$$.fragment,s),i(Hs.$$.fragment,s),i(En.$$.fragment,s),i(Ps.$$.fragment,s),i(vn.$$.fragment,s),i(qs.$$.fragment,s),i(xn.$$.fragment,s),i(Ms.$$.fragment,s),i(kn.$$.fragment,s),i(Bs.$$.fragment,s),i(On.$$.fragment,s),i(Ts.$$.fragment,s),i(Wn.$$.fragment,s),i(Hn.$$.fragment,s),i(Rs.$$.fragment,s),i(Pn.$$.fragment,s),i(Ns.$$.fragment,s),i(qn.$$.fragment,s),i(Vs.$$.fragment,s),i(Mn.$$.fragment,s),i(Ss.$$.fragment,s),i(Bn.$$.fragment,s),i(Is.$$.fragment,s),i(Tn.$$.fragment,s),i(Us.$$.fragment,s),i(Rn.$$.fragment,s),i(Ks.$$.fragment,s),i(Nn.$$.fragment,s),i(zs.$$.fragment,s),i(Vn.$$.fragment,s),i(Gs.$$.fragment,s),i(Sn.$$.fragment,s),i(Ys.$$.fragment,s),i(In.$$.fragment,s),i(Ls.$$.fragment,s),i(Un.$$.fragment,s),i(Qs.$$.fragment,s),i(Kn.$$.fragment,s),i(Js.$$.fragment,s),i(zn.$$.fragment,s),i(Xs.$$.fragment,s),i(Gn.$$.fragment,s),i(Yn.$$.fragment,s),i(Ln.$$.fragment,s),i(Zs.$$.fragment,s),i(Qn.$$.fragment,s),i(Jn.$$.fragment,s),i(Xn.$$.fragment,s),i(Zn.$$.fragment,s),i(sn.$$.fragment,s),i(sa.$$.fragment,s),i(na.$$.fragment,s),i(aa.$$.fragment,s),i(an.$$.fragment,s),i(la.$$.fragment,s),i(ea.$$.fragment,s),i(pa.$$.fragment,s),i(en.$$.fragment,s),i(oa.$$.fragment,s),i(ta.$$.fragment,s),_e=!1},d(s){s&&a(e),s&&a(o),s&&a(h),s&&a(x),s&&a(O),f(H),s&&a(fl),f(us,s),s&&a($l),s&&a(L),f(ms),s&&a(Cl),f(rn,s),s&&a(Q),f(ds),s&&a(Al),s&&a(P),f(gs),f(cn),s&&a(ul),s&&a(k),f(Dn),f(Fn),f(yn),f(bs),s&&a(ml),s&&a(J),f(hs),s&&a(dl),f(fn,s),s&&a(q),f(_s),f($n),s&&a(gl),s&&a(X),f(Cn),f(An),s&&a(bl),s&&a(Z),f(ws),s&&a(hl),f(un,s),s&&a(M),f(Es),f(mn),s&&a(_l),s&&a(dn),f(vs),s&&a(wl),s&&a(ss),f(xs),s&&a(El),f(gn,s),s&&a(B),f(ks),f(bn),s&&a(vl),s&&a(Os),f(hn),s&&a(xl),s&&a(ns),f(Ws),s&&a(kl),f(_n,s),s&&a(T),f(js),f(wn),s&&a(Ol),s&&a(ga),s&&a(Wl),s&&a(as),f(Hs),s&&a(jl),f(En,s),s&&a(R),f(Ps),f(vn),s&&a(Hl),s&&a(ba),s&&a(Pl),s&&a(ls),f(qs),s&&a(ql),f(xn,s),s&&a(N),f(Ms),f(kn),s&&a(Ml),s&&a(ha),s&&a(Bl),s&&a(es),f(Bs),s&&a(Tl),f(On,s),s&&a(V),f(Ts),f(Wn),s&&a(Rl),s&&a(jn),f(Hn),s&&a(Nl),s&&a(ps),f(Rs),s&&a(Vl),f(Pn,s),s&&a(S),f(Ns),f(qn),s&&a(Sl),s&&a(_a),s&&a(Il),s&&a(os),f(Vs),s&&a(Ul),f(Mn,s),s&&a(I),f(Ss),f(Bn),s&&a(Kl),s&&a(wa),s&&a(zl),s&&a(ts),f(Is),s&&a(Gl),f(Tn,s),s&&a(U),f(Us),f(Rn),s&&a(Yl),s&&a(Ea),s&&a(Ll),s&&a(rs),f(Ks),s&&a(Ql),f(Nn,s),s&&a(K),f(zs),f(Vn),s&&a(Jl),s&&a(va),s&&a(Xl),s&&a(cs),f(Gs),s&&a(Zl),f(Sn,s),s&&a(z),f(Ys),f(In),s&&a(se),s&&a(xa),s&&a(ne),s&&a(Ds),f(Ls),s&&a(ae),f(Un,s),s&&a(G),f(Qs),f(Kn),s&&a(le),s&&a(ka),s&&a(ee),s&&a(Fs),f(Js),s&&a(pe),f(zn,s),s&&a(ys),f(Xs),s&&a(oe),s&&a(W),f(Gn),f(Yn),f(Ln),s&&a(te),s&&a(is),f(Zs),s&&a(re),s&&a(Oa),s&&a(ce),s&&a(fs),s&&a(De),s&&a(Y),f(Qn),f(Jn),s&&a(Fe),s&&a(Wa),s&&a(ye),f(Xn,s),s&&a(ja),s&&a(ie),f(Zn,s),s&&a($s),f(sn),s&&a(fe),s&&a(Ha),s&&a($e),s&&a(Pa),f(sa),s&&a(Ce),s&&a(nn),f(na),s&&a(Ae),f(aa,s),s&&a(Cs),f(an),s&&a(ue),s&&a(qa),s&&a(me),s&&a(Ma),f(la),s&&a(de),s&&a(ln),f(ea),s&&a(ge),f(pa,s),s&&a(As),f(en),s&&a(be),s&&a(pn),f(oa),s&&a(he),f(ta,s)}}}class wt extends _o{constructor(e){super(),wo(this,e,null,$t,Eo,{})}}export{wt as default};
