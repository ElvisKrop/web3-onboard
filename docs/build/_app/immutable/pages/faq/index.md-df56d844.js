import{S as Re,i as Ue,s as Xe,e as n,t as i,k as u,w as oe,c as s,a as l,h as c,d as t,m as h,x as ae,g as w,M as e,y as re,q as ne,o as se,B as le}from"../../chunks/index-4af071d0.js";import"../../chunks/scroll-9ce8c56b.js";import{L as ie}from"../../chunks/Link-5aa5b43b.js";/* empty css                                                         */import"../../chunks/singletons-13ae2ec1.js";function et($){let a;return{c(){a=i("discord")},l(r){a=c(r,"discord")},m(r,m){w(r,a,m)},d(r){r&&t(a)}}}function tt($){let a;return{c(){a=i("here\u2019s the link to our github")},l(r){a=c(r,"here\u2019s the link to our github")},m(r,m){w(r,a,m)},d(r){r&&t(a)}}}function ot($){let a;return{c(){a=i("get one here")},l(r){a=c(r,"get one here")},m(r,m){w(r,a,m)},d(r){r&&t(a)}}}function at($){let a;return{c(){a=i("this list in the docs")},l(r){a=c(r,"this list in the docs")},m(r,m){w(r,a,m)},d(r){r&&t(a)}}}function rt($){let a,r,m,b,ce,_,pe,O,p,E,M,fe,de,B,ue,v,he,y,F,me,$e,V,we,be,I,J,_e,ve,D,ke,k,ge,P,N,Ee,ye,Q,Ie,Pe,Y,S,Ye,Ae,T,Le,xe,A,W,qe,ze,C,Be,De,L,H,Me,Fe,x,Ve,g,Je,Z;return _=new ie({props:{href:"https://discord.com/invite/KZaBVME",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[et]},$$scope:{ctx:$}}}),v=new ie({props:{href:"https://github.com/blocknative/web3-onboard",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[tt]},$$scope:{ctx:$}}}),k=new ie({props:{href:"https://explorer.blocknative.com/account",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ot]},$$scope:{ctx:$}}}),g=new ie({props:{href:"/docs/overview/introduction#supported-networks",$$slots:{default:[at]},$$scope:{ctx:$}}}),{c(){a=n("h1"),r=i("Frequently Asked Questions"),m=u(),b=n("p"),ce=i("Join our "),oe(_.$$.fragment),pe=i(" if you want to chat with us in real time."),O=u(),p=n("ol"),E=n("li"),M=n("p"),fe=i("Is web3-onboard open source?"),de=u(),B=n("p"),ue=i("Yes, "),oe(v.$$.fragment),he=u(),y=n("li"),F=n("p"),me=i("Is web3-onboard free?"),$e=u(),V=n("p"),we=i("Yes it\u2019s free to use forever."),be=u(),I=n("li"),J=n("p"),_e=i("Do I need an API key?"),ve=u(),D=n("p"),ke=i("No you don\u2019t need an API key to use web3-onboard. The optional addition of an API key allows access to transaction notifications and more frequent gas estimates from Blocknative. You can "),oe(k.$$.fragment),ge=u(),P=n("li"),N=n("p"),Ee=i("Which frameworks does web3-onboard support?"),ye=u(),Q=n("p"),Ie=i("web3-onboard is framework agnostic and is usable with your favorite framework."),Pe=u(),Y=n("li"),S=n("p"),Ye=i("Is web3-onboard customizable?"),Ae=u(),T=n("p"),Le=i("Yes, we\u2019ve made a theming interface here to show how you can theme web3-onboard for your dapp."),xe=u(),A=n("li"),W=n("p"),qe=i("Are there any code examples?"),ze=u(),C=n("p"),Be=i("Yes, we\u2019ve made a connect wallet example available here."),De=u(),L=n("li"),H=n("p"),Me=i("Does web3-onboard support my favorite network?"),Fe=u(),x=n("p"),Ve=i("web3-onboard is compatible with all EVM networks, which can be specified on initialization. You can add your chain to "),oe(g.$$.fragment),Je=i(" to call out its support.")},l(o){a=s(o,"H1",{});var f=l(a);r=c(f,"Frequently Asked Questions"),f.forEach(t),m=h(o),b=s(o,"P",{});var q=l(b);ce=c(q,"Join our "),ae(_.$$.fragment,q),pe=c(q," if you want to chat with us in real time."),q.forEach(t),O=h(o),p=s(o,"OL",{});var d=l(p);E=s(d,"LI",{});var z=l(E);M=s(z,"P",{});var K=l(M);fe=c(K,"Is web3-onboard open source?"),K.forEach(t),de=h(z),B=s(z,"P",{});var Ne=l(B);ue=c(Ne,"Yes, "),ae(v.$$.fragment,Ne),Ne.forEach(t),z.forEach(t),he=h(d),y=s(d,"LI",{});var j=l(y);F=s(j,"P",{});var Se=l(F);me=c(Se,"Is web3-onboard free?"),Se.forEach(t),$e=h(j),V=s(j,"P",{});var Te=l(V);we=c(Te,"Yes it\u2019s free to use forever."),Te.forEach(t),j.forEach(t),be=h(d),I=s(d,"LI",{});var G=l(I);J=s(G,"P",{});var We=l(J);_e=c(We,"Do I need an API key?"),We.forEach(t),ve=h(G),D=s(G,"P",{});var Qe=l(D);ke=c(Qe,"No you don\u2019t need an API key to use web3-onboard. The optional addition of an API key allows access to transaction notifications and more frequent gas estimates from Blocknative. You can "),ae(k.$$.fragment,Qe),Qe.forEach(t),G.forEach(t),ge=h(d),P=s(d,"LI",{});var R=l(P);N=s(R,"P",{});var Ce=l(N);Ee=c(Ce,"Which frameworks does web3-onboard support?"),Ce.forEach(t),ye=h(R),Q=s(R,"P",{});var He=l(Q);Ie=c(He,"web3-onboard is framework agnostic and is usable with your favorite framework."),He.forEach(t),R.forEach(t),Pe=h(d),Y=s(d,"LI",{});var U=l(Y);S=s(U,"P",{});var Ke=l(S);Ye=c(Ke,"Is web3-onboard customizable?"),Ke.forEach(t),Ae=h(U),T=s(U,"P",{});var Oe=l(T);Le=c(Oe,"Yes, we\u2019ve made a theming interface here to show how you can theme web3-onboard for your dapp."),Oe.forEach(t),U.forEach(t),xe=h(d),A=s(d,"LI",{});var X=l(A);W=s(X,"P",{});var Ze=l(W);qe=c(Ze,"Are there any code examples?"),Ze.forEach(t),ze=h(X),C=s(X,"P",{});var je=l(C);Be=c(je,"Yes, we\u2019ve made a connect wallet example available here."),je.forEach(t),X.forEach(t),De=h(d),L=s(d,"LI",{});var ee=l(L);H=s(ee,"P",{});var Ge=l(H);Me=c(Ge,"Does web3-onboard support my favorite network?"),Ge.forEach(t),Fe=h(ee),x=s(ee,"P",{});var te=l(x);Ve=c(te,"web3-onboard is compatible with all EVM networks, which can be specified on initialization. You can add your chain to "),ae(g.$$.fragment,te),Je=c(te," to call out its support."),te.forEach(t),ee.forEach(t),d.forEach(t)},m(o,f){w(o,a,f),e(a,r),w(o,m,f),w(o,b,f),e(b,ce),re(_,b,null),e(b,pe),w(o,O,f),w(o,p,f),e(p,E),e(E,M),e(M,fe),e(E,de),e(E,B),e(B,ue),re(v,B,null),e(p,he),e(p,y),e(y,F),e(F,me),e(y,$e),e(y,V),e(V,we),e(p,be),e(p,I),e(I,J),e(J,_e),e(I,ve),e(I,D),e(D,ke),re(k,D,null),e(p,ge),e(p,P),e(P,N),e(N,Ee),e(P,ye),e(P,Q),e(Q,Ie),e(p,Pe),e(p,Y),e(Y,S),e(S,Ye),e(Y,Ae),e(Y,T),e(T,Le),e(p,xe),e(p,A),e(A,W),e(W,qe),e(A,ze),e(A,C),e(C,Be),e(p,De),e(p,L),e(L,H),e(H,Me),e(L,Fe),e(L,x),e(x,Ve),re(g,x,null),e(x,Je),Z=!0},p(o,[f]){const q={};f&1&&(q.$$scope={dirty:f,ctx:o}),_.$set(q);const d={};f&1&&(d.$$scope={dirty:f,ctx:o}),v.$set(d);const z={};f&1&&(z.$$scope={dirty:f,ctx:o}),k.$set(z);const K={};f&1&&(K.$$scope={dirty:f,ctx:o}),g.$set(K)},i(o){Z||(ne(_.$$.fragment,o),ne(v.$$.fragment,o),ne(k.$$.fragment,o),ne(g.$$.fragment,o),Z=!0)},o(o){se(_.$$.fragment,o),se(v.$$.fragment,o),se(k.$$.fragment,o),se(g.$$.fragment,o),Z=!1},d(o){o&&t(a),o&&t(m),o&&t(b),le(_),o&&t(O),o&&t(p),le(v),le(k),le(g)}}}class pt extends Re{constructor(a){super(),Ue(this,a,null,rt,Xe,{})}}export{pt as default};
