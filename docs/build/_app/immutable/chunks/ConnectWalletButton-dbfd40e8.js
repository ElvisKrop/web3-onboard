import{S as q,i as H,s as N,e as F,t as J,c as S,a as Q,h as X,d as _,b as Z,g as $,M as tt,P as et,j as ot,E as u,v as at}from"./index-4af071d0.js";import{_ as t}from"./preload-helper-60cab3ee.js";var nt='<svg id="Layer_1" height="100%" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 380.94 434.03"><defs><style>.cls-1{fill:#262a3d;}.cls-2{fill:url(#linear-gradient);}.cls-3{fill:url(#linear-gradient-2);}</style><linearGradient id="linear-gradient" x1="2.19" y1="163.03" x2="188.9" y2="163.03" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#55ccfe"/><stop offset="1" stop-color="#5e93ef"/></linearGradient><linearGradient id="linear-gradient-2" x1="2.19" y1="324.73" x2="375.61" y2="324.73" xlink:href="#linear-gradient"/></defs><polygon class="cls-1" points="64.42 324.73 2.19 216.93 126.66 216.93 126.66 216.93 188.9 324.73 64.42 324.73"/><polygon class="cls-2" points="126.66 216.93 2.19 216.93 64.42 109.13 188.9 109.13 126.66 216.93"/><polygon class="cls-1" points="251.14 216.93 188.9 109.13 64.42 109.13 2.19 1.33 251.14 1.33 375.61 216.93 251.14 216.93"/><polygon class="cls-3" points="251.14 432.53 2.19 432.53 64.42 324.73 188.9 324.73 251.14 216.93 375.61 216.93 251.14 432.53"/></svg>';let c;const lt=async()=>(c||(c=await it()),c),it=async()=>{const{default:s}=await t(()=>import("@web3-onboard/core"),[]),{default:o}=await t(()=>import("@web3-onboard/injected-wallets"),[]),{default:a}=await t(()=>import("@web3-onboard/trezor"),[]),{default:e}=await t(()=>import("@web3-onboard/ledger"),[]),{default:l}=await t(()=>import("@web3-onboard/walletconnect"),[]),{default:n}=await t(()=>import("@web3-onboard/coinbase"),[]),{default:i}=await t(()=>import("@web3-onboard/dcent"),[]),{default:r}=await t(()=>import("@web3-onboard/portis"),[]),{default:p}=await t(()=>import("@web3-onboard/magic"),[]),{default:m}=await t(()=>import("@web3-onboard/keystone"),[]),{default:f}=await t(()=>import("@web3-onboard/fortmatic"),[]),{default:b}=await t(()=>import("@web3-onboard/keepkey"),[]),{default:h}=await t(()=>import("@web3-onboard/gnosis"),[]),{default:w}=await t(()=>import("@web3-onboard/sequence"),[]),{default:E}=await t(()=>import("@web3-onboard/tallyho"),[]),{default:g}=await t(()=>import("@web3-onboard/enkrypt"),[]),{default:y}=await t(()=>import("@web3-onboard/mew-wallet"),[]),{default:v}=await t(()=>import("./index-80fcfa25.js"),["chunks/index-80fcfa25.js","chunks/preload-helper-60cab3ee.js"]),{default:O}=await t(()=>import("@web3-onboard/web3auth"),[]),{default:A}=await t(()=>import("@web3-onboard/uauth"),[]),d="8b60d52405694345a99bcb82e722e0af",k=o(),I=n(),M=i(),T=l(),D=e(),x=m(),P=b(),L=h(),R=w(),V=g(),C=y(),U=E(),B=v(),W=r({apiKey:"b2b7586f-2b1e-4c30-a7fb-c2d1533b153b"}),j=f({apiKey:"pk_test_886ADCAB855632AA"}),z=O({clientId:"DJuUOKvmNnlzy6ruVgeWYWIMKLRyYtjYa9Y10VCeJzWZcygDlrYLyXsBQjpJ2hxlBO9dnl8t9GmAC2qOP5vnIGo"}),G=a({email:"test@test.com",appUrl:"https://www.blocknative.com"}),K=A({clientID:"a25c3a65-a1f2-46cc-a515-a46fe7acb78c",redirectUri:"http://localhost:8080/",scope:"openid wallet email:optional humanity_check:optional profile:optional social:optional"}),Y=p({apiKey:"pk_live_02207D744E81C2BA"});return s({wallets:[k,T,I,D,G,L,K,U,B,R,z,M,V,C,Y,j,x,P,W],chains:[{id:"0x1",token:"ETH",label:"Ethereum Mainnet",rpcUrl:`https://mainnet.infura.io/v3/${d}`},{id:"0x5",token:"ETH",label:"Goerli",rpcUrl:`https://goerli.infura.io/v3/${d}`},{id:"0x13881",token:"MATIC",label:"Polygon - Mumbai",rpcUrl:"https://matic-mumbai.chainstacklabs.com"},{id:"0x38",token:"BNB",label:"Binance",rpcUrl:"https://bsc-dataseed.binance.org/"},{id:"0x89",token:"MATIC",label:"Polygon",rpcUrl:"https://matic-mainnet.chainstacklabs.com"},{id:"0xfa",token:"FTM",label:"Fantom",rpcUrl:"https://rpc.ftm.tools/"},{id:"0xA",token:"OETH",label:"Optimism",rpcUrl:"https://mainnet.optimism.io"},{id:"0xA4B1",token:"ARB-ETH",label:"Arbitrum",rpcUrl:"https://rpc.ankr.com/arbitrum"}],appMetadata:{name:"Documentation",icon:nt,description:"Example showcasing how to connect a wallet.",recommendedInjectedWallets:[{name:"MetaMask",url:"https://metamask.io"},{name:"Coinbase",url:"https://wallet.coinbase.com/"}]},accountCenter:{desktop:{enabled:!0},mobile:{enabled:!0}}})};function st(s){let o,a,e,l;return{c(){o=F("button"),a=J(s[0]),this.h()},l(n){o=S(n,"BUTTON",{class:!0});var i=Q(o);a=X(i,s[0]),i.forEach(_),this.h()},h(){Z(o,"class","rounded-lg bg-gray-inverse hover:bg-gray-hover hover:text-gray-inverse transition-all px-4 h-10 text-base text-gray-current")},m(n,i){$(n,o,i),tt(o,a),e||(l=et(o,"click",s[2]),e=!0)},p(n,[i]){i&1&&ot(a,n[0])},i:u,o:u,d(n){n&&_(o),e=!1,l()}}}function rt(s,o,a){let e,l="Connect";async function n(){if(e&&e.state.get().wallets.length){e.disconnectWallet({label:e.state.get().wallets[0].label}),a(0,l="Connect");return}e&&await e.connectWallet()}return at(async()=>{e||(e=await lt()),e.state.select("wallets").subscribe(r=>{a(0,l=r.length?"Disconnect":a(0,l="Connect"))}),a(0,l=e.state.get().wallets.length?"Disconnect":a(0,l="Connect"))}),[l,n,()=>n()]}class pt extends q{constructor(o){super(),H(this,o,rt,st,N,{})}}export{pt as C,lt as g};
