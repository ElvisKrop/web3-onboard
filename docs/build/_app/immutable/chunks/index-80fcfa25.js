import{_ as a}from"./preload-helper-60cab3ee.js";function C(u){const{buttonPosition:d,modalZIndex:h,apiKey:l,buildEnv:_,enableLogging:w,loginConfig:p,showTorusButton:E,integrity:I,whiteLabel:g,skipTKey:m}=u||{};return()=>({label:"Torus",getIcon:async()=>(await a(()=>import("./icon-e781e70a.js"),[])).default,getInterface:async({chains:c})=>{const{default:f}=await a(()=>import("./torus.esm-ea47bf7b.js"),["chunks/torus.esm-ea47bf7b.js","chunks/inherits_browser-f6c1f07e.js"]),{createEIP1193Provider:P,ProviderRpcErrorCode:b,ProviderRpcError:v}=await a(()=>import("./index-1cfebb06.js"),[]),[i]=c;let r=new f({buttonPosition:d,modalZIndex:h,apiKey:l});await r.init({buildEnv:_,enableLogging:w,network:{host:i.rpcUrl,chainId:parseInt(i.id),networkName:i.label},showTorusButton:E,loginConfig:p,integrity:I,whiteLabel:g,skipTKey:m});const n=r.provider,T=n.on.bind(n);n.on=(e,t)=>(T(e,o=>{if(e==="chainChanged"){t(`0x${o.toString(16)}`);return}t(o)}),n);const s=P(n,{eth_requestAccounts:async()=>{try{return await r.login()}catch{throw new v({code:b.ACCOUNT_ACCESS_REJECTED,message:"Account access rejected"})}},eth_selectAccounts:null,wallet_switchEthereumChain:async({params:e})=>{const t=c.find(({id:o})=>o===e[0].chainId);if(!t)throw new Error("chain must be set before switching");return await r.setProvider({host:t.rpcUrl,chainId:parseInt(t.id),networkName:t.label}),null},eth_chainId:async({baseRequest:e})=>{const t=await e({method:"eth_chainId"});return`0x${parseInt(t).toString(16)}`}});return s.disconnect=()=>r.cleanUp(),{provider:s,instance:r}}})}export{C as default};
